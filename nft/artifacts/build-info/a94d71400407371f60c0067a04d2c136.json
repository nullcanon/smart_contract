{
	"id": "a94d71400407371f60c0067a04d2c136",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/LPStakeWithdrawNft.sol": {
				"content": "// contracts/Farming.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\n\r\n\r\nlibrary LibSafeMathForUint256Utils {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMathForUint256: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMathForUint256: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0 || b == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMathForUint256: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMathForUint256: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMathForUint256: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    function power(uint256 a, uint256 b) internal pure returns (uint256){\r\n\r\n        if(a == 0) return 0;\r\n        if(b == 0) return 1;\r\n\r\n        uint256 c = 1;\r\n        for(uint256 i = 0; i < b; i++){\r\n            c = mul(c, a);\r\n        }\r\n    }\r\n\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\nlibrary LibArrayForUint256Utils {\r\n\r\n\t/**\r\n\t * @dev Searches a sortd uint256 array and returns the first element index that \r\n\t * match the key value, Time complexity O(log n)\r\n\t *\r\n\t * @param array is expected to be sorted in ascending order\r\n\t * @param key is element \r\n\t *\r\n\t * @return if matches key in the array return true,else return false \r\n\t * @return the first element index that match the key value,if not exist,return 0\r\n\t */\r\n\tfunction binarySearch(uint256[] storage array, uint256 key) internal view returns (bool, uint) {\r\n        if(array.length == 0){\r\n        \treturn (false, 0);\r\n        }\r\n\r\n        uint256 low = 0;\r\n        uint256 high = array.length-1;\r\n\r\n        while(low <= high){\r\n        \tuint256 mid = LibSafeMathForUint256Utils.average(low, high);\r\n        \tif(array[mid] == key){\r\n        \t\treturn (true, mid);\r\n        \t}else if (array[mid] > key) {\r\n                high = mid - 1;\r\n            } else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n\r\n        return (false, 0);\r\n    }\r\n\r\n    function firstIndexOf(uint256[] storage array, uint256 key) internal view returns (bool, uint256) {\r\n\r\n    \tif(array.length == 0){\r\n    \t\treturn (false, 0);\r\n    \t}\r\n\r\n    \tfor(uint256 i = 0; i < array.length; i++){\r\n    \t\tif(array[i] == key){\r\n    \t\t\treturn (true, i);\r\n    \t\t}\r\n    \t}\r\n    \treturn (false, 0);\r\n    }\r\n\r\n    function reverse(uint256[] storage array) internal {\r\n        uint256 temp;\r\n        for (uint i = 0; i < array.length / 2; i++) {\r\n            temp = array[i];\r\n            array[i] = array[array.length - 1 - i];\r\n            array[array.length - 1 - i] = temp;\r\n        }\r\n    }\r\n\r\n    function equals(uint256[] storage a, uint256[] storage b) internal view returns (bool){\r\n    \tif(a.length != b.length){\r\n    \t\treturn false;\r\n    \t}\r\n    \tfor(uint256 i = 0; i < a.length; i++){\r\n    \t\tif(a[i] != b[i]){\r\n    \t\t\treturn false;\r\n    \t\t}\r\n    \t}\r\n    \treturn true;\r\n    }\r\n\r\n    function removeByIndex(uint256[] storage array, uint index) internal{\r\n    \trequire(index < array.length, \"ArrayForUint256: index out of bounds\");\r\n\r\n        while (index < array.length - 1) {\r\n            array[index] = array[index + 1];\r\n            index++;\r\n        }\r\n        array.pop();\r\n    }\r\n    \r\n    function removeByValue(uint256[] storage array, uint256 value) internal{\r\n        uint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(isIn){\r\n          removeByIndex(array, index);\r\n        }\r\n    }\r\n\r\n    function addValue(uint256[] storage array, uint256 value) internal{\r\n    \tuint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(!isIn){\r\n        \tarray.push(value);\r\n        }\r\n    }\r\n\r\n    function extend(uint256[] storage a, uint256[] memory b) internal {\r\n    \tif(b.length != 0){\r\n    \t\tfor(uint i = 0; i < b.length; i++){\r\n    \t\t\ta.push(b[i]);\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    function distinct(uint256[] storage array) internal returns (uint256 length) {\r\n        bool contains;\r\n        uint index;\r\n        for (uint i = 0; i < array.length; i++) {\r\n            contains = false;\r\n            index = 0;\r\n            uint j = i+1;\r\n            for(;j < array.length; j++){\r\n                if(array[j] == array[i]){\r\n                    contains =true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (contains) {\r\n                for (j = index; j < array.length - 1; j++){\r\n                    array[j] = array[j + 1];\r\n                }\r\n                array.pop();\r\n                i--;\r\n            }\r\n        }\r\n        length = array.length;\r\n    }\r\n\r\n    function max(uint256[] storage array) internal view returns (uint256 maxValue, uint256 maxIndex) {\r\n        maxValue = array[0];\r\n        maxIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] > maxValue){\r\n                maxValue = array[i];\r\n                maxIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {\r\n        minValue = array[0];\r\n        minIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] < minValue){\r\n                minValue = array[i];\r\n                minIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract Farming is Ownable , ERC1155Holder{\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    \r\n    struct UserInfo {\r\n        uint256 amount;           // current staked LP\r\n        uint256 lastUpdateTime;   // unix timestamp for last details update (when pointsDebt calculated)\r\n        uint256 pointsDebt;       // total points collected before latest deposit 结算数量\r\n    }\r\n    \r\n    struct NFTInfo {\r\n        address contractAddress;\r\n        uint256 id;             // NFT id\r\n        uint256 remaining;      // NFTs remaining to farm\r\n        uint256 price;          // points required to claim NFT\r\n    }\r\n    \r\n    IERC20 public lpToken;             // token being staked\r\n    \r\n    uint256[] public nftIds;\r\n    mapping(address => UserInfo) public users;\r\n    address[] private userlist;\r\n\r\n    uint256 private withdrawAmount = 0;\r\n    uint256 private lpUnitValue = 1065;\r\n    uint256 private timeUnitValue = 864000;\r\n    uint256 private threshold = lpUnitValue * timeUnitValue * 10 ** 18;\r\n\r\n    event NFTAdded(address indexed contractAddress, uint256 id, uint256 total, uint256 price);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Claim(address indexed user, uint256 nftId, uint256 quantity);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    \r\n    constructor() {\r\n    }\r\n\r\n    function addNFTBatch(\r\n        address nftContractAddress,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) external  onlyOwner{\r\n        LibArrayForUint256Utils.extend(nftIds ,ids);\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function addNftBatchWithNumber(\r\n        address nftContractAddress,\r\n        uint256 start,\r\n        uint256 idsNumber\r\n    ) public onlyOwner {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i-start] = i;\r\n            amounts[i-start] = 1;\r\n        }\r\n\r\n        LibArrayForUint256Utils.extend(nftIds ,ids);\r\n\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function stake(uint256 amount) external {\r\n        lpToken.safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            amount\r\n        );\r\n        \r\n        UserInfo storage user = users[msg.sender];\r\n        userlist.push(msg.sender);\r\n        \r\n        // already deposited before\r\n        if(user.amount != 0) {\r\n            user.pointsDebt = pointsBalance(msg.sender);\r\n        }\r\n        user.amount = user.amount.add(amount);\r\n        user.lastUpdateTime = block.timestamp;\r\n\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n    \r\n    // claim nft if points threshold reached\r\n    function claim(address nftContractAddress) public {\r\n        require(nftIds.length > 0, \"All NFTs farmed\");\r\n        require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\");\r\n        UserInfo storage user = users[msg.sender];\r\n        \r\n        // deduct points\r\n        user.pointsDebt = pointsBalance(msg.sender).sub(threshold);\r\n        user.lastUpdateTime = block.timestamp;\r\n        \r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\r\n        LibArrayForUint256Utils.removeByIndex(nftIds, index);\r\n\r\n        // transfer nft\r\n        IERC1155(nftContractAddress).safeTransferFrom(\r\n            address(this),\r\n            msg.sender,\r\n            minTokenId,\r\n            1,\r\n            \"\"\r\n        );\r\n        ++withdrawAmount;\r\n\r\n        emit Claim(msg.sender, minTokenId, 1);\r\n    }\r\n    \r\n    \r\n    function withdraw(uint256 amount) public {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.amount >= amount, \"Insufficient staked\");\r\n        \r\n        // update users\r\n        user.pointsDebt = pointsBalance(msg.sender);\r\n        user.amount = user.amount.sub(amount);\r\n        if (user.amount == 0) {\r\n            if(user.pointsDebt > threshold) {\r\n                uint number = user.pointsDebt.div(threshold);\r\n                user.pointsDebt = threshold.mul(number);\r\n            } else {\r\n                user.pointsDebt = 0;\r\n            }\r\n        }\r\n        user.lastUpdateTime = block.timestamp;\r\n        \r\n        lpToken.safeTransfer(\r\n            msg.sender,\r\n            amount\r\n        );\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n    \r\n    function exit() external {\r\n        withdraw(users[msg.sender].amount);\r\n    }\r\n    \r\n    function pointsBalance(address account) public view returns (uint256) {\r\n        UserInfo memory user = users[account];\r\n        return user.pointsDebt.add(_unDebitedPoints(user));\r\n    }\r\n    \r\n    function _unDebitedPoints(UserInfo memory user) internal view returns (uint256) {\r\n        uint256 blockTime = block.timestamp;\r\n        return blockTime.sub(user.lastUpdateTime).mul(user.amount);\r\n    }\r\n    \r\n    function nftCount() public view returns (uint256) {\r\n        return nftIds.length;\r\n    }\r\n\r\n    function getNextNftTokenId() public view returns (uint256) {\r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\r\n        return minTokenId;\r\n    }\r\n\r\n    function getThreshold() public view returns (uint256) {\r\n        return threshold;\r\n    }\r\n\r\n    function urgentWithdraw(address nftContractAddress) public onlyOwner{\r\n        uint256 length = nftIds.length;\r\n        uint256[] memory amounts = new uint256[](length);\r\n        for (uint256 i = 0; i < length; i++) {\r\n            amounts[i] = 1;\r\n        }\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds, amounts, \"\");\r\n        delete nftIds;\r\n    }\r\n\r\n    function setLpMintAddress(address mint) public onlyOwner {\r\n        lpToken = IERC20(mint);\r\n    }\r\n\r\n    function setLpUnitValue(uint256 value) public onlyOwner {\r\n        lpUnitValue = value;\r\n        threshold = lpUnitValue * timeUnitValue * 10 ** 18;\r\n    }\r\n\r\n    function setTimeUnitValue(uint256 value) public onlyOwner {\r\n        timeUnitValue = value;\r\n        threshold = lpUnitValue * timeUnitValue * 10 ** 18;\r\n    }\r\n    \r\n    function getLpMintAddress() public view returns (address) {\r\n        return address(lpToken) ;\r\n    }\r\n\r\n    function getLpUnitValue() public view returns (uint256) {\r\n        return lpUnitValue;\r\n    }\r\n\r\n    function getTimeUnitValue() public view returns (uint256) {\r\n        return timeUnitValue;\r\n    }\r\n\r\n    function getUserStakeAmount(address user) public view returns (uint256) {\r\n        return users[user].amount;\r\n    }\r\n\r\n    function getUserNextNftTime(address user) public view returns (uint256){\r\n        // （阈值 - 当前产出）/当前质押数量 = 时间 \r\n        uint256 v = pointsBalance(user);\r\n        while(v > threshold) {\r\n            v = v.sub(threshold);\r\n        }\r\n        uint256 userStakedAmount = getUserStakeAmount(user);\r\n        if(userStakedAmount == 0) {\r\n            return 0;\r\n        }\r\n        return threshold.sub(v).div(userStakedAmount);\r\n    }\r\n\r\n    function getWithdrawAmount() public view returns (uint256){\r\n        return withdrawAmount;\r\n    }\r\n\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/LPStakeWithdrawNft.sol": {
				"Farming": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addNFTBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "addNftBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLpMintAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLpUnitValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextNftTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTimeUnitValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserNextNftTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWithdrawAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "pointsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mint",
									"type": "address"
								}
							],
							"name": "setLpMintAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setLpUnitValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "setTimeUnitValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"name": "urgentWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdateTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pointsDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":6648:13916  contract Farming is Ownable , ERC1155Holder{... */\n  mstore(0x40, 0x80)\n    /* \"nft/LPStakeWithdrawNft.sol\":7514:7515  0 */\n  0x00\n    /* \"nft/LPStakeWithdrawNft.sol\":7481:7515  uint256 private withdrawAmount = 0 */\n  0x05\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7552:7556  1065 */\n  0x0429\n    /* \"nft/LPStakeWithdrawNft.sol\":7522:7556  uint256 private lpUnitValue = 1065 */\n  0x06\n  dup2\n  swap1\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7595:7601  864000 */\n  0x0d2f00\n    /* \"nft/LPStakeWithdrawNft.sol\":7563:7601  uint256 private timeUnitValue = 864000 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7636:7663  lpUnitValue * timeUnitValue */\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"nft/LPStakeWithdrawNft.sol\":7636:7674  lpUnitValue * timeUnitValue * 10 ** 18 */\n  tag_3\n  swap1\n    /* \"nft/LPStakeWithdrawNft.sol\":7666:7674  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"nft/LPStakeWithdrawNft.sol\":7636:7674  lpUnitValue * timeUnitValue * 10 ** 18 */\n  tag_2\n  jump\t// in\ntag_3:\n    /* \"nft/LPStakeWithdrawNft.sol\":7608:7674  uint256 private threshold = lpUnitValue * timeUnitValue * 10 ** 18 */\n  0x08\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7975:7997  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"nft/LPStakeWithdrawNft.sol\":6648:13916  contract Farming is Ownable , ERC1155Holder{... */\n  jump(tag_16)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:279   */\ntag_2:\n    /* \"#utility.yul\":54:61   */\n  0x00\n    /* \"#utility.yul\":120:121   */\n  dup2\n    /* \"#utility.yul\":116:117   */\n  0x00\n    /* \"#utility.yul\":112:118   */\n  not\n    /* \"#utility.yul\":108:122   */\n  div\n    /* \"#utility.yul\":105:106   */\n  dup4\n    /* \"#utility.yul\":102:123   */\n  gt\n    /* \"#utility.yul\":97:98   */\n  dup3\n    /* \"#utility.yul\":90:99   */\n  iszero\n    /* \"#utility.yul\":83:100   */\n  iszero\n    /* \"#utility.yul\":79:124   */\n  and\n    /* \"#utility.yul\":76:244   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":166:176   */\n  0x4e487b71\n    /* \"#utility.yul\":161:164   */\n  0xe0\n    /* \"#utility.yul\":157:177   */\n  shl\n    /* \"#utility.yul\":154:155   */\n  0x00\n    /* \"#utility.yul\":147:178   */\n  mstore\n    /* \"#utility.yul\":201:205   */\n  0x11\n    /* \"#utility.yul\":198:199   */\n  0x04\n    /* \"#utility.yul\":191:206   */\n  mstore\n    /* \"#utility.yul\":229:233   */\n  0x24\n    /* \"#utility.yul\":226:227   */\n  0x00\n    /* \"#utility.yul\":219:234   */\n  revert\n    /* \"#utility.yul\":76:244   */\ntag_18:\n  pop\n    /* \"#utility.yul\":264:273   */\n  mul\n  swap1\n    /* \"#utility.yul\":14:279   */\n  jump\t// out\ntag_16:\n    /* \"nft/LPStakeWithdrawNft.sol\":6648:13916  contract Farming is Ownable , ERC1155Holder{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":6648:13916  contract Farming is Ownable , ERC1155Holder{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xbc197c81\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe75235b8\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe75235b8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xbc197c81\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc4091443\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc6c9bd47\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdadcde10\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xa197d0db\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa197d0db\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xaa8932f1\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7612f53c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x2de1ea01\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x55ac2fd3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x55ac2fd3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5fcbd285\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x601abc54\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x63c66891\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2de1ea01\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4b02218f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x14f8beca\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x14f8beca\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x16dcb588\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1e83409a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x25ca4cff\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x027932f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0af2c6ca\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":13813:13911  function getWithdrawAmount() public view returns (uint256){... */\n    tag_4:\n        /* \"nft/LPStakeWithdrawNft.sol\":13889:13903  withdrawAmount */\n      sload(0x05)\n        /* \"nft/LPStakeWithdrawNft.sol\":13813:13911  function getWithdrawAmount() public view returns (uint256){... */\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":13813:13911  function getWithdrawAmount() public view returns (uint256){... */\n      tag_43\n        /* \"#utility.yul\":497:674   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":11682:11771  function nftCount() public view returns (uint256) {... */\n    tag_5:\n        /* \"nft/LPStakeWithdrawNft.sol\":11750:11756  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":11750:11763  nftIds.length */\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":11682:11771  function nftCount() public view returns (uint256) {... */\n      jump(tag_45)\n        /* \"nft/LPStakeWithdrawNft.sol\":12738:12897  function setTimeUnitValue(uint256 value) public onlyOwner {... */\n    tag_6:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"nft/LPStakeWithdrawNft.sol\":13348:13805  function getUserNextNftTime(address user) public view returns (uint256){... */\n    tag_7:\n      tag_45\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":9529:10368  function claim(address nftContractAddress) public {... */\n    tag_8:\n      tag_52\n      tag_62\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":11268:11455  function pointsBalance(address account) public view returns (uint256) {... */\n    tag_9:\n      tag_45\n      tag_65\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":12575:12730  function setLpUnitValue(uint256 value) public onlyOwner {... */\n    tag_10:\n      tag_52\n      tag_69\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":10386:11166  function withdraw(uint256 amount) public {... */\n    tag_11:\n      tag_52\n      tag_72\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":8331:8909  function addNftBatchWithNumber(... */\n    tag_12:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":11779:11958  function getNextNftTokenId() public view returns (uint256) {... */\n    tag_13:\n      tag_45\n      tag_79\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":7300:7321  IERC20 public lpToken */\n    tag_14:\n      sload(0x01)\n      tag_81\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_81:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1739:1771   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1721:1772   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1709:1711   */\n      0x20\n        /* \"#utility.yul\":1694:1712   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":7300:7321  IERC20 public lpToken */\n      tag_43\n        /* \"#utility.yul\":1560:1778   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":13018:13111  function getLpUnitValue() public view returns (uint256) {... */\n    tag_15:\n        /* \"nft/LPStakeWithdrawNft.sol\":13092:13103  lpUnitValue */\n      sload(0x06)\n        /* \"nft/LPStakeWithdrawNft.sol\":13018:13111  function getLpUnitValue() public view returns (uint256) {... */\n      jump(tag_45)\n        /* \"nft/LPStakeWithdrawNft.sol\":8005:8323  function addNFTBatch(... */\n    tag_16:\n      tag_52\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_52\n      tag_93\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":13224:13340  function getUserStakeAmount(address user) public view returns (uint256) {... */\n    tag_18:\n      tag_45\n      tag_95\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":13287:13294  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13319  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13332  users[user].amount */\n      sload\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":13224:13340  function getUserStakeAmount(address user) public view returns (uint256) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_81)\n        /* \"nft/LPStakeWithdrawNft.sol\":12909:13010  function getLpMintAddress() public view returns (address) {... */\n    tag_20:\n        /* \"nft/LPStakeWithdrawNft.sol\":12993:13000  lpToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"nft/LPStakeWithdrawNft.sol\":12909:13010  function getLpMintAddress() public view returns (address) {... */\n      jump(tag_81)\n        /* \"nft/LPStakeWithdrawNft.sol\":8917:9471  function stake(uint256 amount) external {... */\n    tag_21:\n      tag_52\n      tag_106\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":7398:7439  mapping(address => UserInfo) public users */\n    tag_22:\n      tag_108\n      tag_109\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_109:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_108:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3996:4021   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4037:4055   */\n      dup5\n      add\n        /* \"#utility.yul\":4030:4064   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4080:4098   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4073:4107   */\n      mstore\n        /* \"#utility.yul\":3984:3986   */\n      0x60\n        /* \"#utility.yul\":3969:3987   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":7398:7439  mapping(address => UserInfo) public users */\n      tag_43\n        /* \"#utility.yul\":3794:4113   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":12469:12567  function setLpMintAddress(address mint) public onlyOwner {... */\n    tag_23:\n      tag_52\n      tag_114\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_24:\n      tag_116\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_116:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":5763:5796   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5745:5797   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5733:5735   */\n      0x20\n        /* \"#utility.yul\":5718:5736   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_43\n        /* \"#utility.yul\":5601:5803   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":12063:12461  function urgentWithdraw(address nftContractAddress) public onlyOwner{... */\n    tag_25:\n      tag_52\n      tag_123\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":7368:7391  uint256[] public nftIds */\n    tag_26:\n      tag_45\n      tag_126\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":13119:13216  function getTimeUnitValue() public view returns (uint256) {... */\n    tag_27:\n        /* \"nft/LPStakeWithdrawNft.sol\":13195:13208  timeUnitValue */\n      sload(0x07)\n        /* \"nft/LPStakeWithdrawNft.sol\":13119:13216  function getTimeUnitValue() public view returns (uint256) {... */\n      jump(tag_45)\n        /* \"nft/LPStakeWithdrawNft.sol\":11966:12055  function getThreshold() public view returns (uint256) {... */\n    tag_28:\n        /* \"nft/LPStakeWithdrawNft.sol\":12038:12047  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":11966:12055  function getThreshold() public view returns (uint256) {... */\n      jump(tag_45)\n        /* \"nft/LPStakeWithdrawNft.sol\":11178:11256  function exit() external {... */\n    tag_29:\n      tag_52\n      tag_136\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_30:\n      tag_116\n      tag_138\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_138:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_52\n      tag_143\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_42:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_147\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_147:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":12738:12897  function setTimeUnitValue(uint256 value) public onlyOwner {... */\n    tag_55:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"nft/LPStakeWithdrawNft.sol\":12807:12820  timeUnitValue */\n      0x07\n        /* \"nft/LPStakeWithdrawNft.sol\":12807:12828  timeUnitValue = value */\n      dup2\n      swap1\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":12851:12862  lpUnitValue */\n      sload(0x06)\n        /* \"nft/LPStakeWithdrawNft.sol\":12851:12878  lpUnitValue * timeUnitValue */\n      tag_159\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12823:12828  value */\n      dup3\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12851:12878  lpUnitValue * timeUnitValue */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"nft/LPStakeWithdrawNft.sol\":12851:12889  lpUnitValue * timeUnitValue * 10 ** 18 */\n      tag_161\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12881:12889  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"nft/LPStakeWithdrawNft.sol\":12851:12889  lpUnitValue * timeUnitValue * 10 ** 18 */\n      tag_160\n      jump\t// in\n    tag_161:\n        /* \"nft/LPStakeWithdrawNft.sol\":12839:12848  threshold */\n      0x08\n        /* \"nft/LPStakeWithdrawNft.sol\":12839:12889  threshold = lpUnitValue * timeUnitValue * 10 ** 18 */\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12738:12897  function setTimeUnitValue(uint256 value) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":13348:13805  function getUserNextNftTime(address user) public view returns (uint256){... */\n    tag_59:\n        /* \"nft/LPStakeWithdrawNft.sol\":13411:13418  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":13499:13508  uint256 v */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":13511:13530  pointsBalance(user) */\n      tag_163\n        /* \"nft/LPStakeWithdrawNft.sol\":13525:13529  user */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":13511:13524  pointsBalance */\n      tag_66\n        /* \"nft/LPStakeWithdrawNft.sol\":13511:13530  pointsBalance(user) */\n      jump\t// in\n    tag_163:\n        /* \"nft/LPStakeWithdrawNft.sol\":13499:13530  uint256 v = pointsBalance(user) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":13541:13609  while(v > threshold) {... */\n    tag_164:\n        /* \"nft/LPStakeWithdrawNft.sol\":13551:13560  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":13547:13548  v */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":13547:13560  v > threshold */\n      gt\n        /* \"nft/LPStakeWithdrawNft.sol\":13541:13609  while(v > threshold) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":13587:13596  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":13581:13597  v.sub(threshold) */\n      tag_166\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":13581:13582  v */\n      dup3\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":13581:13586  v.sub */\n      tag_167\n        /* \"nft/LPStakeWithdrawNft.sol\":13581:13597  v.sub(threshold) */\n      jump\t// in\n    tag_166:\n        /* \"nft/LPStakeWithdrawNft.sol\":13577:13597  v = v.sub(threshold) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":13541:13609  while(v > threshold) {... */\n      jump(tag_164)\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      dup4\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":13619:13643  uint256 userStakedAmount */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13319  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13325  users[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":13314:13332  users[user].amount */\n      sload\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":13684:13705  userStakedAmount == 0 */\n      dup2\n      swap1\n      sub\n        /* \"nft/LPStakeWithdrawNft.sol\":13681:13742  if(userStakedAmount == 0) {... */\n      tag_169\n      jumpi\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":13729:13730  0 */\n      0x00\n      swap4\n        /* \"nft/LPStakeWithdrawNft.sol\":13348:13805  function getUserNextNftTime(address user) public view returns (uint256){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":13681:13742  if(userStakedAmount == 0) {... */\n    tag_169:\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13797  threshold.sub(v).div(userStakedAmount) */\n      tag_170\n        /* \"nft/LPStakeWithdrawNft.sol\":13780:13796  userStakedAmount */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13775  threshold.sub(v) */\n      tag_171\n        /* \"nft/LPStakeWithdrawNft.sol\":13773:13774  v */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13768  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13772  threshold.sub */\n      tag_167\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13775  threshold.sub(v) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13779  threshold.sub(v).div */\n      swap1\n      tag_172\n        /* \"nft/LPStakeWithdrawNft.sol\":13759:13797  threshold.sub(v).div(userStakedAmount) */\n      jump\t// in\n    tag_170:\n        /* \"nft/LPStakeWithdrawNft.sol\":13752:13797  return threshold.sub(v).div(userStakedAmount) */\n      swap5\n        /* \"nft/LPStakeWithdrawNft.sol\":13348:13805  function getUserNextNftTime(address user) public view returns (uint256){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":9529:10368  function claim(address nftContractAddress) public {... */\n    tag_63:\n        /* \"nft/LPStakeWithdrawNft.sol\":9598:9604  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":9598:9611  nftIds.length */\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":9590:9635  require(nftIds.length > 0, \"All NFTs farmed\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7287:7289   */\n      0x20\n        /* \"nft/LPStakeWithdrawNft.sol\":9590:9635  require(nftIds.length > 0, \"All NFTs farmed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7269:7290   */\n      mstore\n        /* \"#utility.yul\":7326:7328   */\n      0x0f\n        /* \"#utility.yul\":7306:7324   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7299:7329   */\n      mstore\n      shl(0x8a, 0x105b1b081391951cc819985c9b5959)\n        /* \"#utility.yul\":7345:7363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7338:7383   */\n      mstore\n        /* \"#utility.yul\":7400:7418   */\n      0x64\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9590:9635  require(nftIds.length > 0, \"All NFTs farmed\") */\n      tag_156\n        /* \"#utility.yul\":7085:7424   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":9590:9635  require(nftIds.length > 0, \"All NFTs farmed\") */\n    tag_174:\n        /* \"nft/LPStakeWithdrawNft.sol\":9683:9692  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":9654:9679  pointsBalance(msg.sender) */\n      tag_177\n        /* \"nft/LPStakeWithdrawNft.sol\":9668:9678  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9654:9667  pointsBalance */\n      tag_66\n        /* \"nft/LPStakeWithdrawNft.sol\":9654:9679  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_177:\n        /* \"nft/LPStakeWithdrawNft.sol\":9654:9692  pointsBalance(msg.sender) >= threshold */\n      lt\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":9646:9716  require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"nft/LPStakeWithdrawNft.sol\":9646:9716  require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7613:7634   */\n      mstore\n        /* \"#utility.yul\":7670:7672   */\n      0x13\n        /* \"#utility.yul\":7650:7668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7643:7673   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e7420506f696e7473)\n        /* \"#utility.yul\":7689:7707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7682:7731   */\n      mstore\n        /* \"#utility.yul\":7748:7766   */\n      0x64\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9646:9716  require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\") */\n      tag_156\n        /* \"#utility.yul\":7429:7772   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":9646:9716  require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\") */\n    tag_178:\n        /* \"nft/LPStakeWithdrawNft.sol\":9757:9767  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9727:9748  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9751:9768  users[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9751:9756  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":9751:9768  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":9863:9872  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":9751:9768  users[msg.sender] */\n      swap1\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9873  pointsBalance(msg.sender).sub(threshold) */\n      tag_181\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":9863:9872  threshold */\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9858  pointsBalance(msg.sender) */\n      tag_182\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9846  pointsBalance */\n      tag_66\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9858  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_182:\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9862  pointsBalance(msg.sender).sub */\n      swap1\n      tag_167\n        /* \"nft/LPStakeWithdrawNft.sol\":9833:9873  pointsBalance(msg.sender).sub(threshold) */\n      jump\t// in\n    tag_181:\n        /* \"nft/LPStakeWithdrawNft.sol\":9815:9819  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9815:9830  user.pointsDebt */\n      0x02\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9815:9873  user.pointsDebt = pointsBalance(msg.sender).sub(threshold) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9906:9921  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":9884:9888  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9884:9903  user.lastUpdateTime */\n      0x01\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9884:9921  user.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9943:9961  uint256 minTokenId */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9963:9976  uint256 index */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":9980:10015  LibArrayForUint256Utils.min(nftIds) */\n      tag_183\n        /* \"nft/LPStakeWithdrawNft.sol\":10008:10014  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":9980:10007  LibArrayForUint256Utils.min */\n      tag_184\n        /* \"nft/LPStakeWithdrawNft.sol\":9980:10015  LibArrayForUint256Utils.min(nftIds) */\n      jump\t// in\n    tag_183:\n        /* \"nft/LPStakeWithdrawNft.sol\":9942:10015  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10026:10078  LibArrayForUint256Utils.removeByIndex(nftIds, index) */\n      tag_185\n        /* \"nft/LPStakeWithdrawNft.sol\":10064:10070  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":10072:10077  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":10026:10063  LibArrayForUint256Utils.removeByIndex */\n      tag_186\n        /* \"nft/LPStakeWithdrawNft.sol\":10026:10078  LibArrayForUint256Utils.removeByIndex(nftIds, index) */\n      jump\t// in\n    tag_185:\n        /* \"nft/LPStakeWithdrawNft.sol\":10116:10283  IERC1155(nftContractAddress).safeTransferFrom(... */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10184:10188  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":10116:10283  IERC1155(nftContractAddress).safeTransferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8118:8152   */\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10204:10214  msg.sender */\n      caller\n        /* \"#utility.yul\":8168:8186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8161:8204   */\n      mstore\n        /* \"#utility.yul\":8220:8238   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8213:8247   */\n      dup4\n      swap1\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10254:10255  1 */\n      0x01\n        /* \"#utility.yul\":8263:8281   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8256:8290   */\n      mstore\n        /* \"#utility.yul\":8098:8101   */\n      0xa0\n        /* \"#utility.yul\":8306:8325   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8299:8331   */\n      mstore\n      0x00\n        /* \"#utility.yul\":8347:8366   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":8340:8370   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":10116:10161  IERC1155(nftContractAddress).safeTransferFrom */\n      dup6\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"#utility.yul\":8387:8406   */\n      0xc4\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10116:10283  IERC1155(nftContractAddress).safeTransferFrom(... */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10296:10310  withdrawAmount */\n      0x05\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10294:10310  ++withdrawAmount */\n      dup2\n      sload\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10328:10360  Claim(msg.sender, minTokenId, 1) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8739:8764   */\n      dup4\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10358:10359  1 */\n      0x01\n        /* \"#utility.yul\":8795:8797   */\n      0x20\n        /* \"#utility.yul\":8780:8798   */\n      dup3\n      add\n        /* \"#utility.yul\":8773:8807   */\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10334:10344  msg.sender */\n      caller\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":10328:10360  Claim(msg.sender, minTokenId, 1) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n      swap2\n        /* \"#utility.yul\":8712:8730   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10328:10360  Claim(msg.sender, minTokenId, 1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft/LPStakeWithdrawNft.sol\":9579:10368  {... */\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9529:10368  function claim(address nftContractAddress) public {... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11268:11455  function pointsBalance(address account) public view returns (uint256) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":11372:11386  users[account] */\n      dup2\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":11329:11336  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11372:11386  users[account] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":11372:11377  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":11372:11386  users[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":11349:11386  UserInfo memory user = users[account] */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":11404:11447  user.pointsDebt.add(_unDebitedPoints(user)) */\n      tag_197\n        /* \"nft/LPStakeWithdrawNft.sol\":11424:11446  _unDebitedPoints(user) */\n      tag_198\n        /* \"nft/LPStakeWithdrawNft.sol\":11349:11386  UserInfo memory user = users[account] */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":11424:11440  _unDebitedPoints */\n      tag_199\n        /* \"nft/LPStakeWithdrawNft.sol\":11424:11446  _unDebitedPoints(user) */\n      jump\t// in\n    tag_198:\n        /* \"nft/LPStakeWithdrawNft.sol\":11404:11419  user.pointsDebt */\n      0x40\n      dup4\n      add\n      mload\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11404:11423  user.pointsDebt.add */\n      tag_200\n        /* \"nft/LPStakeWithdrawNft.sol\":11404:11447  user.pointsDebt.add(_unDebitedPoints(user)) */\n      jump\t// in\n    tag_197:\n        /* \"nft/LPStakeWithdrawNft.sol\":11397:11447  return user.pointsDebt.add(_unDebitedPoints(user)) */\n      swap4\n        /* \"nft/LPStakeWithdrawNft.sol\":11268:11455  function pointsBalance(address account) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":12575:12730  function setLpUnitValue(uint256 value) public onlyOwner {... */\n    tag_70:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_204:\n        /* \"nft/LPStakeWithdrawNft.sol\":12642:12653  lpUnitValue */\n      0x06\n        /* \"nft/LPStakeWithdrawNft.sol\":12642:12661  lpUnitValue = value */\n      dup2\n      swap1\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":12698:12711  timeUnitValue */\n      sload(0x07)\n        /* \"nft/LPStakeWithdrawNft.sol\":12684:12711  lpUnitValue * timeUnitValue */\n      tag_159\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12656:12661  value */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":12684:12711  lpUnitValue * timeUnitValue */\n      tag_160\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":10386:11166  function withdraw(uint256 amount) public {... */\n    tag_73:\n        /* \"nft/LPStakeWithdrawNft.sol\":10468:10478  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10438:10459  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10462:10479  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10462:10467  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":10462:10479  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":10498:10509  user.amount */\n      dup1\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10498:10519  user.amount >= amount */\n      dup3\n      gt\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":10490:10543  require(user.amount >= amount, \"Insufficient staked\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9020:9022   */\n      0x20\n        /* \"nft/LPStakeWithdrawNft.sol\":10490:10543  require(user.amount >= amount, \"Insufficient staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9002:9023   */\n      mstore\n        /* \"#utility.yul\":9059:9061   */\n      0x13\n        /* \"#utility.yul\":9039:9057   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9032:9062   */\n      mstore\n      shl(0x6a, 0x125b9cdd59999a58da595b9d081cdd185ad959)\n        /* \"#utility.yul\":9078:9096   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9071:9120   */\n      mstore\n        /* \"#utility.yul\":9137:9155   */\n      0x64\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10490:10543  require(user.amount >= amount, \"Insufficient staked\") */\n      tag_156\n        /* \"#utility.yul\":8818:9161   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":10490:10543  require(user.amount >= amount, \"Insufficient staked\") */\n    tag_210:\n        /* \"nft/LPStakeWithdrawNft.sol\":10607:10632  pointsBalance(msg.sender) */\n      tag_213\n        /* \"nft/LPStakeWithdrawNft.sol\":10621:10631  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10607:10620  pointsBalance */\n      tag_66\n        /* \"nft/LPStakeWithdrawNft.sol\":10607:10632  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_213:\n        /* \"nft/LPStakeWithdrawNft.sol\":10589:10604  user.pointsDebt */\n      0x02\n      dup3\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10589:10632  user.pointsDebt = pointsBalance(msg.sender) */\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10657:10668  user.amount */\n      dup1\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10657:10680  user.amount.sub(amount) */\n      tag_214\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10673:10679  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10657:10672  user.amount.sub */\n      tag_167\n        /* \"nft/LPStakeWithdrawNft.sol\":10657:10680  user.amount.sub(amount) */\n      jump\t// in\n    tag_214:\n        /* \"nft/LPStakeWithdrawNft.sol\":10643:10680  user.amount = user.amount.sub(amount) */\n      dup1\n      dup3\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10643:10654  user.amount */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10695:10711  user.amount == 0 */\n      sub\n        /* \"nft/LPStakeWithdrawNft.sol\":10691:10968  if (user.amount == 0) {... */\n      tag_220\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":10749:10758  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":10731:10735  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10731:10746  user.pointsDebt */\n      0x02\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10731:10758  user.pointsDebt > threshold */\n      gt\n        /* \"nft/LPStakeWithdrawNft.sol\":10728:10957  if(user.pointsDebt > threshold) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":10779:10790  uint number */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10793:10823  user.pointsDebt.div(threshold) */\n      tag_217\n        /* \"nft/LPStakeWithdrawNft.sol\":10813:10822  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":10793:10797  user */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10793:10808  user.pointsDebt */\n      0x02\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10793:10812  user.pointsDebt.div */\n      tag_172\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10793:10823  user.pointsDebt.div(threshold) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"nft/LPStakeWithdrawNft.sol\":10860:10869  threshold */\n      sload(0x08)\n        /* \"nft/LPStakeWithdrawNft.sol\":10779:10823  uint number = user.pointsDebt.div(threshold) */\n      swap1\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10860:10881  threshold.mul(number) */\n      tag_218\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10779:10823  uint number = user.pointsDebt.div(threshold) */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":10860:10873  threshold.mul */\n      tag_219\n        /* \"nft/LPStakeWithdrawNft.sol\":10860:10881  threshold.mul(number) */\n      jump\t// in\n    tag_218:\n        /* \"nft/LPStakeWithdrawNft.sol\":10842:10857  user.pointsDebt */\n      0x02\n      dup4\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10842:10881  user.pointsDebt = threshold.mul(number) */\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10728:10957  if(user.pointsDebt > threshold) {... */\n      jump(tag_220)\n    tag_216:\n        /* \"nft/LPStakeWithdrawNft.sol\":10940:10941  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10922:10937  user.pointsDebt */\n      0x02\n      dup3\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10922:10941  user.pointsDebt = 0 */\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":10728:10957  if(user.pointsDebt > threshold) {... */\n    tag_220:\n        /* \"nft/LPStakeWithdrawNft.sol\":11000:11015  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":10978:10997  user.lastUpdateTime */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10978:11015  user.lastUpdateTime = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":11036:11043  lpToken */\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":11036:11113  lpToken.safeTransfer(... */\n      tag_221\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":11036:11043  lpToken */\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":11071:11081  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":11096:11102  amount */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":11036:11056  lpToken.safeTransfer */\n      tag_222\n        /* \"nft/LPStakeWithdrawNft.sol\":11036:11113  lpToken.safeTransfer(... */\n      jump\t// in\n    tag_221:\n        /* \"nft/LPStakeWithdrawNft.sol\":11129:11158  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      dup3\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":11139:11149  msg.sender */\n      caller\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11129:11158  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":11129:11158  Withdrawn(msg.sender, amount) */\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft/LPStakeWithdrawNft.sol\":10427:11166  {... */\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10386:11166  function withdraw(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":8331:8909  function addNftBatchWithNumber(... */\n    tag_77:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_227:\n        /* \"nft/LPStakeWithdrawNft.sol\":8486:8506  uint256[] memory ids */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":8523:8532  idsNumber */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":8509:8533  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_231\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_233\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_233:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8486:8533  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8544:8568  uint256[] memory amounts */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":8585:8594  idsNumber */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":8571:8595  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_235\n      tag_232\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_236\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_236:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8544:8595  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8623:8628  start */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8606:8738  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n    tag_237:\n        /* \"nft/LPStakeWithdrawNft.sol\":8635:8652  idsNumber + start */\n      tag_240\n        /* \"nft/LPStakeWithdrawNft.sol\":8647:8652  start */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8635:8644  idsNumber */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8635:8652  idsNumber + start */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"nft/LPStakeWithdrawNft.sol\":8630:8631  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":8630:8653  i < (idsNumber + start) */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":8606:8738  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":8690:8691  i */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":8675:8678  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8679:8686  i-start */\n      tag_242\n        /* \"nft/LPStakeWithdrawNft.sol\":8681:8686  start */\n      dup8\n        /* \"nft/LPStakeWithdrawNft.sol\":8690:8691  i */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8679:8686  i-start */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"nft/LPStakeWithdrawNft.sol\":8675:8687  ids[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":8675:8691  ids[i-start] = i */\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":8725:8726  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":8706:8713  amounts */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":8714:8721  i-start */\n      tag_247\n        /* \"nft/LPStakeWithdrawNft.sol\":8716:8721  start */\n      dup8\n        /* \"nft/LPStakeWithdrawNft.sol\":8714:8715  i */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8714:8721  i-start */\n      tag_243\n      jump\t// in\n    tag_247:\n        /* \"nft/LPStakeWithdrawNft.sol\":8706:8722  amounts[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_249\n      tag_246\n      jump\t// in\n    tag_249:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":8706:8726  amounts[i-start] = 1 */\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":8655:8658  i++ */\n      dup1\n      tag_250\n      dup2\n      tag_193\n      jump\t// in\n    tag_250:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8606:8738  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8750:8793  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      tag_251\n        /* \"nft/LPStakeWithdrawNft.sol\":8781:8787  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":8789:8792  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8750:8780  LibArrayForUint256Utils.extend */\n      tag_252\n        /* \"nft/LPStakeWithdrawNft.sol\":8750:8793  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      jump\t// in\n    tag_251:\n        /* \"nft/LPStakeWithdrawNft.sol\":8806:8901  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":8806:8856  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup7\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8806:8901  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_253\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8857:8867  msg.sender */\n      caller\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8877:8881  this */\n      address\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8884:8887  ids */\n      dup8\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8889:8896  amounts */\n      dup8\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8806:8901  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_254\n      jump\t// in\n    tag_253:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8475:8909  {... */\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8331:8909  function addNftBatchWithNumber(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11779:11958  function getNextNftTokenId() public view returns (uint256) {... */\n    tag_79:\n        /* \"nft/LPStakeWithdrawNft.sol\":11829:11836  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11850:11868  uint256 minTokenId */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":11870:11883  uint256 index */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11887:11922  LibArrayForUint256Utils.min(nftIds) */\n      tag_259\n        /* \"nft/LPStakeWithdrawNft.sol\":11915:11921  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":11887:11914  LibArrayForUint256Utils.min */\n      tag_184\n        /* \"nft/LPStakeWithdrawNft.sol\":11887:11922  LibArrayForUint256Utils.min(nftIds) */\n      jump\t// in\n    tag_259:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11849:11922  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds) */\n      swap4\n        /* \"nft/LPStakeWithdrawNft.sol\":11779:11958  function getNextNftTokenId() public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":8005:8323  function addNFTBatch(... */\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_264:\n        /* \"nft/LPStakeWithdrawNft.sol\":8166:8209  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      tag_267\n        /* \"nft/LPStakeWithdrawNft.sol\":8197:8203  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":8205:8208  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8166:8196  LibArrayForUint256Utils.extend */\n      tag_252\n        /* \"nft/LPStakeWithdrawNft.sol\":8166:8209  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      jump\t// in\n    tag_267:\n        /* \"nft/LPStakeWithdrawNft.sol\":8220:8315  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":8220:8270  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup5\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8220:8315  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_268\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8271:8281  msg.sender */\n      caller\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8291:8295  this */\n      address\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8298:8301  ids */\n      dup8\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8303:8310  amounts */\n      dup8\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8220:8315  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_254\n      jump\t// in\n    tag_268:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8005:8323  function addNFTBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_93:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_275:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_278\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_279\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_278:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":8917:9471  function stake(uint256 amount) external {... */\n    tag_107:\n        /* \"nft/LPStakeWithdrawNft.sol\":8968:8975  lpToken */\n      sload(0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":8968:9077  lpToken.safeTransferFrom(... */\n      tag_284\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":8968:8975  lpToken */\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":9007:9017  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9040:9044  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":9060:9066  amount */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8968:8992  lpToken.safeTransferFrom */\n      tag_285\n        /* \"nft/LPStakeWithdrawNft.sol\":8968:9077  lpToken.safeTransferFrom(... */\n      jump\t// in\n    tag_284:\n        /* \"nft/LPStakeWithdrawNft.sol\":9128:9138  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9098:9119  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9122:9139  users[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9122:9127  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":9122:9139  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":9150:9158  userlist */\n      0x04\n        /* \"nft/LPStakeWithdrawNft.sol\":9150:9175  userlist.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap3\n      mstore\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9236:9247  user.amount */\n      dup1\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":9236:9252  user.amount != 0 */\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":9233:9324  if(user.amount != 0) {... */\n      tag_287\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":9287:9312  pointsBalance(msg.sender) */\n      tag_288\n        /* \"nft/LPStakeWithdrawNft.sol\":9301:9311  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9287:9300  pointsBalance */\n      tag_66\n        /* \"nft/LPStakeWithdrawNft.sol\":9287:9312  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_288:\n        /* \"nft/LPStakeWithdrawNft.sol\":9269:9284  user.pointsDebt */\n      0x02\n      dup3\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9269:9312  user.pointsDebt = pointsBalance(msg.sender) */\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9233:9324  if(user.amount != 0) {... */\n    tag_287:\n        /* \"nft/LPStakeWithdrawNft.sol\":9348:9359  user.amount */\n      dup1\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":9348:9371  user.amount.add(amount) */\n      tag_289\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9364:9370  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":9348:9363  user.amount.add */\n      tag_200\n        /* \"nft/LPStakeWithdrawNft.sol\":9348:9371  user.amount.add(amount) */\n      jump\t// in\n    tag_289:\n        /* \"nft/LPStakeWithdrawNft.sol\":9334:9371  user.amount = user.amount.add(amount) */\n      dup2\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9404:9419  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":9382:9401  user.lastUpdateTime */\n      0x01\n      dup3\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9382:9419  user.lastUpdateTime = block.timestamp */\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9437:9463  Staked(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      dup3\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":9444:9454  msg.sender */\n      caller\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9437:9463  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9437:9463  Staked(msg.sender, amount) */\n      tag_223\n        /* \"#utility.yul\":497:674   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":12469:12567  function setLpMintAddress(address mint) public onlyOwner {... */\n    tag_115:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_294:\n        /* \"nft/LPStakeWithdrawNft.sol\":12537:12544  lpToken */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":12537:12559  lpToken = IERC20(mint) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":12469:12567  function setLpMintAddress(address mint) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":12063:12461  function urgentWithdraw(address nftContractAddress) public onlyOwner{... */\n    tag_124:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_301:\n        /* \"nft/LPStakeWithdrawNft.sol\":12159:12165  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":12159:12172  nftIds.length */\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":12142:12156  uint256 length */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":12159:12172  nftIds.length */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":12210:12231  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_305\n      jumpi\n      tag_305\n      tag_232\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_306\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_306:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12183:12231  uint256[] memory amounts = new uint256[](length) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12247:12256  uint256 i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":12242:12320  for (uint256 i = 0; i < length; i++) {... */\n    tag_307:\n        /* \"nft/LPStakeWithdrawNft.sol\":12266:12272  length */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":12262:12263  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":12262:12272  i < length */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":12242:12320  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":12307:12308  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":12294:12301  amounts */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":12302:12303  i */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":12294:12304  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_246\n      jump\t// in\n    tag_311:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":12294:12308  amounts[i] = 1 */\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":12274:12277  i++ */\n      dup1\n      tag_312\n      dup2\n      tag_193\n      jump\t// in\n    tag_312:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12242:12320  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_307)\n    tag_308:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12330:12429  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/LPStakeWithdrawNft.sol\":12330:12380  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup5\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12330:12429  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds, amounts, \"\") */\n      tag_313\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12390:12394  this */\n      address\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12397:12407  msg.sender */\n      caller\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12409:12415  nftIds */\n      0x02\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12417:12424  amounts */\n      dup8\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":12330:12429  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds, amounts, \"\") */\n      0x04\n      add\n      tag_314\n      jump\t// in\n    tag_313:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_315:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_317:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12447:12453  nftIds */\n      0x02\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":12440:12453  delete nftIds */\n      tag_318\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"nft/LPStakeWithdrawNft.sol\":12131:12461  {... */\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":12063:12461  function urgentWithdraw(address nftContractAddress) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":7368:7391  uint256[] public nftIds */\n    tag_127:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11178:11256  function exit() external {... */\n    tag_136:\n        /* \"nft/LPStakeWithdrawNft.sol\":11229:11239  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":11223:11240  users[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/LPStakeWithdrawNft.sol\":11223:11228  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":11223:11240  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":11223:11247  users[msg.sender].amount */\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":11214:11248  withdraw(users[msg.sender].amount) */\n      tag_278\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11214:11222  withdraw */\n      tag_73\n        /* \"nft/LPStakeWithdrawNft.sol\":11214:11248  withdraw(users[msg.sender].amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_144:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12354:12356   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12336:12357   */\n      mstore\n        /* \"#utility.yul\":12393:12395   */\n      0x26\n        /* \"#utility.yul\":12373:12391   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12366:12396   */\n      mstore\n        /* \"#utility.yul\":12432:12466   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12412:12430   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12405:12467   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12483:12501   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12476:12512   */\n      mstore\n        /* \"#utility.yul\":12529:12548   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_156\n        /* \"#utility.yul\":12152:12554   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_333:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_336\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_279\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_336:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_243\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_343\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n    tag_184:\n        /* \"nft/LPStakeWithdrawNft.sol\":6359:6375  uint256 minValue */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6377:6393  uint256 minIndex */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":6417:6422  array */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6423:6424  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6417:6425  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_246\n      jump\t// in\n    tag_346:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6406:6425  minValue = array[0] */\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6447:6448  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6436:6448  minIndex = 0 */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6463:6472  uint256 i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n    tag_348:\n        /* \"nft/LPStakeWithdrawNft.sol\":6481:6493  array.length */\n      dup4\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6477:6493  i < array.length */\n      dup2\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      iszero\n      tag_349\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":6527:6535  minValue */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6521  array */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":6522:6523  i */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6524  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      tag_352\n      tag_246\n      jump\t// in\n    tag_352:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6535  array[i] < minValue */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":6513:6621  if(array[i] < minValue){... */\n      iszero\n      tag_354\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":6566:6571  array */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":6572:6573  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":6566:6574  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_356\n      jumpi\n      tag_356\n      tag_246\n      jump\t// in\n    tag_356:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6555:6574  minValue = array[i] */\n      swap3\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6604:6605  i */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":6593:6605  minIndex = i */\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6513:6621  if(array[i] < minValue){... */\n    tag_354:\n        /* \"nft/LPStakeWithdrawNft.sol\":6494:6497  i++ */\n      dup1\n      tag_358\n      dup2\n      tag_193\n      jump\t// in\n    tag_358:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      jump(tag_348)\n    tag_349:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n    tag_186:\n        /* \"nft/LPStakeWithdrawNft.sol\":4304:4316  array.length */\n      dup2\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":4296:4316  index < array.length */\n      dup2\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12983:12985   */\n      0x20\n        /* \"nft/LPStakeWithdrawNft.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12965:12986   */\n      mstore\n        /* \"#utility.yul\":13022:13024   */\n      0x24\n        /* \"#utility.yul\":13002:13020   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12995:13025   */\n      mstore\n        /* \"#utility.yul\":13061:13095   */\n      0x4172726179466f7255696e743235363a20696e646578206f7574206f6620626f\n        /* \"#utility.yul\":13041:13059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13034:13096   */\n      mstore\n      shl(0xe0, 0x756e6473)\n        /* \"#utility.yul\":13112:13130   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13105:13139   */\n      mstore\n        /* \"#utility.yul\":13156:13175   */\n      0x84\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_156\n        /* \"#utility.yul\":12781:13181   */\n      jump\n        /* \"nft/LPStakeWithdrawNft.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n    tag_360:\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4397  array.length */\n      dup2\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4401  array.length - 1 */\n      tag_365\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":4400:4401  1 */\n      0x01\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4401  array.length - 1 */\n      tag_243\n      jump\t// in\n    tag_365:\n        /* \"nft/LPStakeWithdrawNft.sol\":4377:4382  index */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4377:4401  index < array.length - 1 */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":4370:4483  while (index < array.length - 1) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":4433:4438  array */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4439:4448  index + 1 */\n      tag_366\n        /* \"nft/LPStakeWithdrawNft.sol\":4439:4444  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4447:4448  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":4439:4448  index + 1 */\n      tag_241\n      jump\t// in\n    tag_366:\n        /* \"nft/LPStakeWithdrawNft.sol\":4433:4449  array[index + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_368\n      tag_246\n      jump\t// in\n    tag_368:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4423  array */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4424:4429  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4430  array[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_371\n      tag_246\n      jump\t// in\n    tag_371:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4449  array[index] = array[index + 1] */\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":4464:4471  index++ */\n      dup1\n      tag_373\n      dup2\n      tag_193\n      jump\t// in\n    tag_373:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":4370:4483  while (index < array.length - 1) {... */\n      jump(tag_360)\n    tag_364:\n        /* \"nft/LPStakeWithdrawNft.sol\":4493:4498  array */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4493:4504  array.pop() */\n      dup1\n      sload\n      dup1\n      tag_375\n      jumpi\n      tag_375\n      tag_376\n      jump\t// in\n    tag_375:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11467:11670  function _unDebitedPoints(UserInfo memory user) internal view returns (uint256) {... */\n    tag_199:\n        /* \"nft/LPStakeWithdrawNft.sol\":11650:11661  user.amount */\n      dup1\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":11625:11644  user.lastUpdateTime */\n      0x20\n      dup3\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":11538:11545  uint256 */\n      0x00\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":11578:11593  block.timestamp */\n      timestamp\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11662  blockTime.sub(user.lastUpdateTime).mul(user.amount) */\n      tag_197\n      swap2\n        /* \"nft/LPStakeWithdrawNft.sol\":11650:11661  user.amount */\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11645  blockTime.sub(user.lastUpdateTime) */\n      tag_380\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11578:11593  block.timestamp */\n      dup5\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11624  blockTime.sub */\n      tag_167\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11645  blockTime.sub(user.lastUpdateTime) */\n      jump\t// in\n    tag_380:\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11649  blockTime.sub(user.lastUpdateTime).mul */\n      swap1\n      tag_219\n        /* \"nft/LPStakeWithdrawNft.sol\":11611:11662  blockTime.sub(user.lastUpdateTime).mul(user.amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_241\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_160\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13510:13542   */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13492:13543   */\n      mstore\n        /* \"#utility.yul\":13559:13577   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":13552:13586   */\n      dup3\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_318\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":13465:13483   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_387:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_389\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"nft/LPStakeWithdrawNft.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n    tag_252:\n        /* \"nft/LPStakeWithdrawNft.sol\":5085:5093  b.length */\n      dup1\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5085:5098  b.length != 0 */\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":5082:5182  if(b.length != 0){... */\n      tag_391\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":5112:5118  uint i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n    tag_392:\n        /* \"nft/LPStakeWithdrawNft.sol\":5128:5129  b */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":5128:5136  b.length */\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5124:5125  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":5124:5136  i < b.length */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      iszero\n      tag_318\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":5152:5153  a */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5159:5160  b */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5161:5162  i */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5159:5163  b[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_396\n      tag_246\n      jump\t// in\n    tag_396:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5152:5164  a.push(b[i]) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      add\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":5138:5141  i++ */\n      dup1\n      tag_398\n      dup2\n      tag_193\n      jump\t// in\n    tag_398:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      jump(tag_392)\n        /* \"nft/LPStakeWithdrawNft.sol\":5082:5182  if(b.length != 0){... */\n    tag_391:\n        /* \"nft/LPStakeWithdrawNft.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_285:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13855:13870   */\n      dup1\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":13837:13871   */\n      mstore\n        /* \"#utility.yul\":13907:13922   */\n      dup4\n      and\n        /* \"#utility.yul\":13887:13905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13880:13923   */\n      mstore\n        /* \"#utility.yul\":13939:13957   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":13932:13966   */\n      dup3\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_401\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":13772:13790   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_387\n        /* \"#utility.yul\":13597:13972   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_401:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_389:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_405\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_406\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_318\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_408\n      swap2\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14461:14463   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14443:14464   */\n      mstore\n        /* \"#utility.yul\":14500:14502   */\n      0x2a\n        /* \"#utility.yul\":14480:14498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14473:14503   */\n      mstore\n        /* \"#utility.yul\":14539:14573   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":14519:14537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14512:14574   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":14590:14608   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14583:14623   */\n      mstore\n        /* \"#utility.yul\":14640:14659   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_156\n        /* \"#utility.yul\":14259:14665   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3514:3737  function functionCall(... */\n    tag_406:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3647:3659  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3730  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_170\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3700:3706  target */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3708:3712  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3714:3715  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3717:3729  errorMessage */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3647:3659  bytes memory */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_422\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15279:15281   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15261:15282   */\n      mstore\n        /* \"#utility.yul\":15318:15320   */\n      0x1d\n        /* \"#utility.yul\":15298:15316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15291:15321   */\n      mstore\n        /* \"#utility.yul\":15357:15388   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":15337:15355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15330:15389   */\n      mstore\n        /* \"#utility.yul\":15406:15424   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_156\n        /* \"#utility.yul\":15077:15430   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n    tag_422:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4953:4965  bool success */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4967:4990  bytes memory returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5000  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5005  target.call */\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5013:5018  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5020:5024  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5025  target.call{value: value}(data) */\n      mload(0x40)\n      tag_425\n      swap2\n      swap1\n      tag_426\n      jump\t// in\n    tag_425:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_429\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_428)\n    tag_429:\n      0x60\n      swap2\n      pop\n    tag_428:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4952:5025  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      tag_430\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5059:5066  success */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5068:5078  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5080:5092  errorMessage */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5058  verifyCallResult */\n      tag_431\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_430:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5035:5093  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4601:5100  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7214:7906  function verifyCallResult(... */\n    tag_431:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7360:7372  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7388:7395  success */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n      iszero\n      tag_434\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7418:7428  returndata */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7411:7428  return returndata */\n      jump(tag_197)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n    tag_434:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7546  returndata.length */\n      dup3\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7550  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n      tag_436\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7723:7733  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7717:7734  mload(returndata) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7783:7798  returndata_size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7770:7780  returndata */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7766:7768  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7762:7781  add(32, returndata) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7755:7799  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n    tag_436:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7862:7874  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7855:7875  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_319:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_336\n      swap2\n      swap1\n    tag_443:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_444\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_443)\n    tag_444:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_41:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_454:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":679:859   */\n    tag_54:\n        /* \"#utility.yul\":738:744   */\n      0x00\n        /* \"#utility.yul\":791:793   */\n      0x20\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":770:777   */\n      dup5\n        /* \"#utility.yul\":766:789   */\n      sub\n        /* \"#utility.yul\":762:794   */\n      slt\n        /* \"#utility.yul\":759:811   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":804:805   */\n      dup1\n        /* \"#utility.yul\":797:809   */\n      revert\n        /* \"#utility.yul\":759:811   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":830:853   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":679:859   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:1037   */\n    tag_445:\n        /* \"#utility.yul\":932:952   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":981:1012   */\n      dup2\n      and\n        /* \"#utility.yul\":971:1013   */\n      dup2\n      eq\n        /* \"#utility.yul\":961:1031   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":1027:1028   */\n      0x00\n        /* \"#utility.yul\":1024:1025   */\n      dup1\n        /* \"#utility.yul\":1017:1029   */\n      revert\n        /* \"#utility.yul\":961:1031   */\n    tag_461:\n        /* \"#utility.yul\":864:1037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1228   */\n    tag_58:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1154:1156   */\n      0x20\n        /* \"#utility.yul\":1142:1151   */\n      dup3\n        /* \"#utility.yul\":1133:1140   */\n      dup5\n        /* \"#utility.yul\":1129:1152   */\n      sub\n        /* \"#utility.yul\":1125:1157   */\n      slt\n        /* \"#utility.yul\":1122:1174   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1122:1174   */\n    tag_463:\n        /* \"#utility.yul\":1193:1222   */\n      tag_197\n        /* \"#utility.yul\":1212:1221   */\n      dup3\n        /* \"#utility.yul\":1193:1222   */\n      tag_445\n      jump\t// in\n        /* \"#utility.yul\":1233:1555   */\n    tag_76:\n        /* \"#utility.yul\":1310:1316   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup1\n        /* \"#utility.yul\":1326:1332   */\n      0x00\n        /* \"#utility.yul\":1379:1381   */\n      0x60\n        /* \"#utility.yul\":1367:1376   */\n      dup5\n        /* \"#utility.yul\":1358:1365   */\n      dup7\n        /* \"#utility.yul\":1354:1377   */\n      sub\n        /* \"#utility.yul\":1350:1382   */\n      slt\n        /* \"#utility.yul\":1347:1399   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":1395:1396   */\n      0x00\n        /* \"#utility.yul\":1392:1393   */\n      dup1\n        /* \"#utility.yul\":1385:1397   */\n      revert\n        /* \"#utility.yul\":1347:1399   */\n    tag_466:\n        /* \"#utility.yul\":1418:1447   */\n      tag_467\n        /* \"#utility.yul\":1437:1446   */\n      dup5\n        /* \"#utility.yul\":1418:1447   */\n      tag_445\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1408:1447   */\n      swap6\n        /* \"#utility.yul\":1494:1496   */\n      0x20\n        /* \"#utility.yul\":1479:1497   */\n      dup6\n      add\n        /* \"#utility.yul\":1466:1498   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1545:1547   */\n      0x40\n        /* \"#utility.yul\":1530:1548   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1517:1549   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1233:1555   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1783:1910   */\n    tag_232:\n        /* \"#utility.yul\":1844:1854   */\n      0x4e487b71\n        /* \"#utility.yul\":1839:1842   */\n      0xe0\n        /* \"#utility.yul\":1835:1855   */\n      shl\n        /* \"#utility.yul\":1832:1833   */\n      0x00\n        /* \"#utility.yul\":1825:1856   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x41\n        /* \"#utility.yul\":1872:1873   */\n      0x04\n        /* \"#utility.yul\":1865:1880   */\n      mstore\n        /* \"#utility.yul\":1899:1903   */\n      0x24\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1889:1904   */\n      revert\n        /* \"#utility.yul\":1915:2190   */\n    tag_446:\n        /* \"#utility.yul\":1986:1988   */\n      0x40\n        /* \"#utility.yul\":1980:1989   */\n      mload\n        /* \"#utility.yul\":2051:2053   */\n      0x1f\n        /* \"#utility.yul\":2032:2045   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2028:2055   */\n      and\n        /* \"#utility.yul\":2016:2056   */\n      dup2\n      add\n        /* \"#utility.yul\":2086:2104   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2071:2105   */\n      dup2\n      gt\n        /* \"#utility.yul\":2107:2129   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2068:2130   */\n      or\n        /* \"#utility.yul\":2065:2153   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":2133:2151   */\n      tag_472\n      tag_232\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2169:2171   */\n      0x40\n        /* \"#utility.yul\":2162:2184   */\n      mstore\n        /* \"#utility.yul\":1915:2190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2907   */\n    tag_447:\n        /* \"#utility.yul\":2249:2254   */\n      0x00\n        /* \"#utility.yul\":2302:2305   */\n      dup3\n        /* \"#utility.yul\":2295:2299   */\n      0x1f\n        /* \"#utility.yul\":2287:2293   */\n      dup4\n        /* \"#utility.yul\":2283:2300   */\n      add\n        /* \"#utility.yul\":2279:2306   */\n      slt\n        /* \"#utility.yul\":2269:2324   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":2320:2321   */\n      0x00\n        /* \"#utility.yul\":2317:2318   */\n      dup1\n        /* \"#utility.yul\":2310:2322   */\n      revert\n        /* \"#utility.yul\":2269:2324   */\n    tag_474:\n        /* \"#utility.yul\":2356:2362   */\n      dup2\n        /* \"#utility.yul\":2343:2363   */\n      calldataload\n        /* \"#utility.yul\":2382:2386   */\n      0x20\n        /* \"#utility.yul\":2405:2423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2401:2403   */\n      dup3\n        /* \"#utility.yul\":2398:2424   */\n      gt\n        /* \"#utility.yul\":2395:2447   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":2427:2445   */\n      tag_476\n      tag_232\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2473:2475   */\n      dup2\n        /* \"#utility.yul\":2470:2471   */\n      0x05\n        /* \"#utility.yul\":2466:2476   */\n      shl\n        /* \"#utility.yul\":2496:2524   */\n      tag_477\n        /* \"#utility.yul\":2520:2522   */\n      dup3\n        /* \"#utility.yul\":2516:2518   */\n      dup3\n        /* \"#utility.yul\":2512:2523   */\n      add\n        /* \"#utility.yul\":2496:2524   */\n      tag_446\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2558:2573   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2628:2643   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":2624:2648   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":2589:2601   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2660:2675   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":2657:2692   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":2688:2689   */\n      0x00\n        /* \"#utility.yul\":2685:2686   */\n      dup1\n        /* \"#utility.yul\":2678:2690   */\n      revert\n        /* \"#utility.yul\":2657:2692   */\n    tag_478:\n        /* \"#utility.yul\":2724:2726   */\n      dup4\n        /* \"#utility.yul\":2716:2722   */\n      dup8\n        /* \"#utility.yul\":2712:2727   */\n      add\n        /* \"#utility.yul\":2701:2727   */\n      swap3\n      pop\n        /* \"#utility.yul\":2736:2878   */\n    tag_479:\n        /* \"#utility.yul\":2752:2758   */\n      dup5\n        /* \"#utility.yul\":2747:2750   */\n      dup4\n        /* \"#utility.yul\":2744:2759   */\n      lt\n        /* \"#utility.yul\":2736:2878   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2818:2835   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":2806:2836   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2769:2781   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2856:2868   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":2736:2878   */\n      jump(tag_479)\n        /* \"#utility.yul\":2912:3581   */\n    tag_90:\n        /* \"#utility.yul\":3039:3045   */\n      0x00\n        /* \"#utility.yul\":3047:3053   */\n      dup1\n        /* \"#utility.yul\":3055:3061   */\n      0x00\n        /* \"#utility.yul\":3108:3110   */\n      0x60\n        /* \"#utility.yul\":3096:3105   */\n      dup5\n        /* \"#utility.yul\":3087:3094   */\n      dup7\n        /* \"#utility.yul\":3083:3106   */\n      sub\n        /* \"#utility.yul\":3079:3111   */\n      slt\n        /* \"#utility.yul\":3076:3128   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3121:3122   */\n      dup1\n        /* \"#utility.yul\":3114:3126   */\n      revert\n        /* \"#utility.yul\":3076:3128   */\n    tag_483:\n        /* \"#utility.yul\":3147:3176   */\n      tag_484\n        /* \"#utility.yul\":3166:3175   */\n      dup5\n        /* \"#utility.yul\":3147:3176   */\n      tag_445\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3137:3176   */\n      swap3\n      pop\n        /* \"#utility.yul\":3227:3229   */\n      0x20\n        /* \"#utility.yul\":3216:3225   */\n      dup5\n        /* \"#utility.yul\":3212:3230   */\n      add\n        /* \"#utility.yul\":3199:3231   */\n      calldataload\n        /* \"#utility.yul\":3250:3268   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3291:3293   */\n      dup1\n        /* \"#utility.yul\":3283:3289   */\n      dup3\n        /* \"#utility.yul\":3280:3294   */\n      gt\n        /* \"#utility.yul\":3277:3311   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":3307:3308   */\n      0x00\n        /* \"#utility.yul\":3304:3305   */\n      dup1\n        /* \"#utility.yul\":3297:3309   */\n      revert\n        /* \"#utility.yul\":3277:3311   */\n    tag_485:\n        /* \"#utility.yul\":3330:3391   */\n      tag_486\n        /* \"#utility.yul\":3383:3390   */\n      dup8\n        /* \"#utility.yul\":3374:3380   */\n      dup4\n        /* \"#utility.yul\":3363:3372   */\n      dup9\n        /* \"#utility.yul\":3359:3381   */\n      add\n        /* \"#utility.yul\":3330:3391   */\n      tag_447\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3320:3391   */\n      swap4\n      pop\n        /* \"#utility.yul\":3444:3446   */\n      0x40\n        /* \"#utility.yul\":3433:3442   */\n      dup7\n        /* \"#utility.yul\":3429:3447   */\n      add\n        /* \"#utility.yul\":3416:3448   */\n      calldataload\n        /* \"#utility.yul\":3400:3448   */\n      swap2\n      pop\n        /* \"#utility.yul\":3473:3475   */\n      dup1\n        /* \"#utility.yul\":3463:3471   */\n      dup3\n        /* \"#utility.yul\":3460:3476   */\n      gt\n        /* \"#utility.yul\":3457:3493   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":3489:3490   */\n      0x00\n        /* \"#utility.yul\":3486:3487   */\n      dup1\n        /* \"#utility.yul\":3479:3491   */\n      revert\n        /* \"#utility.yul\":3457:3493   */\n    tag_487:\n      pop\n        /* \"#utility.yul\":3512:3575   */\n      tag_488\n        /* \"#utility.yul\":3567:3574   */\n      dup7\n        /* \"#utility.yul\":3556:3564   */\n      dup3\n        /* \"#utility.yul\":3545:3554   */\n      dup8\n        /* \"#utility.yul\":3541:3565   */\n      add\n        /* \"#utility.yul\":3512:3575   */\n      tag_447\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3502:3575   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2912:3581   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4118:4648   */\n    tag_448:\n        /* \"#utility.yul\":4160:4165   */\n      0x00\n        /* \"#utility.yul\":4213:4216   */\n      dup3\n        /* \"#utility.yul\":4206:4210   */\n      0x1f\n        /* \"#utility.yul\":4198:4204   */\n      dup4\n        /* \"#utility.yul\":4194:4211   */\n      add\n        /* \"#utility.yul\":4190:4217   */\n      slt\n        /* \"#utility.yul\":4180:4235   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":4231:4232   */\n      0x00\n        /* \"#utility.yul\":4228:4229   */\n      dup1\n        /* \"#utility.yul\":4221:4233   */\n      revert\n        /* \"#utility.yul\":4180:4235   */\n    tag_492:\n        /* \"#utility.yul\":4267:4273   */\n      dup2\n        /* \"#utility.yul\":4254:4274   */\n      calldataload\n        /* \"#utility.yul\":4293:4311   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4289:4291   */\n      dup2\n        /* \"#utility.yul\":4286:4312   */\n      gt\n        /* \"#utility.yul\":4283:4335   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":4315:4333   */\n      tag_494\n      tag_232\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4359:4414   */\n      tag_495\n        /* \"#utility.yul\":4402:4404   */\n      0x1f\n        /* \"#utility.yul\":4383:4396   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4379:4406   */\n      and\n        /* \"#utility.yul\":4408:4412   */\n      0x20\n        /* \"#utility.yul\":4375:4413   */\n      add\n        /* \"#utility.yul\":4359:4414   */\n      tag_446\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4439:4441   */\n      dup2\n        /* \"#utility.yul\":4430:4437   */\n      dup2\n        /* \"#utility.yul\":4423:4442   */\n      mstore\n        /* \"#utility.yul\":4485:4488   */\n      dup5\n        /* \"#utility.yul\":4478:4482   */\n      0x20\n        /* \"#utility.yul\":4473:4475   */\n      dup4\n        /* \"#utility.yul\":4465:4471   */\n      dup7\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4457:4483   */\n      add\n        /* \"#utility.yul\":4454:4489   */\n      gt\n        /* \"#utility.yul\":4451:4506   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4499:4500   */\n      dup1\n        /* \"#utility.yul\":4492:4504   */\n      revert\n        /* \"#utility.yul\":4451:4506   */\n    tag_496:\n        /* \"#utility.yul\":4567:4569   */\n      dup2\n        /* \"#utility.yul\":4560:4564   */\n      0x20\n        /* \"#utility.yul\":4552:4558   */\n      dup6\n        /* \"#utility.yul\":4548:4565   */\n      add\n        /* \"#utility.yul\":4541:4545   */\n      0x20\n        /* \"#utility.yul\":4532:4539   */\n      dup4\n        /* \"#utility.yul\":4528:4546   */\n      add\n        /* \"#utility.yul\":4515:4570   */\n      calldatacopy\n        /* \"#utility.yul\":4615:4616   */\n      0x00\n        /* \"#utility.yul\":4590:4606   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4608:4612   */\n      0x20\n        /* \"#utility.yul\":4586:4613   */\n      add\n        /* \"#utility.yul\":4579:4617   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4594:4601   */\n      swap4\n        /* \"#utility.yul\":4118:4648   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:5596   */\n    tag_118:\n        /* \"#utility.yul\":4807:4813   */\n      0x00\n        /* \"#utility.yul\":4815:4821   */\n      dup1\n        /* \"#utility.yul\":4823:4829   */\n      0x00\n        /* \"#utility.yul\":4831:4837   */\n      dup1\n        /* \"#utility.yul\":4839:4845   */\n      0x00\n        /* \"#utility.yul\":4892:4895   */\n      0xa0\n        /* \"#utility.yul\":4880:4889   */\n      dup7\n        /* \"#utility.yul\":4871:4878   */\n      dup9\n        /* \"#utility.yul\":4867:4890   */\n      sub\n        /* \"#utility.yul\":4863:4896   */\n      slt\n        /* \"#utility.yul\":4860:4913   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4909:4910   */\n      0x00\n        /* \"#utility.yul\":4906:4907   */\n      dup1\n        /* \"#utility.yul\":4899:4911   */\n      revert\n        /* \"#utility.yul\":4860:4913   */\n    tag_498:\n        /* \"#utility.yul\":4932:4961   */\n      tag_499\n        /* \"#utility.yul\":4951:4960   */\n      dup7\n        /* \"#utility.yul\":4932:4961   */\n      tag_445\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4922:4961   */\n      swap5\n      pop\n        /* \"#utility.yul\":4980:5018   */\n      tag_500\n        /* \"#utility.yul\":5014:5016   */\n      0x20\n        /* \"#utility.yul\":5003:5012   */\n      dup8\n        /* \"#utility.yul\":4999:5017   */\n      add\n        /* \"#utility.yul\":4980:5018   */\n      tag_445\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4970:5018   */\n      swap4\n      pop\n        /* \"#utility.yul\":5069:5071   */\n      0x40\n        /* \"#utility.yul\":5058:5067   */\n      dup7\n        /* \"#utility.yul\":5054:5072   */\n      add\n        /* \"#utility.yul\":5041:5073   */\n      calldataload\n        /* \"#utility.yul\":5092:5110   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5133:5135   */\n      dup1\n        /* \"#utility.yul\":5125:5131   */\n      dup3\n        /* \"#utility.yul\":5122:5136   */\n      gt\n        /* \"#utility.yul\":5119:5153   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5146:5147   */\n      dup1\n        /* \"#utility.yul\":5139:5151   */\n      revert\n        /* \"#utility.yul\":5119:5153   */\n    tag_501:\n        /* \"#utility.yul\":5172:5233   */\n      tag_502\n        /* \"#utility.yul\":5225:5232   */\n      dup10\n        /* \"#utility.yul\":5216:5222   */\n      dup4\n        /* \"#utility.yul\":5205:5214   */\n      dup11\n        /* \"#utility.yul\":5201:5223   */\n      add\n        /* \"#utility.yul\":5172:5233   */\n      tag_447\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5162:5233   */\n      swap5\n      pop\n        /* \"#utility.yul\":5286:5288   */\n      0x60\n        /* \"#utility.yul\":5275:5284   */\n      dup9\n        /* \"#utility.yul\":5271:5289   */\n      add\n        /* \"#utility.yul\":5258:5290   */\n      calldataload\n        /* \"#utility.yul\":5242:5290   */\n      swap2\n      pop\n        /* \"#utility.yul\":5315:5317   */\n      dup1\n        /* \"#utility.yul\":5305:5313   */\n      dup3\n        /* \"#utility.yul\":5302:5318   */\n      gt\n        /* \"#utility.yul\":5299:5335   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5331:5332   */\n      0x00\n        /* \"#utility.yul\":5328:5329   */\n      dup1\n        /* \"#utility.yul\":5321:5333   */\n      revert\n        /* \"#utility.yul\":5299:5335   */\n    tag_503:\n        /* \"#utility.yul\":5354:5417   */\n      tag_504\n        /* \"#utility.yul\":5409:5416   */\n      dup10\n        /* \"#utility.yul\":5398:5406   */\n      dup4\n        /* \"#utility.yul\":5387:5396   */\n      dup11\n        /* \"#utility.yul\":5383:5407   */\n      add\n        /* \"#utility.yul\":5354:5417   */\n      tag_447\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5344:5417   */\n      swap4\n      pop\n        /* \"#utility.yul\":5470:5473   */\n      0x80\n        /* \"#utility.yul\":5459:5468   */\n      dup9\n        /* \"#utility.yul\":5455:5474   */\n      add\n        /* \"#utility.yul\":5442:5475   */\n      calldataload\n        /* \"#utility.yul\":5426:5475   */\n      swap2\n      pop\n        /* \"#utility.yul\":5500:5502   */\n      dup1\n        /* \"#utility.yul\":5490:5498   */\n      dup3\n        /* \"#utility.yul\":5487:5503   */\n      gt\n        /* \"#utility.yul\":5484:5520   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":5516:5517   */\n      0x00\n        /* \"#utility.yul\":5513:5514   */\n      dup1\n        /* \"#utility.yul\":5506:5518   */\n      revert\n        /* \"#utility.yul\":5484:5520   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":5539:5590   */\n      tag_506\n        /* \"#utility.yul\":5582:5589   */\n      dup9\n        /* \"#utility.yul\":5571:5579   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup10\n        /* \"#utility.yul\":5556:5580   */\n      add\n        /* \"#utility.yul\":5539:5590   */\n      tag_448\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5529:5590   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4653:5596   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:6414   */\n    tag_139:\n        /* \"#utility.yul\":5912:5918   */\n      0x00\n        /* \"#utility.yul\":5920:5926   */\n      dup1\n        /* \"#utility.yul\":5928:5934   */\n      0x00\n        /* \"#utility.yul\":5936:5942   */\n      dup1\n        /* \"#utility.yul\":5944:5950   */\n      0x00\n        /* \"#utility.yul\":5997:6000   */\n      0xa0\n        /* \"#utility.yul\":5985:5994   */\n      dup7\n        /* \"#utility.yul\":5976:5983   */\n      dup9\n        /* \"#utility.yul\":5972:5995   */\n      sub\n        /* \"#utility.yul\":5968:6001   */\n      slt\n        /* \"#utility.yul\":5965:6018   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":6014:6015   */\n      0x00\n        /* \"#utility.yul\":6011:6012   */\n      dup1\n        /* \"#utility.yul\":6004:6016   */\n      revert\n        /* \"#utility.yul\":5965:6018   */\n    tag_509:\n        /* \"#utility.yul\":6037:6066   */\n      tag_510\n        /* \"#utility.yul\":6056:6065   */\n      dup7\n        /* \"#utility.yul\":6037:6066   */\n      tag_445\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6027:6066   */\n      swap5\n      pop\n        /* \"#utility.yul\":6085:6123   */\n      tag_511\n        /* \"#utility.yul\":6119:6121   */\n      0x20\n        /* \"#utility.yul\":6108:6117   */\n      dup8\n        /* \"#utility.yul\":6104:6122   */\n      add\n        /* \"#utility.yul\":6085:6123   */\n      tag_445\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6075:6123   */\n      swap4\n      pop\n        /* \"#utility.yul\":6170:6172   */\n      0x40\n        /* \"#utility.yul\":6159:6168   */\n      dup7\n        /* \"#utility.yul\":6155:6173   */\n      add\n        /* \"#utility.yul\":6142:6174   */\n      calldataload\n        /* \"#utility.yul\":6132:6174   */\n      swap3\n      pop\n        /* \"#utility.yul\":6221:6223   */\n      0x60\n        /* \"#utility.yul\":6210:6219   */\n      dup7\n        /* \"#utility.yul\":6206:6224   */\n      add\n        /* \"#utility.yul\":6193:6225   */\n      calldataload\n        /* \"#utility.yul\":6183:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6276:6279   */\n      0x80\n        /* \"#utility.yul\":6265:6274   */\n      dup7\n        /* \"#utility.yul\":6261:6280   */\n      add\n        /* \"#utility.yul\":6248:6281   */\n      calldataload\n        /* \"#utility.yul\":6304:6322   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6296:6302   */\n      dup2\n        /* \"#utility.yul\":6293:6323   */\n      gt\n        /* \"#utility.yul\":6290:6340   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":6336:6337   */\n      0x00\n        /* \"#utility.yul\":6333:6334   */\n      dup1\n        /* \"#utility.yul\":6326:6338   */\n      revert\n        /* \"#utility.yul\":6290:6340   */\n    tag_512:\n        /* \"#utility.yul\":6359:6408   */\n      tag_506\n        /* \"#utility.yul\":6400:6407   */\n      dup9\n        /* \"#utility.yul\":6391:6397   */\n      dup3\n        /* \"#utility.yul\":6380:6389   */\n      dup10\n        /* \"#utility.yul\":6376:6398   */\n      add\n        /* \"#utility.yul\":6359:6408   */\n      tag_448\n      jump\t// in\n        /* \"#utility.yul\":6419:6775   */\n    tag_157:\n        /* \"#utility.yul\":6621:6623   */\n      0x20\n        /* \"#utility.yul\":6603:6624   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6640:6658   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6633:6663   */\n      mstore\n        /* \"#utility.yul\":6699:6733   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6694:6696   */\n      0x40\n        /* \"#utility.yul\":6679:6697   */\n      dup3\n      add\n        /* \"#utility.yul\":6672:6734   */\n      mstore\n        /* \"#utility.yul\":6766:6768   */\n      0x60\n        /* \"#utility.yul\":6751:6769   */\n      add\n      swap1\n        /* \"#utility.yul\":6419:6775   */\n      jump\t// out\n        /* \"#utility.yul\":6780:6907   */\n    tag_449:\n        /* \"#utility.yul\":6841:6851   */\n      0x4e487b71\n        /* \"#utility.yul\":6836:6839   */\n      0xe0\n        /* \"#utility.yul\":6832:6852   */\n      shl\n        /* \"#utility.yul\":6829:6830   */\n      0x00\n        /* \"#utility.yul\":6822:6853   */\n      mstore\n        /* \"#utility.yul\":6872:6876   */\n      0x11\n        /* \"#utility.yul\":6869:6870   */\n      0x04\n        /* \"#utility.yul\":6862:6877   */\n      mstore\n        /* \"#utility.yul\":6896:6900   */\n      0x24\n        /* \"#utility.yul\":6893:6894   */\n      0x00\n        /* \"#utility.yul\":6886:6901   */\n      revert\n        /* \"#utility.yul\":6912:7080   */\n    tag_160:\n        /* \"#utility.yul\":6952:6959   */\n      0x00\n        /* \"#utility.yul\":7018:7019   */\n      dup2\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7010:7016   */\n      not\n        /* \"#utility.yul\":7006:7020   */\n      div\n        /* \"#utility.yul\":7003:7004   */\n      dup4\n        /* \"#utility.yul\":7000:7021   */\n      gt\n        /* \"#utility.yul\":6995:6996   */\n      dup3\n        /* \"#utility.yul\":6988:6997   */\n      iszero\n        /* \"#utility.yul\":6981:6998   */\n      iszero\n        /* \"#utility.yul\":6977:7022   */\n      and\n        /* \"#utility.yul\":6974:7045   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":7025:7043   */\n      tag_518\n      tag_449\n      jump\t// in\n    tag_518:\n      pop\n        /* \"#utility.yul\":7065:7074   */\n      mul\n      swap1\n        /* \"#utility.yul\":6912:7080   */\n      jump\t// out\n        /* \"#utility.yul\":8417:8552   */\n    tag_193:\n        /* \"#utility.yul\":8456:8459   */\n      0x00\n        /* \"#utility.yul\":8477:8494   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8474:8517   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":8497:8515   */\n      tag_524\n      tag_449\n      jump\t// in\n    tag_524:\n      pop\n        /* \"#utility.yul\":8544:8545   */\n      0x01\n        /* \"#utility.yul\":8533:8546   */\n      add\n      swap1\n        /* \"#utility.yul\":8417:8552   */\n      jump\t// out\n        /* \"#utility.yul\":9166:9294   */\n    tag_241:\n        /* \"#utility.yul\":9206:9209   */\n      0x00\n        /* \"#utility.yul\":9237:9238   */\n      dup3\n        /* \"#utility.yul\":9233:9239   */\n      not\n        /* \"#utility.yul\":9230:9231   */\n      dup3\n        /* \"#utility.yul\":9227:9240   */\n      gt\n        /* \"#utility.yul\":9224:9263   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":9243:9261   */\n      tag_529\n      tag_449\n      jump\t// in\n    tag_529:\n      pop\n        /* \"#utility.yul\":9279:9288   */\n      add\n      swap1\n        /* \"#utility.yul\":9166:9294   */\n      jump\t// out\n        /* \"#utility.yul\":9299:9424   */\n    tag_243:\n        /* \"#utility.yul\":9339:9343   */\n      0x00\n        /* \"#utility.yul\":9367:9368   */\n      dup3\n        /* \"#utility.yul\":9364:9365   */\n      dup3\n        /* \"#utility.yul\":9361:9369   */\n      lt\n        /* \"#utility.yul\":9358:9392   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":9372:9390   */\n      tag_532\n      tag_449\n      jump\t// in\n    tag_532:\n      pop\n        /* \"#utility.yul\":9409:9418   */\n      sub\n      swap1\n        /* \"#utility.yul\":9299:9424   */\n      jump\t// out\n        /* \"#utility.yul\":9429:9556   */\n    tag_246:\n        /* \"#utility.yul\":9490:9500   */\n      0x4e487b71\n        /* \"#utility.yul\":9485:9488   */\n      0xe0\n        /* \"#utility.yul\":9481:9501   */\n      shl\n        /* \"#utility.yul\":9478:9479   */\n      0x00\n        /* \"#utility.yul\":9471:9502   */\n      mstore\n        /* \"#utility.yul\":9521:9525   */\n      0x32\n        /* \"#utility.yul\":9518:9519   */\n      0x04\n        /* \"#utility.yul\":9511:9526   */\n      mstore\n        /* \"#utility.yul\":9545:9549   */\n      0x24\n        /* \"#utility.yul\":9542:9543   */\n      0x00\n        /* \"#utility.yul\":9535:9550   */\n      revert\n        /* \"#utility.yul\":9561:9996   */\n    tag_450:\n        /* \"#utility.yul\":9614:9617   */\n      0x00\n        /* \"#utility.yul\":9652:9657   */\n      dup2\n        /* \"#utility.yul\":9646:9658   */\n      mload\n        /* \"#utility.yul\":9679:9685   */\n      dup1\n        /* \"#utility.yul\":9674:9677   */\n      dup5\n        /* \"#utility.yul\":9667:9686   */\n      mstore\n        /* \"#utility.yul\":9705:9709   */\n      0x20\n        /* \"#utility.yul\":9734:9736   */\n      dup1\n        /* \"#utility.yul\":9729:9732   */\n      dup6\n        /* \"#utility.yul\":9725:9737   */\n      add\n        /* \"#utility.yul\":9718:9737   */\n      swap5\n      pop\n        /* \"#utility.yul\":9771:9773   */\n      dup1\n        /* \"#utility.yul\":9764:9769   */\n      dup5\n        /* \"#utility.yul\":9760:9774   */\n      add\n        /* \"#utility.yul\":9792:9793   */\n      0x00\n        /* \"#utility.yul\":9802:9971   */\n    tag_535:\n        /* \"#utility.yul\":9816:9822   */\n      dup4\n        /* \"#utility.yul\":9813:9814   */\n      dup2\n        /* \"#utility.yul\":9810:9823   */\n      lt\n        /* \"#utility.yul\":9802:9971   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":9877:9890   */\n      dup2\n      mload\n        /* \"#utility.yul\":9865:9891   */\n      dup8\n      mstore\n        /* \"#utility.yul\":9911:9923   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":9946:9961   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":9838:9839   */\n      0x01\n        /* \"#utility.yul\":9831:9840   */\n      add\n        /* \"#utility.yul\":9802:9971   */\n      jump(tag_535)\n    tag_537:\n      pop\n        /* \"#utility.yul\":9987:9990   */\n      swap5\n      swap6\n        /* \"#utility.yul\":9561:9996   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10001:10890   */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10452:10467   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10434:10468   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10504:10519   */\n      dup5\n      and\n        /* \"#utility.yul\":10499:10501   */\n      0x20\n        /* \"#utility.yul\":10484:10502   */\n      dup3\n      add\n        /* \"#utility.yul\":10477:10520   */\n      mstore\n        /* \"#utility.yul\":10414:10417   */\n      0xa0\n        /* \"#utility.yul\":10551:10553   */\n      0x40\n        /* \"#utility.yul\":10536:10554   */\n      dup3\n      add\n        /* \"#utility.yul\":10529:10560   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10377:10381   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10583:10640   */\n      tag_539\n      swap1\n        /* \"#utility.yul\":10620:10639   */\n      dup4\n      add\n        /* \"#utility.yul\":10612:10618   */\n      dup6\n        /* \"#utility.yul\":10583:10640   */\n      tag_450\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":10688:10697   */\n      dup3\n        /* \"#utility.yul\":10680:10686   */\n      dup2\n        /* \"#utility.yul\":10676:10698   */\n      sub\n        /* \"#utility.yul\":10671:10673   */\n      0x60\n        /* \"#utility.yul\":10660:10669   */\n      dup5\n        /* \"#utility.yul\":10656:10674   */\n      add\n        /* \"#utility.yul\":10649:10699   */\n      mstore\n        /* \"#utility.yul\":10722:10766   */\n      tag_540\n        /* \"#utility.yul\":10759:10765   */\n      dup2\n        /* \"#utility.yul\":10751:10757   */\n      dup6\n        /* \"#utility.yul\":10722:10766   */\n      tag_450\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10803:10825   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":10797:10800   */\n      0x80\n        /* \"#utility.yul\":10782:10801   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":10775:10826   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":10850:10851   */\n      0x00\n        /* \"#utility.yul\":10835:10852   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10881:10883   */\n      0x20\n        /* \"#utility.yul\":10869:10884   */\n      add\n      swap5\n        /* \"#utility.yul\":10001:10890   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10895:12147   */\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11385:11400   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11367:11401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11458:11473   */\n      dup5\n      and\n        /* \"#utility.yul\":11420:11422   */\n      0x20\n        /* \"#utility.yul\":11438:11456   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":11431:11474   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11316:11319   */\n      0xa0\n        /* \"#utility.yul\":11505:11507   */\n      0x40\n        /* \"#utility.yul\":11490:11508   */\n      dup4\n      add\n        /* \"#utility.yul\":11483:11514   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11563:11576   */\n      dup5\n      sload\n        /* \"#utility.yul\":11301:11320   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":11585:11607   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11268:11272   */\n      0x00\n        /* \"#utility.yul\":11651:11668   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":11691:11707   */\n      dup3\n      dup2\n      keccak256\n        /* \"#utility.yul\":11268:11272   */\n      swap1\n      swap3\n        /* \"#utility.yul\":11691:11707   */\n      swap1\n      swap2\n        /* \"#utility.yul\":11638:11641   */\n      0xc0\n        /* \"#utility.yul\":11623:11642   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":11420:11422   */\n      swap1\n        /* \"#utility.yul\":11268:11272   */\n      dup5\n        /* \"#utility.yul\":11735:11903   */\n    tag_542:\n        /* \"#utility.yul\":11749:11755   */\n      dup2\n        /* \"#utility.yul\":11746:11747   */\n      dup2\n        /* \"#utility.yul\":11743:11756   */\n      lt\n        /* \"#utility.yul\":11735:11903   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":11810:11823   */\n      dup5\n      sload\n        /* \"#utility.yul\":11798:11824   */\n      dup5\n      mstore\n        /* \"#utility.yul\":11891:11892   */\n      0x01\n        /* \"#utility.yul\":11879:11893   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":11844:11856   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":11764:11773   */\n      add\n        /* \"#utility.yul\":11735:11903   */\n      jump(tag_542)\n    tag_544:\n        /* \"#utility.yul\":11739:11742   */\n      pop\n      pop\n        /* \"#utility.yul\":11948:11957   */\n      dup5\n        /* \"#utility.yul\":11943:11946   */\n      dup3\n        /* \"#utility.yul\":11939:11958   */\n      sub\n        /* \"#utility.yul\":11934:11936   */\n      0x60\n        /* \"#utility.yul\":11923:11932   */\n      dup7\n        /* \"#utility.yul\":11919:11937   */\n      add\n        /* \"#utility.yul\":11912:11959   */\n      mstore\n        /* \"#utility.yul\":11982:12023   */\n      tag_545\n        /* \"#utility.yul\":12019:12022   */\n      dup3\n        /* \"#utility.yul\":12011:12017   */\n      dup8\n        /* \"#utility.yul\":11982:12023   */\n      tag_450\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12060:12082   */\n      dup6\n      dup2\n      sub\n        /* \"#utility.yul\":12054:12057   */\n      0x80\n        /* \"#utility.yul\":12039:12058   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":12032:12083   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":12107:12108   */\n      0x00\n        /* \"#utility.yul\":12092:12109   */\n      dup6\n      mstore\n        /* \"#utility.yul\":12126:12141   */\n      swap1\n      swap4\n      add\n      swap8\n        /* \"#utility.yul\":10895:12147   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12559:12776   */\n    tag_343:\n        /* \"#utility.yul\":12599:12600   */\n      0x00\n        /* \"#utility.yul\":12625:12626   */\n      dup3\n        /* \"#utility.yul\":12615:12747   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":12669:12679   */\n      0x4e487b71\n        /* \"#utility.yul\":12664:12667   */\n      0xe0\n        /* \"#utility.yul\":12660:12680   */\n      shl\n        /* \"#utility.yul\":12657:12658   */\n      0x00\n        /* \"#utility.yul\":12650:12681   */\n      mstore\n        /* \"#utility.yul\":12704:12708   */\n      0x12\n        /* \"#utility.yul\":12701:12702   */\n      0x04\n        /* \"#utility.yul\":12694:12709   */\n      mstore\n        /* \"#utility.yul\":12732:12736   */\n      0x24\n        /* \"#utility.yul\":12729:12730   */\n      0x00\n        /* \"#utility.yul\":12722:12737   */\n      revert\n        /* \"#utility.yul\":12615:12747   */\n    tag_548:\n      pop\n        /* \"#utility.yul\":12761:12770   */\n      div\n      swap1\n        /* \"#utility.yul\":12559:12776   */\n      jump\t// out\n        /* \"#utility.yul\":13186:13313   */\n    tag_376:\n        /* \"#utility.yul\":13247:13257   */\n      0x4e487b71\n        /* \"#utility.yul\":13242:13245   */\n      0xe0\n        /* \"#utility.yul\":13238:13258   */\n      shl\n        /* \"#utility.yul\":13235:13236   */\n      0x00\n        /* \"#utility.yul\":13228:13259   */\n      mstore\n        /* \"#utility.yul\":13278:13282   */\n      0x31\n        /* \"#utility.yul\":13275:13276   */\n      0x04\n        /* \"#utility.yul\":13268:13283   */\n      mstore\n        /* \"#utility.yul\":13302:13306   */\n      0x24\n        /* \"#utility.yul\":13299:13300   */\n      0x00\n        /* \"#utility.yul\":13292:13307   */\n      revert\n        /* \"#utility.yul\":13977:14254   */\n    tag_409:\n        /* \"#utility.yul\":14044:14050   */\n      0x00\n        /* \"#utility.yul\":14097:14099   */\n      0x20\n        /* \"#utility.yul\":14085:14094   */\n      dup3\n        /* \"#utility.yul\":14076:14083   */\n      dup5\n        /* \"#utility.yul\":14072:14095   */\n      sub\n        /* \"#utility.yul\":14068:14100   */\n      slt\n        /* \"#utility.yul\":14065:14117   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":14113:14114   */\n      0x00\n        /* \"#utility.yul\":14110:14111   */\n      dup1\n        /* \"#utility.yul\":14103:14115   */\n      revert\n        /* \"#utility.yul\":14065:14117   */\n    tag_554:\n        /* \"#utility.yul\":14145:14154   */\n      dup2\n        /* \"#utility.yul\":14139:14155   */\n      mload\n        /* \"#utility.yul\":14198:14203   */\n      dup1\n        /* \"#utility.yul\":14191:14204   */\n      iszero\n        /* \"#utility.yul\":14184:14205   */\n      iszero\n        /* \"#utility.yul\":14177:14182   */\n      dup2\n        /* \"#utility.yul\":14174:14206   */\n      eq\n        /* \"#utility.yul\":14164:14224   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":14220:14221   */\n      0x00\n        /* \"#utility.yul\":14217:14218   */\n      dup1\n        /* \"#utility.yul\":14210:14222   */\n      revert\n        /* \"#utility.yul\":15435:15693   */\n    tag_451:\n        /* \"#utility.yul\":15507:15508   */\n      0x00\n        /* \"#utility.yul\":15517:15630   */\n    tag_560:\n        /* \"#utility.yul\":15531:15537   */\n      dup4\n        /* \"#utility.yul\":15528:15529   */\n      dup2\n        /* \"#utility.yul\":15525:15538   */\n      lt\n        /* \"#utility.yul\":15517:15630   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":15607:15618   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15601:15619   */\n      mload\n        /* \"#utility.yul\":15588:15599   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15581:15620   */\n      mstore\n        /* \"#utility.yul\":15553:15555   */\n      0x20\n        /* \"#utility.yul\":15546:15556   */\n      add\n        /* \"#utility.yul\":15517:15630   */\n      jump(tag_560)\n    tag_562:\n        /* \"#utility.yul\":15648:15654   */\n      dup4\n        /* \"#utility.yul\":15645:15646   */\n      dup2\n        /* \"#utility.yul\":15642:15655   */\n      gt\n        /* \"#utility.yul\":15639:15687   */\n      iszero\n      tag_401\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":15683:15684   */\n      0x00\n        /* \"#utility.yul\":15665:15681   */\n      swap2\n      add\n        /* \"#utility.yul\":15658:15685   */\n      mstore\n        /* \"#utility.yul\":15435:15693   */\n      jump\t// out\n        /* \"#utility.yul\":15698:15972   */\n    tag_426:\n        /* \"#utility.yul\":15827:15830   */\n      0x00\n        /* \"#utility.yul\":15865:15871   */\n      dup3\n        /* \"#utility.yul\":15859:15872   */\n      mload\n        /* \"#utility.yul\":15881:15934   */\n      tag_565\n        /* \"#utility.yul\":15927:15933   */\n      dup2\n        /* \"#utility.yul\":15922:15925   */\n      dup5\n        /* \"#utility.yul\":15915:15919   */\n      0x20\n        /* \"#utility.yul\":15907:15913   */\n      dup8\n        /* \"#utility.yul\":15903:15920   */\n      add\n        /* \"#utility.yul\":15881:15934   */\n      tag_451\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15950:15966   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":15698:15972   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15977:16360   */\n    tag_439:\n        /* \"#utility.yul\":16126:16128   */\n      0x20\n        /* \"#utility.yul\":16115:16124   */\n      dup2\n        /* \"#utility.yul\":16108:16129   */\n      mstore\n        /* \"#utility.yul\":16089:16093   */\n      0x00\n        /* \"#utility.yul\":16158:16164   */\n      dup3\n        /* \"#utility.yul\":16152:16165   */\n      mload\n        /* \"#utility.yul\":16201:16207   */\n      dup1\n        /* \"#utility.yul\":16196:16198   */\n      0x20\n        /* \"#utility.yul\":16185:16194   */\n      dup5\n        /* \"#utility.yul\":16181:16199   */\n      add\n        /* \"#utility.yul\":16174:16208   */\n      mstore\n        /* \"#utility.yul\":16217:16283   */\n      tag_567\n        /* \"#utility.yul\":16276:16282   */\n      dup2\n        /* \"#utility.yul\":16271:16273   */\n      0x40\n        /* \"#utility.yul\":16260:16269   */\n      dup6\n        /* \"#utility.yul\":16256:16274   */\n      add\n        /* \"#utility.yul\":16251:16253   */\n      0x20\n        /* \"#utility.yul\":16243:16249   */\n      dup8\n        /* \"#utility.yul\":16239:16254   */\n      add\n        /* \"#utility.yul\":16217:16283   */\n      tag_451\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16344:16346   */\n      0x1f\n        /* \"#utility.yul\":16323:16338   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16319:16348   */\n      and\n        /* \"#utility.yul\":16304:16349   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16351:16353   */\n      0x40\n        /* \"#utility.yul\":16300:16354   */\n      add\n      swap3\n        /* \"#utility.yul\":15977:16360   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220385804910094f8cec0e2a00d1ff34a5b3531a200b0c3e9895cef62ba243ef80064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1656": {
									"entryPoint": null,
									"id": 1656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_941": {
									"entryPoint": null,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2596": {
									"entryPoint": null,
									"id": 2596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1736": {
									"entryPoint": 91,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_mul_t_uint256": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:281:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:213:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "133:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "154:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "161:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "166:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "157:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "157:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "147:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "147:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "147:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "198:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "201:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "191:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "191:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "191:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "226:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "229:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "219:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "219:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "219:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "97:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "90:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "90:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "83:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "83:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "105:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "116:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "112:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "112:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "120:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "108:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "108:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "102:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "102:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "79:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "79:45:13"
															},
															"nodeType": "YulIf",
															"src": "76:168:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "253:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "268:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "271:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "264:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "253:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "45:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "48:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "54:7:13",
														"type": ""
													}
												],
												"src": "14:265:13"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006005556104296006819055620d2f0060078190556200002591620000ab565b6200003990670de0b6b3a7640000620000ab565b6008553480156200004957600080fd5b5062000055336200005b565b620000d9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816000190483118215151615620000d457634e487b7160e01b600052601160045260246000fd5b500290565b6119f280620000e96000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063bc197c81116100a2578063e75235b811610071578063e75235b814610414578063e9fad8ee1461041c578063f23a6e6114610424578063f2fde38b1461044357600080fd5b8063bc197c81146103ae578063c4091443146103e6578063c6c9bd47146103f9578063dadcde101461040c57600080fd5b8063a197d0db116100de578063a197d0db1461032d578063a694fc3a1461033e578063a87430ba14610351578063aa8932f11461039b57600080fd5b8063715018a6146102eb5780637612f53c146102f35780638da5cb5b1461031c57600080fd5b80632de1ea011161017157806355ac2fd31161014b57806355ac2fd31461029d5780635fcbd285146102a5578063601abc54146102d057806363c66891146102d857600080fd5b80632de1ea01146102645780632e1a7d4d146102775780634b02218f1461028a57600080fd5b806314f8beca116101ad57806314f8beca1461021657806316dcb5881461022b5780631e83409a1461023e57806325ca4cff1461025157600080fd5b806301ffc9a7146101d4578063027932f9146101fc5780630af2c6ca1461020e575b600080fd5b6101e76101e23660046113a2565b610456565b60405190151581526020015b60405180910390f35b6005545b6040519081526020016101f3565b600254610200565b6102296102243660046113cc565b61048d565b005b610200610239366004611401565b6104eb565b61022961024c366004611401565b61056b565b61020061025f366004611401565b610720565b6102296102723660046113cc565b610779565b6102296102853660046113cc565b6107b5565b61022961029836600461141c565b6108d4565b610200610a77565b6001546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b600654610200565b6102296102e636600461150b565b610a8e565b610229610b2c565b610200610301366004611401565b6001600160a01b031660009081526003602052604090205490565b6000546001600160a01b03166102b8565b6001546001600160a01b03166102b8565b61022961034c3660046113cc565b610b62565b61038061035f366004611401565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101f3565b6102296103a9366004611401565b610c27565b6103cd6103bc3660046115ef565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101f3565b6102296103f4366004611401565b610c73565b6102006104073660046113cc565b610d9c565b600754610200565b600854610200565b610229610dbd565b6103cd610432366004611699565b63f23a6e6160e01b95945050505050565b610229610451366004611401565b610dd6565b60006001600160e01b03198216630271189760e51b148061048757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146104c05760405162461bcd60e51b81526004016104b7906116fe565b60405180910390fd5b60078190556006546104d3908290611749565b6104e590670de0b6b3a7640000611749565b60085550565b6000806104f783610720565b90505b60085481111561051957600854610512908290610e71565b90506104fa565b6001600160a01b03831660009081526003602052604081205490819003610544575060009392505050565b6105638161055d84600854610e7190919063ffffffff16565b90610e7d565b949350505050565b6002546105ac5760405162461bcd60e51b815260206004820152600f60248201526e105b1b081391951cc819985c9b5959608a1b60448201526064016104b7565b6008546105b833610720565b10156105fc5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420506f696e747360681b60448201526064016104b7565b3360008181526003602052604090206008549091610624919061061e90610720565b90610e71565b81600201819055504281600101819055506000806106426002610e89565b91509150610651600282610f1b565b604051637921219560e11b8152306004820152336024820152604481018390526001606482015260a06084820152600060a48201526001600160a01b0385169063f242432a9060c401600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b505050506005600081546106db90611768565b90915550604080518381526001602082015233917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a250505050565b6001600160a01b038116600090815260036020908152604080832081516060810183528154815260018201549381019390935260020154908201526107726107678261100d565b60408301519061102f565b9392505050565b6000546001600160a01b031633146107a35760405162461bcd60e51b81526004016104b7906116fe565b60068190556007546104d39082611749565b336000908152600360205260409020805482111561080b5760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081cdd185ad959606a1b60448201526064016104b7565b61081433610720565b600282015580546108259083610e71565b80825560000361087b57600854816002015411156108735760006108586008548360020154610e7d90919063ffffffff16565b600854909150610868908261103b565b60028301555061087b565b600060028201555b426001808301919091555461089a906001600160a01b03163384611047565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6000546001600160a01b031633146108fe5760405162461bcd60e51b81526004016104b7906116fe565b60008167ffffffffffffffff8111156109195761091961144f565b604051908082528060200260200182016040528015610942578160200160208202803683370190505b50905060008267ffffffffffffffff8111156109605761096061144f565b604051908082528060200260200182016040528015610989578160200160208202803683370190505b509050835b6109988585611781565b811015610a005780836109ab8783611799565b815181106109bb576109bb6117b0565b60209081029190910101526001826109d38784611799565b815181106109e3576109e36117b0565b6020908102919091010152806109f881611768565b91505061098e565b50610a0c6002836110aa565b604051631759616b60e11b81526001600160a01b03861690632eb2c2d690610a3e903390309087908790600401611801565b600060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b505050505050505050565b6000806000610a866002610e89565b509392505050565b6000546001600160a01b03163314610ab85760405162461bcd60e51b81526004016104b7906116fe565b610ac36002836110aa565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610af5903390309087908790600401611801565b600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610b565760405162461bcd60e51b81526004016104b7906116fe565b610b606000611105565b565b600154610b7a906001600160a01b0316333084611155565b3360008181526003602052604081206004805460018101825592527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b031916909217909155805415610be157610bdb33610720565b60028201555b8054610bed908361102f565b815542600182015560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016108c8565b6000546001600160a01b03163314610c515760405162461bcd60e51b81526004016104b7906116fe565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c9d5760405162461bcd60e51b81526004016104b7906116fe565b60025460008167ffffffffffffffff811115610cbb57610cbb61144f565b604051908082528060200260200182016040528015610ce4578160200160208202803683370190505b50905060005b82811015610d23576001828281518110610d0657610d066117b0565b602090810291909101015280610d1b81611768565b915050610cea565b50604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610d579030903390600290879060040161185c565b600060405180830381600087803b158015610d7157600080fd5b505af1158015610d85573d6000803e3d6000fd5b5050505060026000610d979190611370565b505050565b60028181548110610dac57600080fd5b600091825260209091200154905081565b33600090815260036020526040902054610b60906107b5565b6000546001600160a01b03163314610e005760405162461bcd60e51b81526004016104b7906116fe565b6001600160a01b038116610e655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b7565b610e6e81611105565b50565b60006107728284611799565b600061077282846118e7565b60008082600081548110610e9f57610e9f6117b0565b906000526020600020015491506000905060005b8354811015610f155782848281548110610ecf57610ecf6117b0565b90600052602060002001541015610f0357838181548110610ef257610ef26117b0565b906000526020600020015492508091505b80610f0d81611768565b915050610eb3565b50915091565b81548110610f775760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016104b7565b8154610f8590600190611799565b811015610fe35781610f98826001611781565b81548110610fa857610fa86117b0565b9060005260206000200154828281548110610fc557610fc56117b0565b60009182526020909120015580610fdb81611768565b915050610f77565b81805480610ff357610ff3611909565b600190038181906000526020600020016000905590555050565b8051602082015160009142916107729190611029908490610e71565b9061103b565b60006107728284611781565b60006107728284611749565b6040516001600160a01b038316602482015260448101829052610d9790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611193565b8051156111015760005b8151811015610d9757828282815181106110d0576110d06117b0565b60209081029190910181015182546001810184556000938452919092200155806110f981611768565b9150506110b4565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261118d9085906323b872dd60e01b90608401611073565b50505050565b60006111e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112659092919063ffffffff16565b805190915015610d975780806020019051810190611206919061191f565b610d975760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b7565b6060610563848460008585843b6112be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b7565b600080866001600160a01b031685876040516112da919061196d565b60006040518083038185875af1925050503d8060008114611317576040519150601f19603f3d011682016040523d82523d6000602084013e61131c565b606091505b509150915061132c828286611337565b979650505050505050565b60608315611346575081610772565b8251156113565782518084602001fd5b8160405162461bcd60e51b81526004016104b79190611989565b5080546000825590600052602060002090810190610e6e91905b8082111561139e576000815560010161138a565b5090565b6000602082840312156113b457600080fd5b81356001600160e01b03198116811461077257600080fd5b6000602082840312156113de57600080fd5b5035919050565b80356001600160a01b03811681146113fc57600080fd5b919050565b60006020828403121561141357600080fd5b610772826113e5565b60008060006060848603121561143157600080fd5b61143a846113e5565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561148e5761148e61144f565b604052919050565b600082601f8301126114a757600080fd5b8135602067ffffffffffffffff8211156114c3576114c361144f565b8160051b6114d2828201611465565b92835284810182019282810190878511156114ec57600080fd5b83870192505b8483101561132c578235825291830191908301906114f2565b60008060006060848603121561152057600080fd5b611529846113e5565b9250602084013567ffffffffffffffff8082111561154657600080fd5b61155287838801611496565b9350604086013591508082111561156857600080fd5b5061157586828701611496565b9150509250925092565b600082601f83011261159057600080fd5b813567ffffffffffffffff8111156115aa576115aa61144f565b6115bd601f8201601f1916602001611465565b8181528460208386010111156115d257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561160757600080fd5b611610866113e5565b945061161e602087016113e5565b9350604086013567ffffffffffffffff8082111561163b57600080fd5b61164789838a01611496565b9450606088013591508082111561165d57600080fd5b61166989838a01611496565b9350608088013591508082111561167f57600080fd5b5061168c8882890161157f565b9150509295509295909350565b600080600080600060a086880312156116b157600080fd5b6116ba866113e5565b94506116c8602087016113e5565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116f257600080fd5b61168c8882890161157f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176357611763611733565b500290565b60006001820161177a5761177a611733565b5060010190565b6000821982111561179457611794611733565b500190565b6000828210156117ab576117ab611733565b500390565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156117f6578151875295820195908201906001016117da565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061182d908301856117c6565b828103606084015261183f81856117c6565b838103608090940193909352505060008152602001949350505050565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b818110156118b557845484526001948501949383019301611899565b505084820360608601526118c982876117c6565b85810360809096019590955260008552909301979650505050505050565b60008261190457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561193157600080fd5b8151801515811461077257600080fd5b60005b8381101561195c578181015183820152602001611944565b8381111561118d5750506000910152565b6000825161197f818460208701611941565b9190910192915050565b60208152600082518060208401526119a8816040850160208701611941565b601f01601f1916919091016040019291505056fea2646970667358221220385804910094f8cec0e2a00d1ff34a5b3531a200b0c3e9895cef62ba243ef80064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH2 0x429 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH3 0xD2F00 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH3 0x25 SWAP2 PUSH3 0xAB JUMP JUMPDEST PUSH3 0x39 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH3 0xAB JUMP JUMPDEST PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 CALLER PUSH3 0x5B JUMP JUMPDEST PUSH3 0xD9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0xD4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH2 0x19F2 DUP1 PUSH3 0xE9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE75235B8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC4091443 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xC6C9BD47 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xDADCDE10 EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA197D0DB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA197D0DB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xAA8932F1 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x7612F53C EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DE1EA01 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x55AC2FD3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x55AC2FD3 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x601ABC54 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DE1EA01 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14F8BECA GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x14F8BECA EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x16DCB588 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x25CA4CFF EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x27932F9 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x200 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x229 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x200 PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x3CD PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x15EF JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x3CD PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x229 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x487 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x4D3 SWAP1 DUP3 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x4E5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F7 DUP4 PUSH2 0x720 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH1 0x8 SLOAD PUSH2 0x512 SWAP1 DUP3 SWAP1 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x544 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x563 DUP2 PUSH2 0x55D DUP5 PUSH1 0x8 SLOAD PUSH2 0xE71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xE7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1B081391951CC819985C9B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x5B8 CALLER PUSH2 0x720 JUMP JUMPDEST LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420506F696E7473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 SLOAD SWAP1 SWAP2 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x61E SWAP1 PUSH2 0x720 JUMP JUMPDEST SWAP1 PUSH2 0xE71 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x642 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x651 PUSH1 0x2 DUP3 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1768 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x772 PUSH2 0x767 DUP3 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 PUSH2 0x102F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH2 0x4D3 SWAP1 DUP3 PUSH2 0x1749 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x814 CALLER PUSH2 0x720 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP1 SLOAD PUSH2 0x825 SWAP1 DUP4 PUSH2 0xE71 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x0 SUB PUSH2 0x87B JUMPI PUSH1 0x8 SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 PUSH2 0x858 PUSH1 0x8 SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xE7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x868 SWAP1 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE POP PUSH2 0x87B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x89A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x919 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x942 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x989 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST PUSH2 0x998 DUP6 DUP6 PUSH2 0x1781 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA00 JUMPI DUP1 DUP4 PUSH2 0x9AB DUP8 DUP4 PUSH2 0x1799 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x9D3 DUP8 DUP5 PUSH2 0x1799 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9E3 JUMPI PUSH2 0x9E3 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9F8 DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98E JUMP JUMPDEST POP PUSH2 0xA0C PUSH1 0x2 DUP4 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xA3E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA86 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xAC3 PUSH1 0x2 DUP4 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xAF5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xB60 PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1155 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD ISZERO PUSH2 0xBE1 JUMPI PUSH2 0xBDB CALLER PUSH2 0x720 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST DUP1 SLOAD PUSH2 0xBED SWAP1 DUP4 PUSH2 0x102F JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBB PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCE4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xD1B DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCEA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xD57 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x2 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x185C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0x1105 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0xF15 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xECF JUMPI PUSH2 0xECF PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0xF03 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEF2 JUMPI PUSH2 0xEF2 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xF0D DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB3 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xF85 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1799 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xFE3 JUMPI DUP2 PUSH2 0xF98 DUP3 PUSH1 0x1 PUSH2 0x1781 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFA8 JUMPI PUSH2 0xFA8 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFC5 JUMPI PUSH2 0xFC5 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0xFDB DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF77 JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 TIMESTAMP SWAP2 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x1029 SWAP1 DUP5 SWAP1 PUSH2 0xE71 JUMP JUMPDEST SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD97 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1193 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D0 JUMPI PUSH2 0x10D0 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x10F9 DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x118D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1073 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1265 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD97 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1206 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x563 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x131C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x132C DUP3 DUP3 DUP7 PUSH2 0x1337 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1346 JUMPI POP DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1356 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x1989 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x139E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x138A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143A DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C3 PUSH2 0x144F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x14D2 DUP3 DUP3 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x132C JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1529 DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1552 DUP8 DUP4 DUP9 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1575 DUP7 DUP3 DUP8 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15AA PUSH2 0x144F JUMP JUMPDEST PUSH2 0x15BD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1465 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1610 DUP7 PUSH2 0x13E5 JUMP JUMPDEST SWAP5 POP PUSH2 0x161E PUSH1 0x20 DUP8 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1647 DUP10 DUP4 DUP11 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1669 DUP10 DUP4 DUP11 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x157F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP7 PUSH2 0x13E5 JUMP JUMPDEST SWAP5 POP PUSH2 0x16C8 PUSH1 0x20 DUP8 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x157F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1763 PUSH2 0x1733 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x177A JUMPI PUSH2 0x177A PUSH2 0x1733 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1794 JUMPI PUSH2 0x1794 PUSH2 0x1733 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AB PUSH2 0x1733 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17F6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17DA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x182D SWAP1 DUP4 ADD DUP6 PUSH2 0x17C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x183F DUP2 DUP6 PUSH2 0x17C6 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18B5 JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x1899 JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x18C9 DUP3 DUP8 PUSH2 0x17C6 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1904 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x195C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1944 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x118D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x197F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1941 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19A8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PC DIV SWAP2 STOP SWAP5 0xF8 0xCE 0xC0 0xE2 LOG0 0xD 0x1F RETURN 0x4A JUMPDEST CALLDATALOAD BALANCE LOG2 STOP 0xB0 0xC3 0xE9 DUP10 0x5C 0xEF PUSH3 0xBA243E 0xF8 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:7268:0:-:0;;;7514:1;7481:34;;7552:4;7522:34;;;;7595:6;7563:38;;;;7636:27;;;:::i;:::-;:38;;7666:8;7636:38;:::i;:::-;7608:66;;7975:22;;;;;;;;;-1:-1:-1;921:32:1;719:10:9;921:18:1;:32::i;:::-;6648:7268:0;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:265:13:-;54:7;120:1;116;112:6;108:14;105:1;102:21;97:1;90:9;83:17;79:45;76:168;;;166:10;161:3;157:20;154:1;147:31;201:4;198:1;191:15;229:4;226:1;219:15;76:168;-1:-1:-1;264:9:13;;14:265::o;:::-;6648:7268:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_2286": {
									"entryPoint": 4499,
									"id": 2286,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2596": {
									"entryPoint": null,
									"id": 2596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1736": {
									"entryPoint": 4357,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unDebitedPoints_1384": {
									"entryPoint": 4109,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@addNFTBatch_977": {
									"entryPoint": 2702,
									"id": 977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addNftBatchWithNumber_1064": {
									"entryPoint": 2260,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_2818": {
									"entryPoint": 4143,
									"id": 2818,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_1227": {
									"entryPoint": 1387,
									"id": 1227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_2863": {
									"entryPoint": 3709,
									"id": 2863,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@exit_1337": {
									"entryPoint": 3517,
									"id": 1337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@extend_635": {
									"entryPoint": 4266,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_2448": {
									"entryPoint": null,
									"id": 2448,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2378": {
									"entryPoint": 4709,
									"id": 2378,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getLpMintAddress_1547": {
									"entryPoint": null,
									"id": 1547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLpUnitValue_1555": {
									"entryPoint": null,
									"id": 1555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNextNftTokenId_1410": {
									"entryPoint": 2679,
									"id": 1410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getThreshold_1418": {
									"entryPoint": null,
									"id": 1418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTimeUnitValue_1563": {
									"entryPoint": null,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserNextNftTime_1623": {
									"entryPoint": 1259,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserStakeAmount_1576": {
									"entryPoint": null,
									"id": 1576,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getWithdrawAmount_1631": {
									"entryPoint": null,
									"id": 1631,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_2307": {
									"entryPoint": null,
									"id": 2307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lpToken_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_847": {
									"entryPoint": 3721,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@mul_2848": {
									"entryPoint": 4155,
									"id": 2848,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftCount_1393": {
									"entryPoint": null,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftIds_881": {
									"entryPoint": 3484,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_1950": {
									"entryPoint": null,
									"id": 1950,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1927": {
									"entryPoint": null,
									"id": 1927,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_1665": {
									"entryPoint": null,
									"id": 1665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pointsBalance_1360": {
									"entryPoint": 1824,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeByIndex_532": {
									"entryPoint": 3867,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1693": {
									"entryPoint": 2860,
									"id": 1693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2120": {
									"entryPoint": 4437,
									"id": 2120,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2094": {
									"entryPoint": 4167,
									"id": 2094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLpMintAddress_1492": {
									"entryPoint": 3111,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLpUnitValue_1514": {
									"entryPoint": 1913,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTimeUnitValue_1536": {
									"entryPoint": 1165,
									"id": 1536,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1135": {
									"entryPoint": 2914,
									"id": 1135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_2833": {
									"entryPoint": 3697,
									"id": 2833,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1984": {
									"entryPoint": 1110,
									"id": 1984,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2629": {
									"entryPoint": null,
									"id": 2629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1716": {
									"entryPoint": 3542,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@urgentWithdraw_1478": {
									"entryPoint": 3187,
									"id": 1478,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@users_886": {
									"entryPoint": null,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_2583": {
									"entryPoint": 4919,
									"id": 2583,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1325": {
									"entryPoint": 1973,
									"id": 1325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2063__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16362:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:13",
														"type": ""
													}
												],
												"src": "497:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "795:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "770:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:32:13"
															},
															"nodeType": "YulIf",
															"src": "759:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "820:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "830:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "715:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "726:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "738:6:13",
														"type": ""
													}
												],
												"src": "679:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "913:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "923:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "945:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1015:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1024:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1017:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1017:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1017:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "974:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "985:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1000:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1005:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "996:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "996:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1009:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "992:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "992:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "981:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "981:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "971:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:50:13"
															},
															"nodeType": "YulIf",
															"src": "961:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "892:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "903:5:13",
														"type": ""
													}
												],
												"src": "864:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1112:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1133:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1142:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1154:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:32:13"
															},
															"nodeType": "YulIf",
															"src": "1122:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:13",
														"type": ""
													}
												],
												"src": "1042:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1337:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1383:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1392:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1395:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1385:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1385:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1385:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1358:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1350:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:32:13"
															},
															"nodeType": "YulIf",
															"src": "1347:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1408:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1437:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1418:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1456:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1466:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1534:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1545:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1517:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1287:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1298:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1310:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1318:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1326:6:13",
														"type": ""
													}
												],
												"src": "1233:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1698:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1686:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1728:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1759:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1764:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1768:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1721:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2063__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1645:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1656:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1667:4:13",
														"type": ""
													}
												],
												"src": "1560:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1832:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1865:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1783:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1960:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1970:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1980:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1998:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2020:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2036:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2042:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2032:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2051:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2047:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2047:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2016:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2002:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2131:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2133:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2074:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2086:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2071:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2071:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2110:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2122:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2107:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2107:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:62:13"
															},
															"nodeType": "YulIf",
															"src": "2065:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2173:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1940:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1949:6:13",
														"type": ""
													}
												],
												"src": "1915:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2287:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2295:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2283:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2283:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2302:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:35:13"
															},
															"nodeType": "YulIf",
															"src": "2269:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2333:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2356:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2343:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2337:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2372:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2382:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2376:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2427:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2401:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2398:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:26:13"
															},
															"nodeType": "YulIf",
															"src": "2395:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2456:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2473:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2460:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2485:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2516:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2520:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2496:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2533:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2546:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2537:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2570:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2582:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2593:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2598:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2610:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2632:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2640:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2645:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2624:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2614:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2676:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2688:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2678:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2678:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2678:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2663:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2671:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2660:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2660:15:13"
															},
															"nodeType": "YulIf",
															"src": "2657:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2701:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2716:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2724:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2712:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2705:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2813:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2831:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2818:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2818:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2849:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2860:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2865:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2856:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2856:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2849:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2760:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2762:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2773:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2778:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2769:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2769:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2762:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2740:3:13",
																"statements": []
															},
															"src": "2736:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2887:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2896:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2233:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2241:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2249:5:13",
														"type": ""
													}
												],
												"src": "2195:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3066:515:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3121:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3114:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3087:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3096:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3108:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:32:13"
															},
															"nodeType": "YulIf",
															"src": "3076:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3147:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3185:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3216:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3227:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3199:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3189:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3240:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3250:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3244:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3295:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3283:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3291:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3280:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:14:13"
															},
															"nodeType": "YulIf",
															"src": "3277:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3320:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3374:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3383:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3330:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:61:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3400:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3433:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3444:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3416:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3404:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3477:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3489:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3479:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3479:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3479:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3463:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3473:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3460:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:16:13"
															},
															"nodeType": "YulIf",
															"src": "3457:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3545:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3556:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3541:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3541:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3567:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3512:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:63:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3016:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3027:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3039:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3047:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3055:6:13",
														"type": ""
													}
												],
												"src": "2912:669:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3687:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3697:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3709:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3720:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3705:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3697:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3739:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3770:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3775:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3766:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3766:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3779:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3762:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3762:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3656:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3667:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3678:4:13",
														"type": ""
													}
												],
												"src": "3586:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3951:162:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3961:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3973:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3984:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3961:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4003:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4014:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3996:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3996:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4057:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4030:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4084:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4095:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4080:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4100:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4073:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3904:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3915:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3923:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3931:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3942:4:13",
														"type": ""
													}
												],
												"src": "3794:319:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4170:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4219:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4228:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4231:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4221:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4221:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4221:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4198:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4206:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4194:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4194:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4213:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4183:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:35:13"
															},
															"nodeType": "YulIf",
															"src": "4180:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4244:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4254:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4248:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4313:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4315:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4315:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4289:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4286:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:26:13"
															},
															"nodeType": "YulIf",
															"src": "4283:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4344:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "4387:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4391:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4383:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4383:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4402:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4398:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4398:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4379:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4379:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4408:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4375:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4359:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "4348:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "4430:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4439:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4423:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4423:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4490:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4499:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4502:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4492:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4492:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4465:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4473:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4461:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4478:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4485:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4454:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:35:13"
															},
															"nodeType": "YulIf",
															"src": "4451:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "4532:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4541:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4552:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4560:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4567:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4515:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4515:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "4594:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4603:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4590:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4590:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4608:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4586:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4615:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4579:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4626:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "4635:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4626:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4144:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4152:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4160:5:13",
														"type": ""
													}
												],
												"src": "4118:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4897:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4906:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4909:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4899:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4899:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4899:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4871:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4867:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4867:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:33:13"
															},
															"nodeType": "YulIf",
															"src": "4860:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4922:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4932:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4970:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5014:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4980:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5027:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5069:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5041:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5031:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5082:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5092:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5086:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5137:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5146:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5149:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5139:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5139:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5139:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5125:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5133:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5122:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:14:13"
															},
															"nodeType": "YulIf",
															"src": "5119:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5162:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5216:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5201:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5225:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5172:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5242:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5275:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5286:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5258:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5246:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5319:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5328:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5331:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5321:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5321:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5321:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5305:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5315:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5302:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:16:13"
															},
															"nodeType": "YulIf",
															"src": "5299:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5344:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5387:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5398:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5409:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5354:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5344:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5426:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5470:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5442:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5442:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5430:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5504:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5513:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5516:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5506:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5506:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5506:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5490:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5500:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5487:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:16:13"
															},
															"nodeType": "YulIf",
															"src": "5484:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5571:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5556:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5582:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5539:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4784:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4795:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4807:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4815:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4823:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4831:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4839:6:13",
														"type": ""
													}
												],
												"src": "4653:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5700:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5710:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5722:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5733:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5710:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5752:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5767:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5779:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5784:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5775:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5775:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5763:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5763:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5669:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5691:4:13",
														"type": ""
													}
												],
												"src": "5601:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5955:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6002:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6011:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6014:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6004:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6004:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6004:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5976:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5985:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5997:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5968:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5968:33:13"
															},
															"nodeType": "YulIf",
															"src": "5965:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6027:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6056:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6037:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6075:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6108:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6119:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6104:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6085:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6132:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6159:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6170:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6155:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6155:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6142:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6210:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6221:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6193:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6234:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6276:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6261:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6248:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6248:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6238:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6324:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6333:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6336:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6326:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6326:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6326:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6296:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6293:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:30:13"
															},
															"nodeType": "YulIf",
															"src": "6290:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6349:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6380:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6391:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6376:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6376:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6400:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6359:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5889:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5900:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5912:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5920:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5928:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5936:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5944:6:13",
														"type": ""
													}
												],
												"src": "5808:606:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6593:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6610:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6621:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6603:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6644:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6655:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6640:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6640:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6633:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6633:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6683:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6694:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6679:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6679:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6699:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6672:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6743:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6755:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6766:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6751:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6751:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6743:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6570:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6584:4:13",
														"type": ""
													}
												],
												"src": "6419:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6812:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6829:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6841:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6822:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6822:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6822:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6869:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6862:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6862:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6896:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6886:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6886:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6780:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6964:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7023:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7025:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7025:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7025:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6995:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6988:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6988:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6981:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7003:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7014:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7010:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7010:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7018:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7006:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7006:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7000:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7000:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6977:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:45:13"
															},
															"nodeType": "YulIf",
															"src": "6974:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7054:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7069:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7072:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7054:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6943:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6946:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6952:7:13",
														"type": ""
													}
												],
												"src": "6912:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7276:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7321:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7306:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7326:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7349:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7360:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7345:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7345:18:13"
																	},
																	{
																		"hexValue": "416c6c204e465473206661726d6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7365:17:13",
																		"type": "",
																		"value": "All NFTs farmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:45:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7392:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7404:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7392:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7236:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7250:4:13",
														"type": ""
													}
												],
												"src": "7085:339:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7603:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7613:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7613:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7654:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7665:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7650:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7670:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7643:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7643:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7704:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7689:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420506f696e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7709:21:13",
																		"type": "",
																		"value": "Insufficient Points"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7682:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7740:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7752:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7763:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7748:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7740:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7580:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7594:4:13",
														"type": ""
													}
												],
												"src": "7429:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8070:342:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8080:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8098:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8103:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8094:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8094:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8107:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8084:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8125:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8140:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8148:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8136:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8136:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8118:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8118:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8172:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8183:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8168:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8168:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8192:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8200:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8188:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8188:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8161:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8161:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8161:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8224:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8235:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8220:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8240:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8213:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8267:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8278:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8263:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8263:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8283:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8256:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8321:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:32:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8351:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8362:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8347:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8347:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8368:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8340:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8340:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8340:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8379:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8391:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8402:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8387:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8379:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8015:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8026:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8034:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8042:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8050:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8061:4:13",
														"type": ""
													}
												],
												"src": "7777:635:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8464:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8495:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8497:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8497:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8497:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8480:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8487:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8477:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:17:13"
															},
															"nodeType": "YulIf",
															"src": "8474:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8526:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8537:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8544:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8533:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8526:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8446:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8456:3:13",
														"type": ""
													}
												],
												"src": "8417:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8694:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8704:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8716:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8727:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8712:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8704:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8746:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8757:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8739:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8739:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8795:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8780:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8780:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8800:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8773:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8773:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8655:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8666:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8674:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8685:4:13",
														"type": ""
													}
												],
												"src": "8557:256:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8992:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9009:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9020:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9002:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9002:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9002:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9059:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9032:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9082:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9093:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9078:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9078:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9098:21:13",
																		"type": "",
																		"value": "Insufficient staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9071:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9071:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9071:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9129:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9141:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9152:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9137:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9137:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9129:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8969:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8983:4:13",
														"type": ""
													}
												],
												"src": "8818:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9214:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9241:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9243:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9243:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9243:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9230:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9237:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9227:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9227:13:13"
															},
															"nodeType": "YulIf",
															"src": "9224:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9272:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9283:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9286:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9279:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9272:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9197:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9200:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9206:3:13",
														"type": ""
													}
												],
												"src": "9166:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9348:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9370:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9372:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9372:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9372:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9364:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9367:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9361:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:8:13"
															},
															"nodeType": "YulIf",
															"src": "9358:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9401:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9413:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9416:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9409:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9409:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9401:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9330:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9333:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9339:4:13",
														"type": ""
													}
												],
												"src": "9299:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9461:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9478:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9485:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9481:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9471:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9471:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9518:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9521:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9511:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9511:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9535:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9535:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9429:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9622:374:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9632:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9652:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9646:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9636:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9674:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9679:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9667:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9695:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9705:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9699:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9718:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9729:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9734:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9725:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9725:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9718:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9746:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9764:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9771:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9760:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9760:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9750:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9783:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9792:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9787:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9851:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9872:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "9883:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9877:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9877:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9865:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9865:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9865:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9904:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9915:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9920:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9911:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9911:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9904:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9936:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9950:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9958:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9946:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9946:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9936:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9813:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9816:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9810:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9810:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9824:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9826:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9835:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9838:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9831:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9831:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9826:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9806:3:13",
																"statements": []
															},
															"src": "9802:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9980:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9987:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9980:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9599:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9606:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9614:3:13",
														"type": ""
													}
												],
												"src": "9561:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10386:504:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10396:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10414:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10419:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10410:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10410:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10423:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10400:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10441:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10456:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10464:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10434:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10434:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10434:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10488:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10499:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10484:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10484:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10508:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10516:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10504:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10504:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10477:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10477:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10540:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10551:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10536:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10536:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10556:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10529:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10529:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10569:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10612:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10624:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10635:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10620:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10620:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10583:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10583:57:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10573:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10660:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10671:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10656:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10680:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10688:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10676:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10708:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10751:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10759:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10722:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10722:44:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "10712:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10786:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10797:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10782:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "10807:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10815:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10803:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10803:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10775:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "10842:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10835:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10835:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10861:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "10873:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10881:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10869:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10861:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10331:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10342:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10350:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10358:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10366:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10377:4:13",
														"type": ""
													}
												],
												"src": "10001:889:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11277:870:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11287:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11305:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11316:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11301:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11301:19:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11291:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11329:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11347:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11352:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11343:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11356:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11339:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11333:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11374:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11389:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11397:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11367:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11410:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11420:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11414:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11442:9:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11453:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11438:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11438:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11462:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11470:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11458:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11458:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11431:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11431:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11431:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11494:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11505:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11490:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11490:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11510:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11523:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "11534:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "11527:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11549:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11569:6:13"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "11563:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11553:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11592:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11600:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11585:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11585:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11585:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11616:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11627:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11638:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11623:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11623:19:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11616:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11661:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11651:17:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11677:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11701:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11704:2:13"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11691:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11691:16:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11681:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11716:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11725:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11720:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11784:119:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11805:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "11816:6:13"
																						}
																					],
																					"functionName": {
																						"name": "sload",
																						"nodeType": "YulIdentifier",
																						"src": "11810:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11810:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11798:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11798:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11798:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11837:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11848:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11853:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11844:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11844:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11837:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11869:24:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11883:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11891:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11879:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11879:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11869:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11746:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11749:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11743:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11757:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11759:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11768:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11771:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11764:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11764:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11759:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11739:3:13",
																"statements": []
															},
															"src": "11735:168:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11923:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11934:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11919:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11943:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11948:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11939:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11939:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11912:47:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11968:55:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12011:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12019:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11982:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11982:41:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "11972:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12043:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12054:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12039:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "12064:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12072:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12060:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12060:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12032:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12032:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "12099:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12107:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12092:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12118:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "12130:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "12138:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12126:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12126:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12118:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11222:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11233:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11241:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11249:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11257:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11268:4:13",
														"type": ""
													}
												],
												"src": "10895:1252:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12326:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12343:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12354:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12336:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12336:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12377:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12388:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12373:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12373:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12393:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12366:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12366:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12416:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12427:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12412:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12412:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12432:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12405:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12405:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12405:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12487:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12498:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12483:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12483:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12503:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12476:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12476:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12476:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12521:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12533:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12544:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12529:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12521:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12303:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12317:4:13",
														"type": ""
													}
												],
												"src": "12152:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12605:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12636:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12664:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12669:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12660:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12660:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12650:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12650:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12701:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12704:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12694:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12694:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12694:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12729:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12732:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12722:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12722:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12722:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12625:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12618:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12618:9:13"
															},
															"nodeType": "YulIf",
															"src": "12615:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12756:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12765:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12768:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12761:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12761:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12756:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12590:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12593:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12599:1:13",
														"type": ""
													}
												],
												"src": "12559:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12955:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12972:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12983:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12965:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12965:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12965:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13006:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13017:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13002:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13022:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12995:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12995:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13045:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13056:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13041:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13041:18:13"
																	},
																	{
																		"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13061:34:13",
																		"type": "",
																		"value": "ArrayForUint256: index out of bo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13034:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13034:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13034:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13116:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13127:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13112:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13112:18:13"
																	},
																	{
																		"hexValue": "756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13132:6:13",
																		"type": "",
																		"value": "unds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13105:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13105:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13105:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13148:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13160:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13171:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13156:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13156:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13148:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12932:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12946:4:13",
														"type": ""
													}
												],
												"src": "12781:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13218:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13235:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13242:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13238:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13228:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13228:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13228:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13275:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13278:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13268:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13268:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13299:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13302:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13292:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13292:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13292:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "13186:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13447:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13457:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13469:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13480:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13465:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13465:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13457:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13499:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13514:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13530:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13535:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13526:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13526:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13539:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13522:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13522:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13510:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13492:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13492:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13563:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13574:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13559:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13559:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13579:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13552:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13552:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13552:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13408:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13419:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13427:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13438:4:13",
														"type": ""
													}
												],
												"src": "13318:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13754:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13764:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13776:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13787:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13772:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13764:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13799:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13817:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13822:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13813:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13813:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13826:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13809:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13809:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13803:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13844:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13859:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13867:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13855:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13837:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13837:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13837:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13891:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13902:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13887:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13887:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13911:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13919:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13907:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13880:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13880:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13880:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13943:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13954:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13939:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13939:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13959:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13932:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13932:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13707:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13718:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13726:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13734:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13745:4:13",
														"type": ""
													}
												],
												"src": "13597:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14055:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14101:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14110:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14113:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14103:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14103:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14103:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14076:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14085:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14072:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14072:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14097:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14068:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14068:32:13"
															},
															"nodeType": "YulIf",
															"src": "14065:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14126:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14145:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14139:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14130:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14208:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14217:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14220:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14210:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14210:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14210:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14177:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "14198:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14191:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14191:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14184:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14184:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14174:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14174:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14167:40:13"
															},
															"nodeType": "YulIf",
															"src": "14164:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14233:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14243:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14233:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14021:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14032:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14044:6:13",
														"type": ""
													}
												],
												"src": "13977:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14433:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14450:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14461:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14443:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14443:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14484:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14495:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14480:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14480:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14500:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14473:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14473:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14473:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14523:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14534:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14519:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14519:18:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14539:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14512:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14512:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14512:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14594:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14605:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14590:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14590:18:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14610:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14583:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14583:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14583:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14632:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14644:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14655:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14640:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14632:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14410:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14424:4:13",
														"type": ""
													}
												],
												"src": "14259:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14844:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14861:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14872:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14854:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14854:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14854:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14895:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14906:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14891:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14911:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14884:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14884:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14884:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14934:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14945:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14930:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14930:18:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14950:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14923:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14923:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14923:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15005:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15016:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15001:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15001:18:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15021:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14994:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14994:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15039:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15051:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15062:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15047:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15047:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15039:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14821:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14835:4:13",
														"type": ""
													}
												],
												"src": "14670:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15251:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15268:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15279:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15261:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15261:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15302:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15313:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15298:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15318:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15291:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15291:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15341:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15352:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15337:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15337:18:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15357:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15330:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15330:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15330:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15398:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15410:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15421:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15406:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15406:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15398:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15228:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15242:4:13",
														"type": ""
													}
												],
												"src": "15077:353:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15488:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15498:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15507:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15502:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15567:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15592:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15597:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15588:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15588:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15611:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15616:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15607:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15607:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15601:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15601:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15581:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15581:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15581:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15528:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15531:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15525:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15525:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15539:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15541:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15550:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15553:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15546:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15546:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15541:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15521:3:13",
																"statements": []
															},
															"src": "15517:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15656:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15669:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15674:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15665:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15665:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15683:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15658:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15658:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15658:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15645:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15648:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15642:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15642:13:13"
															},
															"nodeType": "YulIf",
															"src": "15639:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15466:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15471:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15476:6:13",
														"type": ""
													}
												],
												"src": "15435:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15835:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15845:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15865:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15859:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15849:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15907:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15915:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15903:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15903:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15922:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15927:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15881:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15881:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15881:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15943:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15954:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15959:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15950:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15943:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15811:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15816:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15827:3:13",
														"type": ""
													}
												],
												"src": "15698:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16098:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16115:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16108:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16108:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16108:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16138:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16158:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16152:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16152:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16142:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16185:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16196:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16181:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16181:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16201:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16174:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16174:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16174:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16243:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16251:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16239:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16260:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16271:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16256:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16256:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16276:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16217:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16217:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16217:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16292:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16308:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "16327:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16335:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16323:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16323:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16344:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16340:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16340:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16319:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16319:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16304:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16304:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16351:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16300:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16300:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16292:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16067:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16078:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16089:4:13",
														"type": ""
													}
												],
												"src": "15977:383:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2063__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"All NFTs farmed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient Points\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient staked\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, 32)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := sload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        mstore(0, value2)\n        let srcPtr := keccak256(0, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sload(srcPtr))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, 1)\n        }\n        mstore(add(headStart, 96), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, pos)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, _2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ArrayForUint256: index out of bo\")\n        mstore(add(headStart, 96), \"unds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063bc197c81116100a2578063e75235b811610071578063e75235b814610414578063e9fad8ee1461041c578063f23a6e6114610424578063f2fde38b1461044357600080fd5b8063bc197c81146103ae578063c4091443146103e6578063c6c9bd47146103f9578063dadcde101461040c57600080fd5b8063a197d0db116100de578063a197d0db1461032d578063a694fc3a1461033e578063a87430ba14610351578063aa8932f11461039b57600080fd5b8063715018a6146102eb5780637612f53c146102f35780638da5cb5b1461031c57600080fd5b80632de1ea011161017157806355ac2fd31161014b57806355ac2fd31461029d5780635fcbd285146102a5578063601abc54146102d057806363c66891146102d857600080fd5b80632de1ea01146102645780632e1a7d4d146102775780634b02218f1461028a57600080fd5b806314f8beca116101ad57806314f8beca1461021657806316dcb5881461022b5780631e83409a1461023e57806325ca4cff1461025157600080fd5b806301ffc9a7146101d4578063027932f9146101fc5780630af2c6ca1461020e575b600080fd5b6101e76101e23660046113a2565b610456565b60405190151581526020015b60405180910390f35b6005545b6040519081526020016101f3565b600254610200565b6102296102243660046113cc565b61048d565b005b610200610239366004611401565b6104eb565b61022961024c366004611401565b61056b565b61020061025f366004611401565b610720565b6102296102723660046113cc565b610779565b6102296102853660046113cc565b6107b5565b61022961029836600461141c565b6108d4565b610200610a77565b6001546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b600654610200565b6102296102e636600461150b565b610a8e565b610229610b2c565b610200610301366004611401565b6001600160a01b031660009081526003602052604090205490565b6000546001600160a01b03166102b8565b6001546001600160a01b03166102b8565b61022961034c3660046113cc565b610b62565b61038061035f366004611401565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101f3565b6102296103a9366004611401565b610c27565b6103cd6103bc3660046115ef565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101f3565b6102296103f4366004611401565b610c73565b6102006104073660046113cc565b610d9c565b600754610200565b600854610200565b610229610dbd565b6103cd610432366004611699565b63f23a6e6160e01b95945050505050565b610229610451366004611401565b610dd6565b60006001600160e01b03198216630271189760e51b148061048757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146104c05760405162461bcd60e51b81526004016104b7906116fe565b60405180910390fd5b60078190556006546104d3908290611749565b6104e590670de0b6b3a7640000611749565b60085550565b6000806104f783610720565b90505b60085481111561051957600854610512908290610e71565b90506104fa565b6001600160a01b03831660009081526003602052604081205490819003610544575060009392505050565b6105638161055d84600854610e7190919063ffffffff16565b90610e7d565b949350505050565b6002546105ac5760405162461bcd60e51b815260206004820152600f60248201526e105b1b081391951cc819985c9b5959608a1b60448201526064016104b7565b6008546105b833610720565b10156105fc5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420506f696e747360681b60448201526064016104b7565b3360008181526003602052604090206008549091610624919061061e90610720565b90610e71565b81600201819055504281600101819055506000806106426002610e89565b91509150610651600282610f1b565b604051637921219560e11b8152306004820152336024820152604481018390526001606482015260a06084820152600060a48201526001600160a01b0385169063f242432a9060c401600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b505050506005600081546106db90611768565b90915550604080518381526001602082015233917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a250505050565b6001600160a01b038116600090815260036020908152604080832081516060810183528154815260018201549381019390935260020154908201526107726107678261100d565b60408301519061102f565b9392505050565b6000546001600160a01b031633146107a35760405162461bcd60e51b81526004016104b7906116fe565b60068190556007546104d39082611749565b336000908152600360205260409020805482111561080b5760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081cdd185ad959606a1b60448201526064016104b7565b61081433610720565b600282015580546108259083610e71565b80825560000361087b57600854816002015411156108735760006108586008548360020154610e7d90919063ffffffff16565b600854909150610868908261103b565b60028301555061087b565b600060028201555b426001808301919091555461089a906001600160a01b03163384611047565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6000546001600160a01b031633146108fe5760405162461bcd60e51b81526004016104b7906116fe565b60008167ffffffffffffffff8111156109195761091961144f565b604051908082528060200260200182016040528015610942578160200160208202803683370190505b50905060008267ffffffffffffffff8111156109605761096061144f565b604051908082528060200260200182016040528015610989578160200160208202803683370190505b509050835b6109988585611781565b811015610a005780836109ab8783611799565b815181106109bb576109bb6117b0565b60209081029190910101526001826109d38784611799565b815181106109e3576109e36117b0565b6020908102919091010152806109f881611768565b91505061098e565b50610a0c6002836110aa565b604051631759616b60e11b81526001600160a01b03861690632eb2c2d690610a3e903390309087908790600401611801565b600060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b505050505050505050565b6000806000610a866002610e89565b509392505050565b6000546001600160a01b03163314610ab85760405162461bcd60e51b81526004016104b7906116fe565b610ac36002836110aa565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610af5903390309087908790600401611801565b600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610b565760405162461bcd60e51b81526004016104b7906116fe565b610b606000611105565b565b600154610b7a906001600160a01b0316333084611155565b3360008181526003602052604081206004805460018101825592527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b031916909217909155805415610be157610bdb33610720565b60028201555b8054610bed908361102f565b815542600182015560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016108c8565b6000546001600160a01b03163314610c515760405162461bcd60e51b81526004016104b7906116fe565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c9d5760405162461bcd60e51b81526004016104b7906116fe565b60025460008167ffffffffffffffff811115610cbb57610cbb61144f565b604051908082528060200260200182016040528015610ce4578160200160208202803683370190505b50905060005b82811015610d23576001828281518110610d0657610d066117b0565b602090810291909101015280610d1b81611768565b915050610cea565b50604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610d579030903390600290879060040161185c565b600060405180830381600087803b158015610d7157600080fd5b505af1158015610d85573d6000803e3d6000fd5b5050505060026000610d979190611370565b505050565b60028181548110610dac57600080fd5b600091825260209091200154905081565b33600090815260036020526040902054610b60906107b5565b6000546001600160a01b03163314610e005760405162461bcd60e51b81526004016104b7906116fe565b6001600160a01b038116610e655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b7565b610e6e81611105565b50565b60006107728284611799565b600061077282846118e7565b60008082600081548110610e9f57610e9f6117b0565b906000526020600020015491506000905060005b8354811015610f155782848281548110610ecf57610ecf6117b0565b90600052602060002001541015610f0357838181548110610ef257610ef26117b0565b906000526020600020015492508091505b80610f0d81611768565b915050610eb3565b50915091565b81548110610f775760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016104b7565b8154610f8590600190611799565b811015610fe35781610f98826001611781565b81548110610fa857610fa86117b0565b9060005260206000200154828281548110610fc557610fc56117b0565b60009182526020909120015580610fdb81611768565b915050610f77565b81805480610ff357610ff3611909565b600190038181906000526020600020016000905590555050565b8051602082015160009142916107729190611029908490610e71565b9061103b565b60006107728284611781565b60006107728284611749565b6040516001600160a01b038316602482015260448101829052610d9790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611193565b8051156111015760005b8151811015610d9757828282815181106110d0576110d06117b0565b60209081029190910181015182546001810184556000938452919092200155806110f981611768565b9150506110b4565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261118d9085906323b872dd60e01b90608401611073565b50505050565b60006111e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112659092919063ffffffff16565b805190915015610d975780806020019051810190611206919061191f565b610d975760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b7565b6060610563848460008585843b6112be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b7565b600080866001600160a01b031685876040516112da919061196d565b60006040518083038185875af1925050503d8060008114611317576040519150601f19603f3d011682016040523d82523d6000602084013e61131c565b606091505b509150915061132c828286611337565b979650505050505050565b60608315611346575081610772565b8251156113565782518084602001fd5b8160405162461bcd60e51b81526004016104b79190611989565b5080546000825590600052602060002090810190610e6e91905b8082111561139e576000815560010161138a565b5090565b6000602082840312156113b457600080fd5b81356001600160e01b03198116811461077257600080fd5b6000602082840312156113de57600080fd5b5035919050565b80356001600160a01b03811681146113fc57600080fd5b919050565b60006020828403121561141357600080fd5b610772826113e5565b60008060006060848603121561143157600080fd5b61143a846113e5565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561148e5761148e61144f565b604052919050565b600082601f8301126114a757600080fd5b8135602067ffffffffffffffff8211156114c3576114c361144f565b8160051b6114d2828201611465565b92835284810182019282810190878511156114ec57600080fd5b83870192505b8483101561132c578235825291830191908301906114f2565b60008060006060848603121561152057600080fd5b611529846113e5565b9250602084013567ffffffffffffffff8082111561154657600080fd5b61155287838801611496565b9350604086013591508082111561156857600080fd5b5061157586828701611496565b9150509250925092565b600082601f83011261159057600080fd5b813567ffffffffffffffff8111156115aa576115aa61144f565b6115bd601f8201601f1916602001611465565b8181528460208386010111156115d257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561160757600080fd5b611610866113e5565b945061161e602087016113e5565b9350604086013567ffffffffffffffff8082111561163b57600080fd5b61164789838a01611496565b9450606088013591508082111561165d57600080fd5b61166989838a01611496565b9350608088013591508082111561167f57600080fd5b5061168c8882890161157f565b9150509295509295909350565b600080600080600060a086880312156116b157600080fd5b6116ba866113e5565b94506116c8602087016113e5565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116f257600080fd5b61168c8882890161157f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176357611763611733565b500290565b60006001820161177a5761177a611733565b5060010190565b6000821982111561179457611794611733565b500190565b6000828210156117ab576117ab611733565b500390565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156117f6578151875295820195908201906001016117da565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061182d908301856117c6565b828103606084015261183f81856117c6565b838103608090940193909352505060008152602001949350505050565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b818110156118b557845484526001948501949383019301611899565b505084820360608601526118c982876117c6565b85810360809096019590955260008552909301979650505050505050565b60008261190457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561193157600080fd5b8151801515811461077257600080fd5b60005b8381101561195c578181015183820152602001611944565b8381111561118d5750506000910152565b6000825161197f818460208701611941565b9190910192915050565b60208152600082518060208401526119a8816040850160208701611941565b601f01601f1916919091016040019291505056fea2646970667358221220385804910094f8cec0e2a00d1ff34a5b3531a200b0c3e9895cef62ba243ef80064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE75235B8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xC4091443 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xC6C9BD47 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xDADCDE10 EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA197D0DB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA197D0DB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xAA8932F1 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x7612F53C EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DE1EA01 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x55AC2FD3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x55AC2FD3 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x601ABC54 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DE1EA01 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14F8BECA GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x14F8BECA EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x16DCB588 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x25CA4CFF EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x27932F9 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x200 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x150B JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x229 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x200 PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x35F CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x3CD PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x15EF JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CC JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x3CD PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x229 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1401 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x487 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x4D3 SWAP1 DUP3 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x4E5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F7 DUP4 PUSH2 0x720 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH1 0x8 SLOAD PUSH2 0x512 SWAP1 DUP3 SWAP1 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x544 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x563 DUP2 PUSH2 0x55D DUP5 PUSH1 0x8 SLOAD PUSH2 0xE71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xE7D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1B081391951CC819985C9B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x5B8 CALLER PUSH2 0x720 JUMP JUMPDEST LT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420506F696E7473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 SLOAD SWAP1 SWAP2 PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x61E SWAP1 PUSH2 0x720 JUMP JUMPDEST SWAP1 PUSH2 0xE71 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x642 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x651 PUSH1 0x2 DUP3 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD PUSH2 0x6DB SWAP1 PUSH2 0x1768 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x772 PUSH2 0x767 DUP3 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 PUSH2 0x102F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH2 0x4D3 SWAP1 DUP3 PUSH2 0x1749 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x814 CALLER PUSH2 0x720 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE DUP1 SLOAD PUSH2 0x825 SWAP1 DUP4 PUSH2 0xE71 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x0 SUB PUSH2 0x87B JUMPI PUSH1 0x8 SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 PUSH2 0x858 PUSH1 0x8 SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xE7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x868 SWAP1 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE POP PUSH2 0x87B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x89A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x919 JUMPI PUSH2 0x919 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x942 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x960 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x989 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST PUSH2 0x998 DUP6 DUP6 PUSH2 0x1781 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA00 JUMPI DUP1 DUP4 PUSH2 0x9AB DUP8 DUP4 PUSH2 0x1799 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9BB JUMPI PUSH2 0x9BB PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x9D3 DUP8 DUP5 PUSH2 0x1799 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9E3 JUMPI PUSH2 0x9E3 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9F8 DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98E JUMP JUMPDEST POP PUSH2 0xA0C PUSH1 0x2 DUP4 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xA3E SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA86 PUSH1 0x2 PUSH2 0xE89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xAC3 PUSH1 0x2 DUP4 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xAF5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xB60 PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1155 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD ISZERO PUSH2 0xBE1 JUMPI PUSH2 0xBDB CALLER PUSH2 0x720 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST DUP1 SLOAD PUSH2 0xBED SWAP1 DUP4 PUSH2 0x102F JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBB PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCE4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xD1B DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCEA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xD57 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x2 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x185C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0x1105 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xE9F JUMPI PUSH2 0xE9F PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0xF15 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xECF JUMPI PUSH2 0xECF PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0xF03 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEF2 JUMPI PUSH2 0xEF2 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xF0D DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB3 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xF85 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1799 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xFE3 JUMPI DUP2 PUSH2 0xF98 DUP3 PUSH1 0x1 PUSH2 0x1781 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFA8 JUMPI PUSH2 0xFA8 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFC5 JUMPI PUSH2 0xFC5 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0xFDB DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF77 JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 TIMESTAMP SWAP2 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x1029 SWAP1 DUP5 SWAP1 PUSH2 0xE71 JUMP JUMPDEST SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 DUP3 DUP5 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xD97 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1193 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D0 JUMPI PUSH2 0x10D0 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x10F9 DUP2 PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x118D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1073 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1265 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD97 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1206 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x563 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x131C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x132C DUP3 DUP3 DUP7 PUSH2 0x1337 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1346 JUMPI POP DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1356 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x1989 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x139E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x138A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x772 DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143A DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14C3 JUMPI PUSH2 0x14C3 PUSH2 0x144F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x14D2 DUP3 DUP3 ADD PUSH2 0x1465 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x132C JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1529 DUP5 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1552 DUP8 DUP4 DUP9 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1575 DUP7 DUP3 DUP8 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15AA PUSH2 0x144F JUMP JUMPDEST PUSH2 0x15BD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1465 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1610 DUP7 PUSH2 0x13E5 JUMP JUMPDEST SWAP5 POP PUSH2 0x161E PUSH1 0x20 DUP8 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1647 DUP10 DUP4 DUP11 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1669 DUP10 DUP4 DUP11 ADD PUSH2 0x1496 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x157F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP7 PUSH2 0x13E5 JUMP JUMPDEST SWAP5 POP PUSH2 0x16C8 PUSH1 0x20 DUP8 ADD PUSH2 0x13E5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x157F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1763 PUSH2 0x1733 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x177A JUMPI PUSH2 0x177A PUSH2 0x1733 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1794 JUMPI PUSH2 0x1794 PUSH2 0x1733 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AB PUSH2 0x1733 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17F6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17DA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x182D SWAP1 DUP4 ADD DUP6 PUSH2 0x17C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x183F DUP2 DUP6 PUSH2 0x17C6 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18B5 JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x1899 JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x18C9 DUP3 DUP8 PUSH2 0x17C6 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1904 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x195C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1944 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x118D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x197F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1941 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19A8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PC DIV SWAP2 STOP SWAP5 0xF8 0xCE 0xC0 0xE2 LOG0 0xD 0x1F RETURN 0x4A JUMPDEST CALLDATALOAD BALANCE LOG2 STOP 0xB0 0xC3 0xE9 DUP10 0x5C 0xEF PUSH3 0xBA243E 0xF8 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:7268:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;13813:98:0;13889:14;;13813:98;;;643:25:13;;;631:2;616:18;13813:98:0;497:177:13;11682:89:0;11750:6;:13;11682:89;;12738:159;;;;;;:::i;:::-;;:::i;:::-;;13348:457;;;;;;:::i;:::-;;:::i;9529:839::-;;;;;;:::i;:::-;;:::i;11268:187::-;;;;;;:::i;:::-;;:::i;12575:155::-;;;;;;:::i;:::-;;:::i;10386:780::-;;;;;;:::i;:::-;;:::i;8331:578::-;;;;;;:::i;:::-;;:::i;11779:179::-;;;:::i;7300:21::-;;;;;-1:-1:-1;;;;;7300:21:0;;;;;;-1:-1:-1;;;;;1739:32:13;;;1721:51;;1709:2;1694:18;7300:21:0;1560:218:13;13018:93:0;13092:11;;13018:93;;8005:318;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;13224:116:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;13314:11:0;13287:7;13314:11;;;:5;:11;;;;;:18;;13224:116;1036:85:1;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;12909:101:0;12993:7;;-1:-1:-1;;;;;12993:7:0;12909:101;;8917:554;;;;;;:::i;:::-;;:::i;7398:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:25:13;;;4052:2;4037:18;;4030:34;;;;4080:18;;;4073:34;3984:2;3969:18;7398:41:0;3794:319:13;12469:98:0;;;;;;:::i;:::-;;:::i;477:247:4:-;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;5763:33:13;;;5745:52;;5733:2;5718:18;477:247:4;5601:202:13;12063:398:0;;;;;;:::i;:::-;;:::i;7368:23::-;;;;;;:::i;:::-;;:::i;13119:97::-;13195:13;;13119:97;;11966:89;12038:9;;11966:89;;11178:78;;;:::i;252:219:4:-;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;1918:198:1;;;;;;:::i;:::-;;:::i;387:221:5:-;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;12738:159:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;12807:13:0::1;:21:::0;;;12851:11:::1;::::0;:27:::1;::::0;12823:5;;12851:27:::1;:::i;:::-;:38;::::0;12881:8:::1;12851:38;:::i;:::-;12839:9;:50:::0;-1:-1:-1;12738:159:0:o;13348:457::-;13411:7;13499:9;13511:19;13525:4;13511:13;:19::i;:::-;13499:31;;13541:68;13551:9;;13547:1;:13;13541:68;;;13587:9;;13581:16;;:1;;:5;:16::i;:::-;13577:20;;13541:68;;;-1:-1:-1;;;;;13314:11:0;;13619:24;13314:11;;;:5;:11;;;;;:18;;13684:21;;;13681:61;;-1:-1:-1;13729:1:0;;13348:457;-1:-1:-1;;;13348:457:0:o;13681:61::-;13759:38;13780:16;13759;13773:1;13759:9;;:13;;:16;;;;:::i;:::-;:20;;:38::i;:::-;13752:45;13348:457;-1:-1:-1;;;;13348:457:0:o;9529:839::-;9598:6;:13;9590:45;;;;-1:-1:-1;;;9590:45:0;;7287:2:13;9590:45:0;;;7269:21:13;7326:2;7306:18;;;7299:30;-1:-1:-1;;;7345:18:13;;;7338:45;7400:18;;9590:45:0;7085:339:13;9590:45:0;9683:9;;9654:25;9668:10;9654:13;:25::i;:::-;:38;;9646:70;;;;-1:-1:-1;;;9646:70:0;;7631:2:13;9646:70:0;;;7613:21:13;7670:2;7650:18;;;7643:30;-1:-1:-1;;;7689:18:13;;;7682:49;7748:18;;9646:70:0;7429:343:13;9646:70:0;9757:10;9727:21;9751:17;;;:5;:17;;;;;9863:9;;9751:17;;9833:40;;9863:9;9833:25;;:13;:25::i;:::-;:29;;:40::i;:::-;9815:4;:15;;:58;;;;9906:15;9884:4;:19;;:37;;;;9943:18;9963:13;9980:35;10008:6;9980:27;:35::i;:::-;9942:73;;;;10026:52;10064:6;10072:5;10026:37;:52::i;:::-;10116:167;;-1:-1:-1;;;10116:167:0;;10184:4;10116:167;;;8118:34:13;10204:10:0;8168:18:13;;;8161:43;8220:18;;;8213:34;;;10254:1:0;8263:18:13;;;8256:34;8098:3;8306:19;;;8299:32;-1:-1:-1;8347:19:13;;;8340:30;-1:-1:-1;;;;;10116:45:0;;;;;8387:19:13;;10116:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10296:14;;10294:16;;;;;:::i;:::-;;;;-1:-1:-1;10328:32:0;;;8739:25:13;;;10358:1:0;8795:2:13;8780:18;;8773:34;10334:10:0;;10328:32;;8712:18:13;10328:32:0;;;;;;;9579:789;;;9529:839;:::o;11268:187::-;-1:-1:-1;;;;;11372:14:0;;11329:7;11372:14;;;:5;:14;;;;;;;;11349:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11404:43;11424:22;11349:37;11424:16;:22::i;:::-;11404:15;;;;;:19;:43::i;:::-;11397:50;11268:187;-1:-1:-1;;;11268:187:0:o;12575:155::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;12642:11:0::1;:19:::0;;;12698:13:::1;::::0;12684:27:::1;::::0;12656:5;12684:27:::1;:::i;10386:780::-:0;10468:10;10438:21;10462:17;;;:5;:17;;;;;10498:11;;:21;-1:-1:-1;10498:21:0;10490:53;;;;-1:-1:-1;;;10490:53:0;;9020:2:13;10490:53:0;;;9002:21:13;9059:2;9039:18;;;9032:30;-1:-1:-1;;;9078:18:13;;;9071:49;9137:18;;10490:53:0;8818:343:13;10490:53:0;10607:25;10621:10;10607:13;:25::i;:::-;10589:15;;;:43;10657:11;;:23;;10673:6;10657:15;:23::i;:::-;10643:37;;;:11;10695:16;10691:277;;10749:9;;10731:4;:15;;;:27;10728:229;;;10779:11;10793:30;10813:9;;10793:4;:15;;;:19;;:30;;;;:::i;:::-;10860:9;;10779:44;;-1:-1:-1;10860:21:0;;10779:44;10860:13;:21::i;:::-;10842:15;;;:39;-1:-1:-1;10728:229:0;;;10940:1;10922:15;;;:19;10728:229;11000:15;10978:19;;;;:37;;;;11036:7;:77;;-1:-1:-1;;;;;11036:7:0;11071:10;11096:6;11036:20;:77::i;:::-;11129:29;;643:25:13;;;11139:10:0;;11129:29;;631:2:13;616:18;11129:29:0;;;;;;;;10427:739;10386:780;:::o;8331:578::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;8486:20:0::1;8523:9;8509:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;8509:24:0::1;;8486:47;;8544:24;8585:9;8571:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;8571:24:0::1;-1:-1:-1::0;8544:51:0;-1:-1:-1;8623:5:0;8606:132:::1;8635:17;8647:5:::0;8635:9;:17:::1;:::i;:::-;8630:1;:23;8606:132;;;8690:1:::0;8675:3;8679:7:::1;8681:5:::0;8690:1;8679:7:::1;:::i;:::-;8675:12;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:16;8725:1:::1;8706:7:::0;8714::::1;8716:5:::0;8714:1;:7:::1;:::i;:::-;8706:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:20;8655:3;::::1;::::0;::::1;:::i;:::-;;;;8606:132;;;;8750:43;8781:6;8789:3;8750:30;:43::i;:::-;8806:95;::::0;-1:-1:-1;;;8806:95:0;;-1:-1:-1;;;;;8806:50:0;::::1;::::0;::::1;::::0;:95:::1;::::0;8857:10:::1;::::0;8877:4:::1;::::0;8884:3;;8889:7;;8806:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8475:434;;8331:578:::0;;;:::o;11779:179::-;11829:7;11850:18;11870:13;11887:35;11915:6;11887:27;:35::i;:::-;-1:-1:-1;11849:73:0;11779:179;-1:-1:-1;;;11779:179:0:o;8005:318::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;8166:43:0::1;8197:6;8205:3;8166:30;:43::i;:::-;8220:95;::::0;-1:-1:-1;;;8220:95:0;;-1:-1:-1;;;;;8220:50:0;::::1;::::0;::::1;::::0;:95:::1;::::0;8271:10:::1;::::0;8291:4:::1;::::0;8298:3;;8303:7;;8220:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8005:318:::0;;;:::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8917:554:0:-;8968:7;;:109;;-1:-1:-1;;;;;8968:7:0;9007:10;9040:4;9060:6;8968:24;:109::i;:::-;9128:10;9098:21;9122:17;;;:5;:17;;;;;9150:8;:25;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9150:25:0;;;;;;;9236:11;;:16;9233:91;;9287:25;9301:10;9287:13;:25::i;:::-;9269:15;;;:43;9233:91;9348:11;;:23;;9364:6;9348:15;:23::i;:::-;9334:37;;9404:15;9382:19;;;:37;9437:26;;643:25:13;;;9444:10:0;;9437:26;;631:2:13;616:18;9437:26:0;497:177:13;12469:98:0;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;12537:7:0::1;:22:::0;;-1:-1:-1;;;;;;12537:22:0::1;-1:-1:-1::0;;;;;12537:22:0;;;::::1;::::0;;;::::1;::::0;;12469:98::o;12063:398::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;12159:6:0::1;:13:::0;12142:14:::1;12159:13:::0;12210:21:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;12210:21:0::1;;12183:48;;12247:9;12242:78;12266:6;12262:1;:10;12242:78;;;12307:1;12294:7;12302:1;12294:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:14;12274:3;::::1;::::0;::::1;:::i;:::-;;;;12242:78;;;-1:-1:-1::0;12330:99:0::1;::::0;-1:-1:-1;;;12330:99:0;;-1:-1:-1;;;;;12330:50:0;::::1;::::0;::::1;::::0;:99:::1;::::0;12390:4:::1;::::0;12397:10:::1;::::0;12409:6:::1;::::0;12417:7;;12330:99:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12447:6;;12440:13;;;;:::i;:::-;12131:330;;12063:398:::0;:::o;7368:23::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7368:23:0;:::o;11178:78::-;11229:10;11223:17;;;;:5;:17;;;;;:24;11214:34;;:8;:34::i;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;12354:2:13;1998:73:1::1;::::0;::::1;12336:21:13::0;12393:2;12373:18;;;12366:30;12432:34;12412:18;;;12405:62;-1:-1:-1;;;12483:18:13;;;12476:36;12529:19;;1998:73:1::1;12152:402:13::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3108:96:12:-;3166:7;3192:5;3196:1;3192;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;6298:341:0:-;6359:16;6377;6417:5;6423:1;6417:8;;;;;;;;:::i;:::-;;;;;;;;;6406:19;;6447:1;6436:12;;6463:9;6459:173;6481:12;;6477:16;;6459:173;;;6527:8;6516:5;6522:1;6516:8;;;;;;;;:::i;:::-;;;;;;;;;:19;6513:108;;;6566:5;6572:1;6566:8;;;;;;;;:::i;:::-;;;;;;;;;6555:19;;6604:1;6593:12;;6513:108;6494:3;;;;:::i;:::-;;;;6459:173;;;;6298:341;;;:::o;4212:300::-;4304:12;;4296:20;;4288:69;;;;-1:-1:-1;;;4288:69:0;;12983:2:13;4288:69:0;;;12965:21:13;13022:2;13002:18;;;12995:30;13061:34;13041:18;;;13034:62;-1:-1:-1;;;13112:18:13;;;13105:34;13156:19;;4288:69:0;12781:400:13;4288:69:0;4385:12;;:16;;4400:1;;4385:16;:::i;:::-;4377:5;:24;4370:113;;;4433:5;4439:9;:5;4447:1;4439:9;:::i;:::-;4433:16;;;;;;;;:::i;:::-;;;;;;;;;4418:5;4424;4418:12;;;;;;;;:::i;:::-;;;;;;;;;;:31;4464:7;;;;:::i;:::-;;;;4370:113;;;4493:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4212:300;;:::o;11467:203::-;11650:11;;11625:19;;;;11538:7;;11578:15;;11611:51;;11650:11;11611:34;;11578:15;;11611:13;:34::i;:::-;:38;;:51::i;2741:96:12:-;2799:7;2825:5;2829:1;2825;:5;:::i;3451:96::-;3509:7;3535:5;3539:1;3535;:5;:::i;701:205:7:-;840:58;;-1:-1:-1;;;;;13510:32:13;;840:58:7;;;13492:51:13;13559:18;;;13552:34;;;813:86:7;;833:5;;-1:-1:-1;;;863:23:7;13465:18:13;;840:58:7;;;;-1:-1:-1;;840:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:7;-1:-1:-1;;;;;;840:58:7;;;;;;;;;;813:19;:86::i;5008:181:0:-;5085:8;;:13;5082:100;;5112:6;5108:66;5128:1;:8;5124:1;:12;5108:66;;;5152:1;5159;5161;5159:4;;;;;;;;:::i;:::-;;;;;;;;;;;;5152:12;;;;;;;-1:-1:-1;5152:12:0;;;;;;;;;5138:3;;;;:::i;:::-;;;;5108:66;;5082:100;5008:181;;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:7:-;1077:68;;-1:-1:-1;;;;;13855:15:13;;;1077:68:7;;;13837:34:13;13907:15;;13887:18;;;13880:43;13939:18;;;13932:34;;;1050:96:7;;1070:5;;-1:-1:-1;;;1100:27:7;13772:18:13;;1077:68:7;13597:375:13;1050:96:7;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:7;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:7;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:7;;14461:2:13;3811:85:7;;;14443:21:13;14500:2;14480:18;;;14473:30;14539:34;14519:18;;;14512:62;-1:-1:-1;;;14590:18:13;;;14583:40;14640:19;;3811:85:7;14259:406:13;3514:223:8;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3647;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:8;;15279:2:13;4881:60:8;;;15261:21:13;15318:2;15298:18;;;15291:30;15357:31;15337:18;;;15330:59;15406:18;;4881:60:8;15077:353:13;4881:60:8;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:8;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:8:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:8;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:13;;679:180;-1:-1:-1;679:180:13:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:13;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:186::-;1101:6;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;1193:29;1212:9;1193:29;:::i;1233:322::-;1310:6;1318;1326;1379:2;1367:9;1358:7;1354:23;1350:32;1347:52;;;1395:1;1392;1385:12;1347:52;1418:29;1437:9;1418:29;:::i;:::-;1408:39;1494:2;1479:18;;1466:32;;-1:-1:-1;1545:2:13;1530:18;;;1517:32;;1233:322;-1:-1:-1;;;1233:322:13:o;1783:127::-;1844:10;1839:3;1835:20;1832:1;1825:31;1875:4;1872:1;1865:15;1899:4;1896:1;1889:15;1915:275;1986:2;1980:9;2051:2;2032:13;;-1:-1:-1;;2028:27:13;2016:40;;2086:18;2071:34;;2107:22;;;2068:62;2065:88;;;2133:18;;:::i;:::-;2169:2;2162:22;1915:275;;-1:-1:-1;1915:275:13:o;2195:712::-;2249:5;2302:3;2295:4;2287:6;2283:17;2279:27;2269:55;;2320:1;2317;2310:12;2269:55;2356:6;2343:20;2382:4;2405:18;2401:2;2398:26;2395:52;;;2427:18;;:::i;:::-;2473:2;2470:1;2466:10;2496:28;2520:2;2516;2512:11;2496:28;:::i;:::-;2558:15;;;2628;;;2624:24;;;2589:12;;;;2660:15;;;2657:35;;;2688:1;2685;2678:12;2657:35;2724:2;2716:6;2712:15;2701:26;;2736:142;2752:6;2747:3;2744:15;2736:142;;;2818:17;;2806:30;;2769:12;;;;2856;;;;2736:142;;2912:669;3039:6;3047;3055;3108:2;3096:9;3087:7;3083:23;3079:32;3076:52;;;3124:1;3121;3114:12;3076:52;3147:29;3166:9;3147:29;:::i;:::-;3137:39;;3227:2;3216:9;3212:18;3199:32;3250:18;3291:2;3283:6;3280:14;3277:34;;;3307:1;3304;3297:12;3277:34;3330:61;3383:7;3374:6;3363:9;3359:22;3330:61;:::i;:::-;3320:71;;3444:2;3433:9;3429:18;3416:32;3400:48;;3473:2;3463:8;3460:16;3457:36;;;3489:1;3486;3479:12;3457:36;;3512:63;3567:7;3556:8;3545:9;3541:24;3512:63;:::i;:::-;3502:73;;;2912:669;;;;;:::o;4118:530::-;4160:5;4213:3;4206:4;4198:6;4194:17;4190:27;4180:55;;4231:1;4228;4221:12;4180:55;4267:6;4254:20;4293:18;4289:2;4286:26;4283:52;;;4315:18;;:::i;:::-;4359:55;4402:2;4383:13;;-1:-1:-1;;4379:27:13;4408:4;4375:38;4359:55;:::i;:::-;4439:2;4430:7;4423:19;4485:3;4478:4;4473:2;4465:6;4461:15;4457:26;4454:35;4451:55;;;4502:1;4499;4492:12;4451:55;4567:2;4560:4;4552:6;4548:17;4541:4;4532:7;4528:18;4515:55;4615:1;4590:16;;;4608:4;4586:27;4579:38;;;;4594:7;4118:530;-1:-1:-1;;;4118:530:13:o;4653:943::-;4807:6;4815;4823;4831;4839;4892:3;4880:9;4871:7;4867:23;4863:33;4860:53;;;4909:1;4906;4899:12;4860:53;4932:29;4951:9;4932:29;:::i;:::-;4922:39;;4980:38;5014:2;5003:9;4999:18;4980:38;:::i;:::-;4970:48;;5069:2;5058:9;5054:18;5041:32;5092:18;5133:2;5125:6;5122:14;5119:34;;;5149:1;5146;5139:12;5119:34;5172:61;5225:7;5216:6;5205:9;5201:22;5172:61;:::i;:::-;5162:71;;5286:2;5275:9;5271:18;5258:32;5242:48;;5315:2;5305:8;5302:16;5299:36;;;5331:1;5328;5321:12;5299:36;5354:63;5409:7;5398:8;5387:9;5383:24;5354:63;:::i;:::-;5344:73;;5470:3;5459:9;5455:19;5442:33;5426:49;;5500:2;5490:8;5487:16;5484:36;;;5516:1;5513;5506:12;5484:36;;5539:51;5582:7;5571:8;5560:9;5556:24;5539:51;:::i;:::-;5529:61;;;4653:943;;;;;;;;:::o;5808:606::-;5912:6;5920;5928;5936;5944;5997:3;5985:9;5976:7;5972:23;5968:33;5965:53;;;6014:1;6011;6004:12;5965:53;6037:29;6056:9;6037:29;:::i;:::-;6027:39;;6085:38;6119:2;6108:9;6104:18;6085:38;:::i;:::-;6075:48;;6170:2;6159:9;6155:18;6142:32;6132:42;;6221:2;6210:9;6206:18;6193:32;6183:42;;6276:3;6265:9;6261:19;6248:33;6304:18;6296:6;6293:30;6290:50;;;6336:1;6333;6326:12;6290:50;6359:49;6400:7;6391:6;6380:9;6376:22;6359:49;:::i;6419:356::-;6621:2;6603:21;;;6640:18;;;6633:30;6699:34;6694:2;6679:18;;6672:62;6766:2;6751:18;;6419:356::o;6780:127::-;6841:10;6836:3;6832:20;6829:1;6822:31;6872:4;6869:1;6862:15;6896:4;6893:1;6886:15;6912:168;6952:7;7018:1;7014;7010:6;7006:14;7003:1;7000:21;6995:1;6988:9;6981:17;6977:45;6974:71;;;7025:18;;:::i;:::-;-1:-1:-1;7065:9:13;;6912:168::o;8417:135::-;8456:3;8477:17;;;8474:43;;8497:18;;:::i;:::-;-1:-1:-1;8544:1:13;8533:13;;8417:135::o;9166:128::-;9206:3;9237:1;9233:6;9230:1;9227:13;9224:39;;;9243:18;;:::i;:::-;-1:-1:-1;9279:9:13;;9166:128::o;9299:125::-;9339:4;9367:1;9364;9361:8;9358:34;;;9372:18;;:::i;:::-;-1:-1:-1;9409:9:13;;9299:125::o;9429:127::-;9490:10;9485:3;9481:20;9478:1;9471:31;9521:4;9518:1;9511:15;9545:4;9542:1;9535:15;9561:435;9614:3;9652:5;9646:12;9679:6;9674:3;9667:19;9705:4;9734:2;9729:3;9725:12;9718:19;;9771:2;9764:5;9760:14;9792:1;9802:169;9816:6;9813:1;9810:13;9802:169;;;9877:13;;9865:26;;9911:12;;;;9946:15;;;;9838:1;9831:9;9802:169;;;-1:-1:-1;9987:3:13;;9561:435;-1:-1:-1;;;;;9561:435:13:o;10001:889::-;-1:-1:-1;;;;;10452:15:13;;;10434:34;;10504:15;;10499:2;10484:18;;10477:43;10414:3;10551:2;10536:18;;10529:31;;;10377:4;;10583:57;;10620:19;;10612:6;10583:57;:::i;:::-;10688:9;10680:6;10676:22;10671:2;10660:9;10656:18;10649:50;10722:44;10759:6;10751;10722:44;:::i;:::-;10803:22;;;10797:3;10782:19;;;10775:51;;;;-1:-1:-1;;10850:1:13;10835:17;;10881:2;10869:15;;10001:889;-1:-1:-1;;;;10001:889:13:o;10895:1252::-;-1:-1:-1;;;;;11385:15:13;;;11367:34;;11458:15;;11420:2;11438:18;;;11431:43;;;;11316:3;11505:2;11490:18;;11483:31;;;11563:13;;11301:19;;;11585:22;;;11268:4;11651:17;;;11691:16;;;11268:4;;11691:16;;11638:3;11623:19;;;11420:2;11268:4;11735:168;11749:6;11746:1;11743:13;11735:168;;;11810:13;;11798:26;;11891:1;11879:14;;;;11844:12;;;;11764:9;11735:168;;;11739:3;;11948:9;11943:3;11939:19;11934:2;11923:9;11919:18;11912:47;11982:41;12019:3;12011:6;11982:41;:::i;:::-;12060:22;;;12054:3;12039:19;;;12032:51;;;;12107:1;12092:17;;12126:15;;;;10895:1252;-1:-1:-1;;;;;;;10895:1252:13:o;12559:217::-;12599:1;12625;12615:132;;12669:10;12664:3;12660:20;12657:1;12650:31;12704:4;12701:1;12694:15;12732:4;12729:1;12722:15;12615:132;-1:-1:-1;12761:9:13;;12559:217::o;13186:127::-;13247:10;13242:3;13238:20;13235:1;13228:31;13278:4;13275:1;13268:15;13302:4;13299:1;13292:15;13977:277;14044:6;14097:2;14085:9;14076:7;14072:23;14068:32;14065:52;;;14113:1;14110;14103:12;14065:52;14145:9;14139:16;14198:5;14191:13;14184:21;14177:5;14174:32;14164:60;;14220:1;14217;14210:12;15435:258;15507:1;15517:113;15531:6;15528:1;15525:13;15517:113;;;15607:11;;;15601:18;15588:11;;;15581:39;15553:2;15546:10;15517:113;;;15648:6;15645:1;15642:13;15639:48;;;-1:-1:-1;;15683:1:13;15665:16;;15658:27;15435:258::o;15698:274::-;15827:3;15865:6;15859:13;15881:53;15927:6;15922:3;15915:4;15907:6;15903:17;15881:53;:::i;:::-;15950:16;;;;;15698:274;-1:-1:-1;;15698:274:13:o;15977:383::-;16126:2;16115:9;16108:21;16089:4;16158:6;16152:13;16201:6;16196:2;16185:9;16181:18;16174:34;16217:66;16276:6;16271:2;16260:9;16256:18;16251:2;16243:6;16239:15;16217:66;:::i;:::-;16344:2;16323:15;-1:-1:-1;;16319:29:13;16304:45;;;;16351:2;16300:54;;15977:383;-1:-1:-1;;15977:383:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1328400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addNFTBatch(address,uint256[],uint256[])": "infinite",
								"addNftBatchWithNumber(address,uint256,uint256)": "infinite",
								"claim(address)": "infinite",
								"exit()": "infinite",
								"getLpMintAddress()": "2376",
								"getLpUnitValue()": "2381",
								"getNextNftTokenId()": "infinite",
								"getThreshold()": "2336",
								"getTimeUnitValue()": "2403",
								"getUserNextNftTime(address)": "infinite",
								"getUserStakeAmount(address)": "2605",
								"getWithdrawAmount()": "2350",
								"lpToken()": "2404",
								"nftCount()": "2383",
								"nftIds(uint256)": "4664",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2421",
								"pointsBalance(address)": "infinite",
								"renounceOwnership()": "28160",
								"setLpMintAddress(address)": "26822",
								"setLpUnitValue(uint256)": "infinite",
								"setTimeUnitValue(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"supportsInterface(bytes4)": "473",
								"transferOwnership(address)": "28419",
								"urgentWithdraw(address)": "infinite",
								"users(address)": "6883",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_unDebitedPoints(struct Farming.UserInfo memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7514,
									"end": 7515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7481,
									"end": 7515,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7481,
									"end": 7515,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "PUSH",
									"source": 0,
									"value": "429"
								},
								{
									"begin": 7522,
									"end": 7556,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7522,
									"end": 7556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7522,
									"end": 7556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7522,
									"end": 7556,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7601,
									"name": "PUSH",
									"source": 0,
									"value": "D2F00"
								},
								{
									"begin": 7563,
									"end": 7601,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7563,
									"end": 7601,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7563,
									"end": 7601,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7563,
									"end": 7601,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7636,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7666,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7636,
									"end": 7674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7608,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7608,
									"end": 7674,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7975,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 54,
									"end": 61,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 121,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 116,
									"end": 117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 118,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 108,
									"end": 122,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 105,
									"end": 106,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 102,
									"end": 123,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 97,
									"end": 98,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 90,
									"end": 99,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 83,
									"end": 100,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 79,
									"end": 124,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 76,
									"end": 244,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 76,
									"end": 244,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 76,
									"end": 244,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 166,
									"end": 176,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 161,
									"end": 164,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 157,
									"end": 177,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 154,
									"end": 155,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 178,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 201,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 198,
									"end": 199,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 191,
									"end": 206,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 229,
									"end": 233,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 226,
									"end": 227,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 234,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 76,
									"end": 244,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 76,
									"end": 244,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 264,
									"end": 273,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 264,
									"end": 273,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 13916,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220385804910094f8cec0e2a00d1ff34a5b3531a200b0c3e9895cef62ba243ef80064736f6c634300080d0033",
									".code": [
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "E75235B8"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "E75235B8"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "C6C9BD47"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "DADCDE10"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "A197D0DB"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "A197D0DB"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "AA8932F1"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "7612F53C"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "2DE1EA01"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "55AC2FD3"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "55AC2FD3"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "5FCBD285"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "601ABC54"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "2DE1EA01"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "4B02218F"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "14F8BECA"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "14F8BECA"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "16DCB588"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "1E83409A"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "25CA4CFF"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "27932F9"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "AF2C6CA"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 13916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13813,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 674,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11771,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11682,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11750,
											"end": 11756,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11750,
											"end": 11763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11682,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11682,
											"end": 11771,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1560,
											"end": 1778,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13018,
											"end": 13111,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13018,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13092,
											"end": 13103,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13092,
											"end": 13103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13018,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13018,
											"end": 13111,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13287,
											"end": 13294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13319,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13224,
											"end": 13340,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12909,
											"end": 13010,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12909,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12993,
											"end": 13000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12993,
											"end": 13000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12993,
											"end": 13000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12909,
											"end": 13010,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4021,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4021,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4064,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4107,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3794,
											"end": 4113,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5763,
											"end": 5796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5796,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5733,
											"end": 5735,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5601,
											"end": 5803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13119,
											"end": 13216,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13119,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13208,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13195,
											"end": 13208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13119,
											"end": 13216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13119,
											"end": 13216,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 12055,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11966,
											"end": 12055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12038,
											"end": 12047,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12038,
											"end": 12047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11966,
											"end": 12055,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12807,
											"end": 12820,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12807,
											"end": 12828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12807,
											"end": 12828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12807,
											"end": 12828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12862,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12851,
											"end": 12862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12823,
											"end": 12828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12823,
											"end": 12828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12851,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12889,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12851,
											"end": 12889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12839,
											"end": 12848,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12839,
											"end": 12889,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12738,
											"end": 12897,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13411,
											"end": 13418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13525,
											"end": 13529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13547,
											"end": 13548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13547,
											"end": 13560,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13587,
											"end": 13596,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13587,
											"end": 13596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13581,
											"end": 13597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13581,
											"end": 13597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13581,
											"end": 13597,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13581,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13541,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13619,
											"end": 13643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13319,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13684,
											"end": 13705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13684,
											"end": 13705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13684,
											"end": 13705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13681,
											"end": 13742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13729,
											"end": 13730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13729,
											"end": 13730,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13681,
											"end": 13742,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13681,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13780,
											"end": 13796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13773,
											"end": 13774,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13768,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13759,
											"end": 13768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13759,
											"end": 13772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13759,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13752,
											"end": 13797,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9598,
											"end": 9611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7269,
											"end": 7290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7299,
											"end": 7329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B081391951CC819985C9B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7383,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7085,
											"end": 7424,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9590,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9683,
											"end": 9692,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9683,
											"end": 9692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9668,
											"end": 9678,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9692,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7613,
											"end": 7634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7672,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7643,
											"end": 7673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420506F696E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7682,
											"end": 7731,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7429,
											"end": 7772,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9646,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9767,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9756,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9872,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9863,
											"end": 9872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9833,
											"end": 9873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 9833,
											"end": 9858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9833,
											"end": 9858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9833,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 9833,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9833,
											"end": 9873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9833,
											"end": 9873,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9833,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9815,
											"end": 9830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9815,
											"end": 9873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9906,
											"end": 9921,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9980,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9980,
											"end": 10015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9980,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9980,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10072,
											"end": 10077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10026,
											"end": 10078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10078,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 10026,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10188,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10204,
											"end": 10214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8204,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8247,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8247,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10254,
											"end": 10255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8306,
											"end": 8325,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8306,
											"end": 8325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8299,
											"end": 8331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8366,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 8347,
											"end": 8366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8347,
											"end": 8366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10116,
											"end": 10161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10161,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 10116,
											"end": 10161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8406,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 8387,
											"end": 8406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10296,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10294,
											"end": 10310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8764,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8764,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8795,
											"end": 8797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8807,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10344,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10334,
											"end": 10344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "PUSH",
											"source": 0,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10360,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 9579,
											"end": 10368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9579,
											"end": 10368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9579,
											"end": 10368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9529,
											"end": 10368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11377,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11424,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11424,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11424,
											"end": 11446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11424,
											"end": 11446,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11424,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11404,
											"end": 11447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11447,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11404,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11397,
											"end": 11447,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11268,
											"end": 11455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12575,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12642,
											"end": 12653,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12642,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12642,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12642,
											"end": 12661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12698,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12698,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 12661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10468,
											"end": 10478,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10438,
											"end": 10459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10462,
											"end": 10479,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10498,
											"end": 10509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10498,
											"end": 10509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10498,
											"end": 10519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10498,
											"end": 10519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9002,
											"end": 9023,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9032,
											"end": 9062,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9071,
											"end": 9120,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8818,
											"end": 9161,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10490,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10589,
											"end": 10604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10589,
											"end": 10604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10589,
											"end": 10604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10589,
											"end": 10632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10657,
											"end": 10668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10657,
											"end": 10668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10673,
											"end": 10679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10657,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10657,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10643,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10691,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10691,
											"end": 10968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10758,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10813,
											"end": 10822,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10813,
											"end": 10822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10793,
											"end": 10808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10793,
											"end": 10812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10793,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10860,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10860,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10842,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10842,
											"end": 10857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10842,
											"end": 10857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10842,
											"end": 10881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10940,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10728,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11015,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10978,
											"end": 10997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 10997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10978,
											"end": 11015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11043,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11036,
											"end": 11113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11071,
											"end": 11081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 11036,
											"end": 11113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11036,
											"end": 11113,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11036,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11149,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11139,
											"end": 11149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11129,
											"end": 11158,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10386,
											"end": 11166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8486,
											"end": 8533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8486,
											"end": 8533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8571,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8544,
											"end": 8595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8623,
											"end": 8628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8635,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8647,
											"end": 8652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8635,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8635,
											"end": 8652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8635,
											"end": 8652,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8635,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 8653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8681,
											"end": 8686,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8706,
											"end": 8713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 8716,
											"end": 8721,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8714,
											"end": 8721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8721,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 8714,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8789,
											"end": 8792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8750,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8750,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8806,
											"end": 8856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 8806,
											"end": 8856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8867,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8877,
											"end": 8881,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8877,
											"end": 8881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8884,
											"end": 8887,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8884,
											"end": 8887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8896,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8475,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8475,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11829,
											"end": 11836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11887,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11887,
											"end": 11922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11887,
											"end": 11922,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11887,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11849,
											"end": 11922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11779,
											"end": 11958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8205,
											"end": 8208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8166,
											"end": 8209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8166,
											"end": 8209,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8166,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 8270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8270,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 8220,
											"end": 8270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8281,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8295,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8301,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8310,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8323,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8917,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8968,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8968,
											"end": 9077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9007,
											"end": 9017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9060,
											"end": 9066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8968,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 8968,
											"end": 9077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8968,
											"end": 9077,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 8968,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9128,
											"end": 9138,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9233,
											"end": 9324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9301,
											"end": 9311,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9269,
											"end": 9284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9312,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9324,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9233,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9348,
											"end": 9371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9364,
											"end": 9370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 9348,
											"end": 9371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9348,
											"end": 9371,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9348,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9371,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9419,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9463,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 9437,
											"end": 9463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 497,
											"end": 674,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12537,
											"end": 12544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12567,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12159,
											"end": 12165,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12159,
											"end": 12172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12159,
											"end": 12172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12183,
											"end": 12231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12183,
											"end": 12231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12266,
											"end": 12272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12307,
											"end": 12308,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12294,
											"end": 12301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12302,
											"end": 12303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12294,
											"end": 12308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12274,
											"end": 12277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 12242,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12330,
											"end": 12380,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12380,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 12330,
											"end": 12380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12390,
											"end": 12394,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12390,
											"end": 12394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12397,
											"end": 12407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12424,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12330,
											"end": 12429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12447,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12447,
											"end": 12453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12131,
											"end": 12461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12131,
											"end": 12461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12063,
											"end": 12461,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 11178,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11239,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 11214,
											"end": 11248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11214,
											"end": 11248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12354,
											"end": 12356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12336,
											"end": 12357,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12393,
											"end": 12395,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12366,
											"end": 12396,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12432,
											"end": 12466,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12467,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12529,
											"end": 12548,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12529,
											"end": 12548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12152,
											"end": 12554,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12983,
											"end": 12985,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 12986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13024,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12995,
											"end": 13025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13061,
											"end": 13095,
											"name": "PUSH",
											"source": 13,
											"value": "4172726179466F7255696E743235363A20696E646578206F7574206F6620626F"
										},
										{
											"begin": 13041,
											"end": 13059,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13041,
											"end": 13059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13096,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13112,
											"end": 13130,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13112,
											"end": 13130,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13112,
											"end": 13130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13105,
											"end": 13139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13156,
											"end": 13175,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13156,
											"end": 13175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12781,
											"end": 13181,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11467,
											"end": 11670,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11467,
											"end": 11670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11650,
											"end": 11661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11650,
											"end": 11661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11611,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11611,
											"end": 11662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11650,
											"end": 11661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11611,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 11611,
											"end": 11645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11611,
											"end": 11624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11611,
											"end": 11645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11611,
											"end": 11645,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 11611,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11611,
											"end": 11649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11611,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11611,
											"end": 11662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13510,
											"end": 13542,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13510,
											"end": 13542,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13492,
											"end": 13543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13559,
											"end": 13577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13552,
											"end": 13586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13552,
											"end": 13586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13552,
											"end": 13586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 833,
											"end": 838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13483,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13465,
											"end": 13483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13855,
											"end": 13870,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13855,
											"end": 13870,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13855,
											"end": 13870,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13871,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13907,
											"end": 13922,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13907,
											"end": 13922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13887,
											"end": 13905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13939,
											"end": 13957,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13939,
											"end": 13957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13939,
											"end": 13957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 13966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 13966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 13966,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13772,
											"end": 13790,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13772,
											"end": 13790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 13597,
											"end": 13972,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14461,
											"end": 14463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14443,
											"end": 14464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14500,
											"end": 14502,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 14480,
											"end": 14498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14480,
											"end": 14498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14480,
											"end": 14498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14473,
											"end": 14503,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14539,
											"end": 14573,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 14519,
											"end": 14537,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14519,
											"end": 14537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14519,
											"end": 14537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14512,
											"end": 14574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14583,
											"end": 14623,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14640,
											"end": 14659,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14640,
											"end": 14659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 14259,
											"end": 14665,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3729,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15279,
											"end": 15281,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15318,
											"end": 15320,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15388,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15330,
											"end": 15389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15406,
											"end": 15424,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15406,
											"end": 15424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 15077,
											"end": 15430,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5092,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5035,
											"end": 5093,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7372,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7388,
											"end": 7395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7550,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7734,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7770,
											"end": 7780,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7799,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "319"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "336"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "443"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "443"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 679,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 679,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 738,
											"end": 744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 793,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 762,
											"end": 794,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 811,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 759,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 797,
											"end": 809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 811,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 830,
											"end": 853,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 679,
											"end": 859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 859,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 932,
											"end": 952,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 932,
											"end": 952,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1027,
											"end": 1028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1228,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1042,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1156,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1157,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 1122,
											"end": 1174,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1174,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 1122,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1555,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1233,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1367,
											"end": 1376,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1365,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1382,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1347,
											"end": 1399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1347,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 1347,
											"end": 1399,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1385,
											"end": 1397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1347,
											"end": 1399,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 1347,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1418,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1418,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 1418,
											"end": 1447,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1418,
											"end": 1447,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1418,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1447,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1498,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1498,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1549,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1549,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1233,
											"end": 1555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1555,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1783,
											"end": 1910,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1783,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1854,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 1839,
											"end": 1842,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1856,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1865,
											"end": 1880,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1904,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 2190,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1915,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2032,
											"end": 2045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2104,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2105,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2129,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2068,
											"end": 2130,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2153,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 2065,
											"end": 2153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 2190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 2190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 2190,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2195,
											"end": 2907,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 2195,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2299,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2306,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 2269,
											"end": 2324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2324,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 2269,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2363,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2382,
											"end": 2386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2398,
											"end": 2424,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2447,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2395,
											"end": 2447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2520,
											"end": 2522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2496,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2643,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2648,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2692,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2657,
											"end": 2692,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2690,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2692,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2657,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2724,
											"end": 2726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2722,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2759,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2835,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2806,
											"end": 2836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2806,
											"end": 2836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2736,
											"end": 2878,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3110,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3106,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3111,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3128,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3076,
											"end": 3128,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3126,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3128,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3076,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3216,
											"end": 3225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3212,
											"end": 3230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3231,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3294,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 3277,
											"end": 3311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 3277,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3383,
											"end": 3390,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3363,
											"end": 3372,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 3330,
											"end": 3391,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3391,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3330,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3391,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3446,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3448,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3463,
											"end": 3471,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3491,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3556,
											"end": 3564,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3512,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 3512,
											"end": 3575,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3575,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3512,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3502,
											"end": 3575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3581,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4118,
											"end": 4648,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 4118,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4160,
											"end": 4165,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4217,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4229,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4254,
											"end": 4274,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4383,
											"end": 4396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4406,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4359,
											"end": 4414,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4414,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4359,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4441,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4488,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4454,
											"end": 4489,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4451,
											"end": 4506,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4504,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4506,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4451,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4560,
											"end": 4564,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4539,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4570,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4586,
											"end": 4613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4617,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4648,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4648,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4837,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4895,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4863,
											"end": 4896,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 5018,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 5018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5071,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5067,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5073,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5136,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5172,
											"end": 5233,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5172,
											"end": 5233,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 5172,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5275,
											"end": 5284,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5271,
											"end": 5289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5290,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5290,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5305,
											"end": 5313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5335,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5299,
											"end": 5335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5335,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5299,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5409,
											"end": 5416,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5398,
											"end": 5406,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5387,
											"end": 5396,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5383,
											"end": 5407,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5354,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5417,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5470,
											"end": 5473,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5442,
											"end": 5475,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5475,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5490,
											"end": 5498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5503,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 5539,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5590,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 5596,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5808,
											"end": 6414,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5808,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6000,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5985,
											"end": 5994,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 5995,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5968,
											"end": 6001,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6014,
											"end": 6015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5965,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 6119,
											"end": 6121,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6117,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6104,
											"end": 6122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 6085,
											"end": 6123,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6123,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 6085,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6075,
											"end": 6123,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6075,
											"end": 6123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6170,
											"end": 6172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6159,
											"end": 6168,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6142,
											"end": 6174,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6223,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6210,
											"end": 6219,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6224,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6225,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6225,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6279,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6261,
											"end": 6280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6293,
											"end": 6323,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6338,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 6400,
											"end": 6407,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6391,
											"end": 6397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6419,
											"end": 6775,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6419,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6624,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6603,
											"end": 6624,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6603,
											"end": 6624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6699,
											"end": 6733,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6768,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6751,
											"end": 6769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6419,
											"end": 6775,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6780,
											"end": 6907,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6780,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6841,
											"end": 6851,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6832,
											"end": 6852,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6853,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 6869,
											"end": 6870,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6901,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6912,
											"end": 7080,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 6912,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7000,
											"end": 7021,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6988,
											"end": 6997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 6998,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6977,
											"end": 7022,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7045,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6974,
											"end": 7045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6912,
											"end": 7080,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8417,
											"end": 8552,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 8417,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8456,
											"end": 8459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8494,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8477,
											"end": 8494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 8474,
											"end": 8517,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8544,
											"end": 8545,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8533,
											"end": 8546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8533,
											"end": 8546,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8417,
											"end": 8552,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9166,
											"end": 9294,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 9166,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9206,
											"end": 9209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9233,
											"end": 9239,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 9230,
											"end": 9231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9240,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 9224,
											"end": 9263,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9166,
											"end": 9294,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9299,
											"end": 9424,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 9299,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9343,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9361,
											"end": 9369,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9358,
											"end": 9392,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9358,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 9358,
											"end": 9392,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9299,
											"end": 9424,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9429,
											"end": 9556,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 9429,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9500,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9485,
											"end": 9488,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9481,
											"end": 9501,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9478,
											"end": 9479,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9502,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9518,
											"end": 9519,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9511,
											"end": 9526,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9545,
											"end": 9549,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9550,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9561,
											"end": 9996,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 9561,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9614,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9658,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9685,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9734,
											"end": 9736,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9729,
											"end": 9732,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9737,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9769,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9816,
											"end": 9822,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 9823,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9890,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9911,
											"end": 9923,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9911,
											"end": 9923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9911,
											"end": 9923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9911,
											"end": 9923,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 9961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9831,
											"end": 9840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 9802,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 9990,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9987,
											"end": 9990,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9561,
											"end": 9996,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9561,
											"end": 9996,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10001,
											"end": 10890,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 10001,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10452,
											"end": 10467,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10467,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10434,
											"end": 10468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10434,
											"end": 10468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10504,
											"end": 10519,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10504,
											"end": 10519,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10499,
											"end": 10501,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10484,
											"end": 10502,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10484,
											"end": 10502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10477,
											"end": 10520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10414,
											"end": 10417,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 10551,
											"end": 10553,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10529,
											"end": 10560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10618,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 10583,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10698,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10673,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10649,
											"end": 10699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10722,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 10759,
											"end": 10765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10757,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10722,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10722,
											"end": 10766,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10766,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 10722,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10803,
											"end": 10825,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10803,
											"end": 10825,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10803,
											"end": 10825,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10797,
											"end": 10800,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10826,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10826,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10850,
											"end": 10851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10881,
											"end": 10883,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10869,
											"end": 10884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10884,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10001,
											"end": 10890,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10001,
											"end": 10890,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10895,
											"end": 12147,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 10895,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11385,
											"end": 11400,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11400,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11367,
											"end": 11401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11367,
											"end": 11401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11473,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11473,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11420,
											"end": 11422,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11505,
											"end": 11507,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11585,
											"end": 11607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11585,
											"end": 11607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11585,
											"end": 11607,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11691,
											"end": 11707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11691,
											"end": 11707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11691,
											"end": 11707,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11691,
											"end": 11707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11691,
											"end": 11707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11638,
											"end": 11641,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 11623,
											"end": 11642,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11623,
											"end": 11642,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11420,
											"end": 11422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11743,
											"end": 11756,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11823,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11823,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11798,
											"end": 11824,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11798,
											"end": 11824,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11879,
											"end": 11893,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11879,
											"end": 11893,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11879,
											"end": 11893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11879,
											"end": 11893,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11856,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11856,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11856,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 11735,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11739,
											"end": 11742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11739,
											"end": 11742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11948,
											"end": 11957,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11943,
											"end": 11946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11939,
											"end": 11958,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11934,
											"end": 11936,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 11959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11982,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12011,
											"end": 12017,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11982,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 11982,
											"end": 12023,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11982,
											"end": 12023,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 11982,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12054,
											"end": 12057,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12039,
											"end": 12058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12058,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12083,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12083,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12092,
											"end": 12109,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12092,
											"end": 12109,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12141,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12141,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12126,
											"end": 12141,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 10895,
											"end": 12147,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10895,
											"end": 12147,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12559,
											"end": 12776,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 12559,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12615,
											"end": 12747,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12669,
											"end": 12679,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 12664,
											"end": 12667,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 12660,
											"end": 12680,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12650,
											"end": 12681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12704,
											"end": 12708,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 12701,
											"end": 12702,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12694,
											"end": 12709,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12722,
											"end": 12737,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12747,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12615,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12761,
											"end": 12770,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12761,
											"end": 12770,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12559,
											"end": 12776,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13186,
											"end": 13313,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 13186,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13257,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 13242,
											"end": 13245,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13238,
											"end": 13258,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13235,
											"end": 13236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13228,
											"end": 13259,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13282,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 13275,
											"end": 13276,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13268,
											"end": 13283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13299,
											"end": 13300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13977,
											"end": 14254,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 13977,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14099,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14085,
											"end": 14094,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14076,
											"end": 14083,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14095,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14100,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14065,
											"end": 14117,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14065,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 14065,
											"end": 14117,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14113,
											"end": 14114,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14110,
											"end": 14111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14103,
											"end": 14115,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14065,
											"end": 14117,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 14065,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14145,
											"end": 14154,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14139,
											"end": 14155,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14191,
											"end": 14204,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14205,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14177,
											"end": 14182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14174,
											"end": 14206,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14164,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 14164,
											"end": 14224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14220,
											"end": 14221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14217,
											"end": 14218,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14210,
											"end": 14222,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15435,
											"end": 15693,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 15435,
											"end": 15693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15507,
											"end": 15508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15531,
											"end": 15537,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15525,
											"end": 15538,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15607,
											"end": 15618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15607,
											"end": 15618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15607,
											"end": 15618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15601,
											"end": 15619,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15588,
											"end": 15599,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15588,
											"end": 15599,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15588,
											"end": 15599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15581,
											"end": 15620,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15553,
											"end": 15555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15546,
											"end": 15556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 15517,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15648,
											"end": 15654,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15645,
											"end": 15646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15642,
											"end": 15655,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15639,
											"end": 15687,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15639,
											"end": 15687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 15639,
											"end": 15687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15683,
											"end": 15684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15665,
											"end": 15681,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15658,
											"end": 15685,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15435,
											"end": 15693,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15698,
											"end": 15972,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 15698,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15827,
											"end": 15830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15865,
											"end": 15871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15872,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15881,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15927,
											"end": 15933,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15922,
											"end": 15925,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15907,
											"end": 15913,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 15903,
											"end": 15920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15881,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 15881,
											"end": 15934,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15881,
											"end": 15934,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15881,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15972,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15972,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15977,
											"end": 16360,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 15977,
											"end": 16360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16126,
											"end": 16128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16115,
											"end": 16124,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16108,
											"end": 16129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16089,
											"end": 16093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16158,
											"end": 16164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16152,
											"end": 16165,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16201,
											"end": 16207,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16196,
											"end": 16198,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16185,
											"end": 16194,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16174,
											"end": 16208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 16276,
											"end": 16282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16271,
											"end": 16273,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16269,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16256,
											"end": 16274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16251,
											"end": 16253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16243,
											"end": 16249,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16239,
											"end": 16254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 16217,
											"end": 16283,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 16217,
											"end": 16283,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 16217,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16344,
											"end": 16346,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16323,
											"end": 16338,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16319,
											"end": 16348,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16349,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16349,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16349,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16351,
											"end": 16353,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16300,
											"end": 16354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16300,
											"end": 16354,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15977,
											"end": 16360,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15977,
											"end": 16360,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addNFTBatch(address,uint256[],uint256[])": "63c66891",
							"addNftBatchWithNumber(address,uint256,uint256)": "4b02218f",
							"claim(address)": "1e83409a",
							"exit()": "e9fad8ee",
							"getLpMintAddress()": "a197d0db",
							"getLpUnitValue()": "601abc54",
							"getNextNftTokenId()": "55ac2fd3",
							"getThreshold()": "e75235b8",
							"getTimeUnitValue()": "dadcde10",
							"getUserNextNftTime(address)": "16dcb588",
							"getUserStakeAmount(address)": "7612f53c",
							"getWithdrawAmount()": "027932f9",
							"lpToken()": "5fcbd285",
							"nftCount()": "0af2c6ca",
							"nftIds(uint256)": "c6c9bd47",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"pointsBalance(address)": "25ca4cff",
							"renounceOwnership()": "715018a6",
							"setLpMintAddress(address)": "aa8932f1",
							"setLpUnitValue(uint256)": "2de1ea01",
							"setTimeUnitValue(uint256)": "14f8beca",
							"stake(uint256)": "a694fc3a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"urgentWithdraw(address)": "c4091443",
							"users(address)": "a87430ba",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addNFTBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"addNftBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLpMintAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLpUnitValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextNftTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnitValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserNextNftTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pointsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mint\",\"type\":\"address\"}],\"name\":\"setLpMintAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setLpUnitValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTimeUnitValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"urgentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"Farming\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0x20582fcd9d59dbc1718a50829bb664dcb2ae60dd256c24f3c27fa375922b0de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://350720bbf90b00533ac6f008b61d6871139eb60a25d3f6c0b1e33346a7c5f4d1\",\"dweb:/ipfs/QmbwcFjnJxHpxtnUnHidy6Zn2BFbjUnnT878232aZBDqWo\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1640,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 878,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "lpToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)2063"
							},
							{
								"astId": 881,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "nftIds",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 886,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "users",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(UserInfo)866_storage)"
							},
							{
								"astId": 889,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "userlist",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 892,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "withdrawAmount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 895,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "lpUnitValue",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 898,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "timeUnitValue",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 907,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "threshold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)2063": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)866_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farming.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)866_storage"
							},
							"t_struct(UserInfo)866_storage": {
								"encoding": "inplace",
								"label": "struct Farming.UserInfo",
								"members": [
									{
										"astId": 861,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 863,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "lastUpdateTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 865,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "pointsDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibArrayForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":2267:6644  library LibArrayForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":2267:6644  library LibArrayForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b3a8462b3d3094fa7676fffd11c72bdf55441909fb1c68305bf7c4c7bfd1d70964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3a8462b3d3094fa7676fffd11c72bdf55441909fb1c68305bf7c4c7bfd1d70964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA8 CHAINID 0x2B RETURNDATASIZE ADDRESS SWAP5 STATICCALL PUSH23 0x76FFFD11C72BDF55441909FB1C68305BF7C4C7BFD1D709 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2267:4377:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3a8462b3d3094fa7676fffd11c72bdf55441909fb1c68305bf7c4c7bfd1d70964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA8 CHAINID 0x2B RETURNDATASIZE ADDRESS SWAP5 STATICCALL PUSH23 0x76FFFD11C72BDF55441909FB1C68305BF7C4C7BFD1D709 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"addValue(uint256[] storage pointer,uint256)": "infinite",
								"binarySearch(uint256[] storage pointer,uint256)": "infinite",
								"distinct(uint256[] storage pointer)": "infinite",
								"equals(uint256[] storage pointer,uint256[] storage pointer)": "infinite",
								"extend(uint256[] storage pointer,uint256[] memory)": "infinite",
								"firstIndexOf(uint256[] storage pointer,uint256)": "infinite",
								"max(uint256[] storage pointer)": "infinite",
								"min(uint256[] storage pointer)": "infinite",
								"removeByIndex(uint256[] storage pointer,uint256)": "infinite",
								"removeByValue(uint256[] storage pointer,uint256)": "infinite",
								"reverse(uint256[] storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3a8462b3d3094fa7676fffd11c72bdf55441909fb1c68305bf7c4c7bfd1d70964736f6c634300080d0033",
									".code": [
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"LibArrayForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0x20582fcd9d59dbc1718a50829bb664dcb2ae60dd256c24f3c27fa375922b0de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://350720bbf90b00533ac6f008b61d6871139eb60a25d3f6c0b1e33346a7c5f4d1\",\"dweb:/ipfs/QmbwcFjnJxHpxtnUnHidy6Zn2BFbjUnnT878232aZBDqWo\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibSafeMathForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066a1855dae745e15a62f42514710824893da38cdd2928af52708019e1a5143f564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066a1855dae745e15a62f42514710824893da38cdd2928af52708019e1a5143f564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xA1855DAE745E15 0xA6 0x2F TIMESTAMP MLOAD SELFBALANCE LT DUP3 BASEFEE SWAP4 0xDA CODESIZE 0xCD 0xD2 SWAP3 DUP11 CREATE2 0x27 ADDMOD ADD SWAP15 BYTE MLOAD NUMBER CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;559:1704:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066a1855dae745e15a62f42514710824893da38cdd2928af52708019e1a5143f564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xA1855DAE745E15 0xA6 0x2F TIMESTAMP MLOAD SELFBALANCE LT DUP3 BASEFEE SWAP4 0xDA CODESIZE 0xCD 0xD2 SWAP3 DUP11 CREATE2 0x27 ADDMOD ADD SWAP15 BYTE MLOAD NUMBER CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"power(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066a1855dae745e15a62f42514710824893da38cdd2928af52708019e1a5143f564736f6c634300080d0033",
									".code": [
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"LibSafeMathForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0x20582fcd9d59dbc1718a50829bb664dcb2ae60dd256c24f3c27fa375922b0de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://350720bbf90b00533ac6f008b61d6871139eb60a25d3f6c0b1e33346a7c5f4d1\",\"dweb:/ipfs/QmbwcFjnJxHpxtnUnHidy6Zn2BFbjUnnT878232aZBDqWo\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1640,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_12:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3449:3482   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3431:3483   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x20\n        /* \"#utility.yul\":3404:3422   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_10\n        /* \"#utility.yul\":3287:3489   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_25\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_37:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_38:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_30:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_41:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:802   */\n    tag_31:\n        /* \"#utility.yul\":736:746   */\n      0x4e487b71\n        /* \"#utility.yul\":731:734   */\n      0xe0\n        /* \"#utility.yul\":727:747   */\n      shl\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:748   */\n      mstore\n        /* \"#utility.yul\":767:771   */\n      0x41\n        /* \"#utility.yul\":764:765   */\n      0x04\n        /* \"#utility.yul\":757:772   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x24\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":781:796   */\n      revert\n        /* \"#utility.yul\":807:1082   */\n    tag_32:\n        /* \"#utility.yul\":878:880   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      mload\n        /* \"#utility.yul\":943:945   */\n      0x1f\n        /* \"#utility.yul\":924:937   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":920:947   */\n      and\n        /* \"#utility.yul\":908:948   */\n      dup2\n      add\n        /* \"#utility.yul\":978:996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":963:997   */\n      dup2\n      gt\n        /* \"#utility.yul\":999:1021   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":960:1022   */\n      or\n        /* \"#utility.yul\":957:1045   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1025:1043   */\n      tag_45\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1061:1063   */\n      0x40\n        /* \"#utility.yul\":1054:1076   */\n      mstore\n        /* \"#utility.yul\":807:1082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1799   */\n    tag_33:\n        /* \"#utility.yul\":1141:1146   */\n      0x00\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1191   */\n      0x1f\n        /* \"#utility.yul\":1179:1185   */\n      dup4\n        /* \"#utility.yul\":1175:1192   */\n      add\n        /* \"#utility.yul\":1171:1198   */\n      slt\n        /* \"#utility.yul\":1161:1216   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1212:1213   */\n      0x00\n        /* \"#utility.yul\":1209:1210   */\n      dup1\n        /* \"#utility.yul\":1202:1214   */\n      revert\n        /* \"#utility.yul\":1161:1216   */\n    tag_47:\n        /* \"#utility.yul\":1248:1254   */\n      dup2\n        /* \"#utility.yul\":1235:1255   */\n      calldataload\n        /* \"#utility.yul\":1274:1278   */\n      0x20\n        /* \"#utility.yul\":1297:1315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1293:1295   */\n      dup3\n        /* \"#utility.yul\":1290:1316   */\n      gt\n        /* \"#utility.yul\":1287:1339   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1319:1337   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1365:1367   */\n      dup2\n        /* \"#utility.yul\":1362:1363   */\n      0x05\n        /* \"#utility.yul\":1358:1368   */\n      shl\n        /* \"#utility.yul\":1388:1416   */\n      tag_50\n        /* \"#utility.yul\":1412:1414   */\n      dup3\n        /* \"#utility.yul\":1408:1410   */\n      dup3\n        /* \"#utility.yul\":1404:1415   */\n      add\n        /* \"#utility.yul\":1388:1416   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1450:1465   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1520:1535   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":1516:1540   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":1481:1493   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1552:1567   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":1549:1584   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1577:1578   */\n      dup1\n        /* \"#utility.yul\":1570:1582   */\n      revert\n        /* \"#utility.yul\":1549:1584   */\n    tag_51:\n        /* \"#utility.yul\":1616:1618   */\n      dup4\n        /* \"#utility.yul\":1608:1614   */\n      dup8\n        /* \"#utility.yul\":1604:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap3\n      pop\n        /* \"#utility.yul\":1628:1770   */\n    tag_52:\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1639:1642   */\n      dup4\n        /* \"#utility.yul\":1636:1651   */\n      lt\n        /* \"#utility.yul\":1628:1770   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1710:1727   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1698:1728   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1661:1673   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1748:1760   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1628:1770   */\n      jump(tag_52)\n    tag_54:\n        /* \"#utility.yul\":1788:1793   */\n      swap8\n        /* \"#utility.yul\":1087:1799   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:2334   */\n    tag_34:\n        /* \"#utility.yul\":1846:1851   */\n      0x00\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1892:1896   */\n      0x1f\n        /* \"#utility.yul\":1884:1890   */\n      dup4\n        /* \"#utility.yul\":1880:1897   */\n      add\n        /* \"#utility.yul\":1876:1903   */\n      slt\n        /* \"#utility.yul\":1866:1921   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1914:1915   */\n      dup1\n        /* \"#utility.yul\":1907:1919   */\n      revert\n        /* \"#utility.yul\":1866:1921   */\n    tag_56:\n        /* \"#utility.yul\":1953:1959   */\n      dup2\n        /* \"#utility.yul\":1940:1960   */\n      calldataload\n        /* \"#utility.yul\":1979:1997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1975:1977   */\n      dup2\n        /* \"#utility.yul\":1972:1998   */\n      gt\n        /* \"#utility.yul\":1969:2021   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2001:2019   */\n      tag_58\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2045:2100   */\n      tag_59\n        /* \"#utility.yul\":2088:2090   */\n      0x1f\n        /* \"#utility.yul\":2069:2082   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2065:2092   */\n      and\n        /* \"#utility.yul\":2094:2098   */\n      0x20\n        /* \"#utility.yul\":2061:2099   */\n      add\n        /* \"#utility.yul\":2045:2100   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2125:2127   */\n      dup2\n        /* \"#utility.yul\":2116:2123   */\n      dup2\n        /* \"#utility.yul\":2109:2128   */\n      mstore\n        /* \"#utility.yul\":2171:2174   */\n      dup5\n        /* \"#utility.yul\":2164:2168   */\n      0x20\n        /* \"#utility.yul\":2159:2161   */\n      dup4\n        /* \"#utility.yul\":2151:2157   */\n      dup7\n        /* \"#utility.yul\":2147:2162   */\n      add\n        /* \"#utility.yul\":2143:2169   */\n      add\n        /* \"#utility.yul\":2140:2175   */\n      gt\n        /* \"#utility.yul\":2137:2192   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2137:2192   */\n    tag_60:\n        /* \"#utility.yul\":2253:2255   */\n      dup2\n        /* \"#utility.yul\":2246:2250   */\n      0x20\n        /* \"#utility.yul\":2238:2244   */\n      dup6\n        /* \"#utility.yul\":2234:2251   */\n      add\n        /* \"#utility.yul\":2227:2231   */\n      0x20\n        /* \"#utility.yul\":2218:2225   */\n      dup4\n        /* \"#utility.yul\":2214:2232   */\n      add\n        /* \"#utility.yul\":2201:2256   */\n      calldatacopy\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2276:2292   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2294:2298   */\n      0x20\n        /* \"#utility.yul\":2272:2299   */\n      add\n        /* \"#utility.yul\":2265:2303   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2280:2287   */\n      swap4\n        /* \"#utility.yul\":1804:2334   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:3282   */\n    tag_14:\n        /* \"#utility.yul\":2493:2499   */\n      0x00\n        /* \"#utility.yul\":2501:2507   */\n      dup1\n        /* \"#utility.yul\":2509:2515   */\n      0x00\n        /* \"#utility.yul\":2517:2523   */\n      dup1\n        /* \"#utility.yul\":2525:2531   */\n      0x00\n        /* \"#utility.yul\":2578:2581   */\n      0xa0\n        /* \"#utility.yul\":2566:2575   */\n      dup7\n        /* \"#utility.yul\":2557:2564   */\n      dup9\n        /* \"#utility.yul\":2553:2576   */\n      sub\n        /* \"#utility.yul\":2549:2582   */\n      slt\n        /* \"#utility.yul\":2546:2599   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2546:2599   */\n    tag_62:\n        /* \"#utility.yul\":2618:2647   */\n      tag_63\n        /* \"#utility.yul\":2637:2646   */\n      dup7\n        /* \"#utility.yul\":2618:2647   */\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2608:2647   */\n      swap5\n      pop\n        /* \"#utility.yul\":2666:2704   */\n      tag_64\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup8\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2666:2704   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2656:2704   */\n      swap4\n      pop\n        /* \"#utility.yul\":2755:2757   */\n      0x40\n        /* \"#utility.yul\":2744:2753   */\n      dup7\n        /* \"#utility.yul\":2740:2758   */\n      add\n        /* \"#utility.yul\":2727:2759   */\n      calldataload\n        /* \"#utility.yul\":2778:2796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2819:2821   */\n      dup1\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2808:2822   */\n      gt\n        /* \"#utility.yul\":2805:2839   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2832:2833   */\n      dup1\n        /* \"#utility.yul\":2825:2837   */\n      revert\n        /* \"#utility.yul\":2805:2839   */\n    tag_65:\n        /* \"#utility.yul\":2858:2919   */\n      tag_66\n        /* \"#utility.yul\":2911:2918   */\n      dup10\n        /* \"#utility.yul\":2902:2908   */\n      dup4\n        /* \"#utility.yul\":2891:2900   */\n      dup11\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2858:2919   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2848:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2972:2974   */\n      0x60\n        /* \"#utility.yul\":2961:2970   */\n      dup9\n        /* \"#utility.yul\":2957:2975   */\n      add\n        /* \"#utility.yul\":2944:2976   */\n      calldataload\n        /* \"#utility.yul\":2928:2976   */\n      swap2\n      pop\n        /* \"#utility.yul\":3001:3003   */\n      dup1\n        /* \"#utility.yul\":2991:2999   */\n      dup3\n        /* \"#utility.yul\":2988:3004   */\n      gt\n        /* \"#utility.yul\":2985:3021   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup1\n        /* \"#utility.yul\":3007:3019   */\n      revert\n        /* \"#utility.yul\":2985:3021   */\n    tag_67:\n        /* \"#utility.yul\":3040:3103   */\n      tag_68\n        /* \"#utility.yul\":3095:3102   */\n      dup10\n        /* \"#utility.yul\":3084:3092   */\n      dup4\n        /* \"#utility.yul\":3073:3082   */\n      dup11\n        /* \"#utility.yul\":3069:3093   */\n      add\n        /* \"#utility.yul\":3040:3103   */\n      tag_33\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3030:3103   */\n      swap4\n      pop\n        /* \"#utility.yul\":3156:3159   */\n      0x80\n        /* \"#utility.yul\":3145:3154   */\n      dup9\n        /* \"#utility.yul\":3141:3160   */\n      add\n        /* \"#utility.yul\":3128:3161   */\n      calldataload\n        /* \"#utility.yul\":3112:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      dup1\n        /* \"#utility.yul\":3176:3184   */\n      dup3\n        /* \"#utility.yul\":3173:3189   */\n      gt\n        /* \"#utility.yul\":3170:3206   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3199:3200   */\n      dup1\n        /* \"#utility.yul\":3192:3204   */\n      revert\n        /* \"#utility.yul\":3170:3206   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":3225:3276   */\n      tag_70\n        /* \"#utility.yul\":3268:3275   */\n      dup9\n        /* \"#utility.yul\":3257:3265   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup10\n        /* \"#utility.yul\":3242:3266   */\n      add\n        /* \"#utility.yul\":3225:3276   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3215:3276   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2339:3282   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:4100   */\n    tag_20:\n        /* \"#utility.yul\":3598:3604   */\n      0x00\n        /* \"#utility.yul\":3606:3612   */\n      dup1\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3622:3628   */\n      dup1\n        /* \"#utility.yul\":3630:3636   */\n      0x00\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3671:3680   */\n      dup7\n        /* \"#utility.yul\":3662:3669   */\n      dup9\n        /* \"#utility.yul\":3658:3681   */\n      sub\n        /* \"#utility.yul\":3654:3687   */\n      slt\n        /* \"#utility.yul\":3651:3704   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3651:3704   */\n    tag_73:\n        /* \"#utility.yul\":3723:3752   */\n      tag_74\n        /* \"#utility.yul\":3742:3751   */\n      dup7\n        /* \"#utility.yul\":3723:3752   */\n      tag_30\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3713:3752   */\n      swap5\n      pop\n        /* \"#utility.yul\":3771:3809   */\n      tag_75\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"#utility.yul\":3794:3803   */\n      dup8\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3771:3809   */\n      tag_30\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3761:3809   */\n      swap4\n      pop\n        /* \"#utility.yul\":3856:3858   */\n      0x40\n        /* \"#utility.yul\":3845:3854   */\n      dup7\n        /* \"#utility.yul\":3841:3859   */\n      add\n        /* \"#utility.yul\":3828:3860   */\n      calldataload\n        /* \"#utility.yul\":3818:3860   */\n      swap3\n      pop\n        /* \"#utility.yul\":3907:3909   */\n      0x60\n        /* \"#utility.yul\":3896:3905   */\n      dup7\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3879:3911   */\n      calldataload\n        /* \"#utility.yul\":3869:3911   */\n      swap2\n      pop\n        /* \"#utility.yul\":3962:3965   */\n      0x80\n        /* \"#utility.yul\":3951:3960   */\n      dup7\n        /* \"#utility.yul\":3947:3966   */\n      add\n        /* \"#utility.yul\":3934:3967   */\n      calldataload\n        /* \"#utility.yul\":3990:4008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3982:3988   */\n      dup2\n        /* \"#utility.yul\":3979:4009   */\n      gt\n        /* \"#utility.yul\":3976:4026   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4019:4020   */\n      dup1\n        /* \"#utility.yul\":4012:4024   */\n      revert\n        /* \"#utility.yul\":3976:4026   */\n    tag_76:\n        /* \"#utility.yul\":4045:4094   */\n      tag_70\n        /* \"#utility.yul\":4086:4093   */\n      dup9\n        /* \"#utility.yul\":4077:4083   */\n      dup3\n        /* \"#utility.yul\":4066:4075   */\n      dup10\n        /* \"#utility.yul\":4062:4084   */\n      add\n        /* \"#utility.yul\":4045:4094   */\n      tag_34\n      jump\t// in\n\n    auxdata: 0xa264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_1950": {
									"entryPoint": null,
									"id": 1950,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1927": {
									"entryPoint": null,
									"id": 1927,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1984": {
									"entryPoint": 197,
									"id": 1984,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2629": {
									"entryPoint": null,
									"id": 2629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4102:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:13"
															},
															"nodeType": "YulIf",
															"src": "594:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:13",
														"type": ""
													}
												],
												"src": "497:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "731:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "727:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "764:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "675:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "862:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "890:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "928:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "934:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "924:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "894:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "966:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "978:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "963:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:62:13"
															},
															"nodeType": "YulIf",
															"src": "957:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "832:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "841:6:13",
														"type": ""
													}
												],
												"src": "807:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1187:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1175:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:35:13"
															},
															"nodeType": "YulIf",
															"src": "1161:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1235:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1229:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1274:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1319:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1293:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1290:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:26:13"
															},
															"nodeType": "YulIf",
															"src": "1287:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1365:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1408:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1412:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1388:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1381:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1425:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1438:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1429:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1485:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1474:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1532:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1537:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1506:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1568:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1570:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1570:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1555:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1563:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1552:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:15:13"
															},
															"nodeType": "YulIf",
															"src": "1549:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1608:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1597:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1684:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1723:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1710:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1710:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1741:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1757:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1748:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1636:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1652:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1654:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1665:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1670:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1661:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1654:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1632:3:13",
																"statements": []
															},
															"src": "1628:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1788:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1125:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1133:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1141:5:13",
														"type": ""
													}
												],
												"src": "1087:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1884:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1892:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1899:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:35:13"
															},
															"nodeType": "YulIf",
															"src": "1866:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1940:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2001:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2001:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2001:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:26:13"
															},
															"nodeType": "YulIf",
															"src": "1969:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2073:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2077:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2088:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2084:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2084:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2065:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2094:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2045:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2034:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2125:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2109:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2176:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2151:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2159:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2147:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2164:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:35:13"
															},
															"nodeType": "YulIf",
															"src": "2137:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2201:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2280:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2289:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2321:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2312:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1830:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1838:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1846:5:13",
														"type": ""
													}
												],
												"src": "1804:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:33:13"
															},
															"nodeType": "YulIf",
															"src": "2546:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2666:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2717:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2768:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2778:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2772:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2823:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2832:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2835:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2825:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2825:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2808:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:14:13"
															},
															"nodeType": "YulIf",
															"src": "2805:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2848:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2911:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2858:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2928:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2944:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2932:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3005:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3001:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2988:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:16:13"
															},
															"nodeType": "YulIf",
															"src": "2985:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3084:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3095:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3040:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3112:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3116:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3190:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3192:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3176:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3186:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:16:13"
															},
															"nodeType": "YulIf",
															"src": "3170:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3257:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3268:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3225:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2470:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2481:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2493:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2501:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2509:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2517:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2525:6:13",
														"type": ""
													}
												],
												"src": "2339:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3396:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3438:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3453:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3470:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3431:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3355:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3366:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:13",
														"type": ""
													}
												],
												"src": "3287:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:33:13"
															},
															"nodeType": "YulIf",
															"src": "3651:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3713:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3723:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3771:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3818:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3828:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3879:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3920:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3962:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3934:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3924:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4022:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3982:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3990:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:13"
															},
															"nodeType": "YulIf",
															"src": "3976:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4035:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4086:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4045:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3586:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3598:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3606:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3614:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3622:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3630:6:13",
														"type": ""
													}
												],
												"src": "3494:606:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;477:247:4;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;3449:33:13;;;3431:52;;3419:2;3404:18;477:247:4;3287:202:13;252:219:4;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;387:221:5;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:13;908:40;;978:18;963:34;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:13:o;1087:712::-;1141:5;1194:3;1187:4;1179:6;1175:17;1171:27;1161:55;;1212:1;1209;1202:12;1161:55;1248:6;1235:20;1274:4;1297:18;1293:2;1290:26;1287:52;;;1319:18;;:::i;:::-;1365:2;1362:1;1358:10;1388:28;1412:2;1408;1404:11;1388:28;:::i;:::-;1450:15;;;1520;;;1516:24;;;1481:12;;;;1552:15;;;1549:35;;;1580:1;1577;1570:12;1549:35;1616:2;1608:6;1604:15;1593:26;;1628:142;1644:6;1639:3;1636:15;1628:142;;;1710:17;;1698:30;;1661:12;;;;1748;;;;1628:142;;;1788:5;1087:712;-1:-1:-1;;;;;;;1087:712:13:o;1804:530::-;1846:5;1899:3;1892:4;1884:6;1880:17;1876:27;1866:55;;1917:1;1914;1907:12;1866:55;1953:6;1940:20;1979:18;1975:2;1972:26;1969:52;;;2001:18;;:::i;:::-;2045:55;2088:2;2069:13;;-1:-1:-1;;2065:27:13;2094:4;2061:38;2045:55;:::i;:::-;2125:2;2116:7;2109:19;2171:3;2164:4;2159:2;2151:6;2147:15;2143:26;2140:35;2137:55;;;2188:1;2185;2178:12;2137:55;2253:2;2246:4;2238:6;2234:17;2227:4;2218:7;2214:18;2201:55;2301:1;2276:16;;;2294:4;2272:27;2265:38;;;;2280:7;1804:530;-1:-1:-1;;;1804:530:13:o;2339:943::-;2493:6;2501;2509;2517;2525;2578:3;2566:9;2557:7;2553:23;2549:33;2546:53;;;2595:1;2592;2585:12;2546:53;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:38;2700:2;2689:9;2685:18;2666:38;:::i;:::-;2656:48;;2755:2;2744:9;2740:18;2727:32;2778:18;2819:2;2811:6;2808:14;2805:34;;;2835:1;2832;2825:12;2805:34;2858:61;2911:7;2902:6;2891:9;2887:22;2858:61;:::i;:::-;2848:71;;2972:2;2961:9;2957:18;2944:32;2928:48;;3001:2;2991:8;2988:16;2985:36;;;3017:1;3014;3007:12;2985:36;3040:63;3095:7;3084:8;3073:9;3069:24;3040:63;:::i;:::-;3030:73;;3156:3;3145:9;3141:19;3128:33;3112:49;;3186:2;3176:8;3173:16;3170:36;;;3202:1;3199;3192:12;3170:36;;3225:51;3268:7;3257:8;3246:9;3242:24;3225:51;:::i;:::-;3215:61;;;2339:943;;;;;;;;:::o;3494:606::-;3598:6;3606;3614;3622;3630;3683:3;3671:9;3662:7;3658:23;3654:33;3651:53;;;3700:1;3697;3690:12;3651:53;3723:29;3742:9;3723:29;:::i;:::-;3713:39;;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3761:48;;3856:2;3845:9;3841:18;3828:32;3818:42;;3907:2;3896:9;3892:18;3879:32;3869:42;;3962:3;3951:9;3947:19;3934:33;3990:18;3982:6;3979:30;3976:50;;;4022:1;4019;4012:12;3976:50;4045:49;4086:7;4077:6;4066:9;4062:22;4045:49;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193000",
								"executionCost": "238",
								"totalCost": "193238"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
									".code": [
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3287,
											"end": 3489,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 736,
											"end": 746,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 924,
											"end": 937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 920,
											"end": 947,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 978,
											"end": 996,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 963,
											"end": 997,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1198,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1960,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1972,
											"end": 1998,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2092,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2128,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2256,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2549,
											"end": 2582,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3004,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3069,
											"end": 3093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3242,
											"end": 3266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3687,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4024,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> nft/LPStakeWithdrawNft.sol:48:65:\n   |\n48 |     function power(uint256 a, uint256 b) internal pure returns (uint256){\n   |                                                                 ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1708,
					"file": "nft/LPStakeWithdrawNft.sol",
					"start": 1701
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> nft/LPStakeWithdrawNft.sol:378:30:\n    |\n378 |         (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\n    |                              ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11883,
					"file": "nft/LPStakeWithdrawNft.sol",
					"start": 11870
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/LPStakeWithdrawNft.sol": {
				"ast": {
					"absolutePath": "nft/LPStakeWithdrawNft.sol",
					"exportedSymbols": {
						"Address": [
							2584
						],
						"Context": [
							2606
						],
						"ERC1155Holder": [
							1951
						],
						"ERC1155Receiver": [
							1985
						],
						"ERC165": [
							2630
						],
						"Farming": [
							1632
						],
						"IERC1155": [
							1859
						],
						"IERC1155Receiver": [
							1900
						],
						"IERC165": [
							2642
						],
						"IERC20": [
							2063
						],
						"LibArrayForUint256Utils": [
							848
						],
						"LibSafeMathForUint256Utils": [
							253
						],
						"Ownable": [
							1737
						],
						"SafeERC20": [
							2287
						],
						"SafeMath": [
							2954
						]
					},
					"id": 1633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2955,
							"src": "86:73:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2288,
							"src": "161:81:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 1738,
							"src": "244:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2064,
							"src": "314:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 1860,
							"src": "388:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 1952,
							"src": "466:87:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSafeMathForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "LibSafeMathForUint256Utils",
							"nameLocation": "567:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "670:122:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "689:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "681:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 18,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 19,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "681:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206164646974696f6e206f766572666c6f77",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "725:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															},
															"value": "SafeMathForUint256: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "709:56:0"
											},
											{
												"expression": {
													"id": 29,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "783:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 30,
												"nodeType": "Return",
												"src": "776:8:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "612:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "616:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:0"
									},
									"scope": 253,
									"src": "603:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "867:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 43,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a207375627472616374696f6e206f766572666c6f77",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															},
															"value": "SafeMathForUint256: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "878:59:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "956:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "948:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 51,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "948:17:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "983:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 55,
												"nodeType": "Return",
												"src": "976:8:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "809:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "824:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:22:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:9:0"
									},
									"scope": 253,
									"src": "800:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1067:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 69,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1082:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "1078:57:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "1100:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 74,
															"nodeType": "Return",
															"src": "1115:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1155:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1147:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1147:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 84,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 85,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1183:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 87,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1195:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															},
															"value": "SafeMathForUint256: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1175:66:0"
											},
											{
												"expression": {
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1259:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 93,
												"nodeType": "Return",
												"src": "1252:8:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1009:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1024:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:22:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:9:0"
									},
									"scope": 253,
									"src": "1000:268:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1343:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1362:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1362:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206469766973696f6e206279207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															},
															"value": "SafeMathForUint256: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1354:54:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1427:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1419:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1419:17:0"
											},
											{
												"expression": {
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1454:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1447:8:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1285:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1297:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1308:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1300:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:22:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:9:0"
									},
									"scope": 253,
									"src": "1276:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1538:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d6f64756c6f206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															},
															"value": "SafeMathForUint256: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1549:53:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 139,
												"nodeType": "Return",
												"src": "1613:12:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1480:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1495:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:9:0"
									},
									"scope": 253,
									"src": "1471:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1709:176:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "1722:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 149,
													"id": 154,
													"nodeType": "Return",
													"src": "1733:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 156,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1752:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 149,
													"id": 160,
													"nodeType": "Return",
													"src": "1763:8:0"
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1792:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "1784:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"hexValue": "31",
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1796:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:13:0"
											},
											{
												"body": {
													"id": 183,
													"nodeType": "Block",
													"src": "1838:40:0",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "1861:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 179,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 177,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1857:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1857:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1853:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "1853:13:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"initializationExpression": {
													"assignments": [
														167
													],
													"declarations": [
														{
															"constant": false,
															"id": 167,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1820:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 184,
															"src": "1812:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 169,
													"initialValue": {
														"hexValue": "30",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1812:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1834:3:0",
														"subExpression": {
															"id": 173,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 175,
													"nodeType": "ExpressionStatement",
													"src": "1834:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1808:70:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "1650:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:22:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:0"
									},
									"scope": 253,
									"src": "1641:244:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1960:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1978:14:0",
													"trueExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 201,
												"nodeType": "Return",
												"src": "1971:21:0"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1902:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1914:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1906:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:9:0"
									},
									"scope": 253,
									"src": "1893:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2075:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 213,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2093:13:0",
													"trueExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 218,
												"nodeType": "Return",
												"src": "2086:20:0"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2017:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2066:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:9:0"
									},
									"scope": 253,
									"src": "2008:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2193:67:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "2212:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2216:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2211:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "2233:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2237:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2233:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 241,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2241:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2245:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2241:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2233:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2232:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2232:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 248,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2231:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 250,
												"nodeType": "Return",
												"src": "2204:48:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:22:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2183:9:0"
									},
									"scope": 253,
									"src": "2122:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1633,
							"src": "559:1704:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibArrayForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "LibArrayForUint256Utils",
							"nameLocation": "2275:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2802:497:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2832:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2816:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2813:62:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2834:41:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2854:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2853:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 265,
															"id": 273,
															"nodeType": "Return",
															"src": "2846:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "2895:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2887:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"hexValue": "30",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2901:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:15:0"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "2921:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2913:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2928:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2928:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:29:0"
											},
											{
												"body": {
													"id": 329,
													"nodeType": "Block",
													"src": "2973:289:0",
													"statements": [
														{
															"assignments": [
																291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 291,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "2993:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 329,
																	"src": "2985:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2985:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 297,
															"initialValue": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "3034:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 295,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3039:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 292,
																		"name": "LibSafeMathForUint256Utils",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2999:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibSafeMathForUint256Utils_$253_$",
																			"typeString": "type(library LibSafeMathForUint256Utils)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "2999:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2999:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2985:59:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 298,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3059:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3059:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 301,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 308,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "3130:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[] storage pointer"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "3136:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 311,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "3143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3130:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 326,
																	"nodeType": "Block",
																	"src": "3203:48:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 320,
																					"name": "low",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "3222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 321,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3228:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3234:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3228:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3222:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 325,
																			"nodeType": "ExpressionStatement",
																			"src": "3222:13:0"
																		}
																	]
																},
																"id": 327,
																"nodeType": "IfStatement",
																"src": "3126:125:0",
																"trueBody": {
																	"id": 319,
																	"nodeType": "Block",
																	"src": "3148:49:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 313,
																					"name": "high",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "3167:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 314,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3174:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3180:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3174:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3167:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 318,
																			"nodeType": "ExpressionStatement",
																			"src": "3167:14:0"
																		}
																	]
																}
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "3056:195:0",
															"trueBody": {
																"id": 307,
																"nodeType": "Block",
																"src": "3077:44:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3098:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 304,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "3104:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3097:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 265,
																		"id": 306,
																		"nodeType": "Return",
																		"src": "3090:18:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 287,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2961:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 288,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2968:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2961:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "WhileStatement",
												"src": "2955:307:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3281:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 265,
												"id": 334,
												"nodeType": "Return",
												"src": "3274:17:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2305:399:0",
										"text": " @dev Searches a sortd uint256 array and returns the first element index that \n match the key value, Time complexity O(log n)\n @param array is expected to be sorted in ascending order\n @param key is element \n @return if matches key in the array return true,else return false \n @return the first element index that match the key value,if not exist,return 0"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nameLocation": "2716:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2729:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 256,
													"nodeType": "ArrayTypeName",
													"src": "2729:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2762:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2754:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2790:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2796:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:12:0"
									},
									"scope": 848,
									"src": "2707:592:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3405:220:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 348,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3418:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "3415:56:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "3436:35:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3453:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3460:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 355,
															"nodeType": "Return",
															"src": "3445:17:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 380,
													"nodeType": "Block",
													"src": "3521:72:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 369,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "3533:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 371,
																	"indexExpression": {
																		"id": 370,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "3539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3533:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 372,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3545:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3533:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "IfStatement",
															"src": "3530:55:0",
															"trueBody": {
																"id": 378,
																"nodeType": "Block",
																"src": "3549:36:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3567:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 375,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 359,
																					"src": "3573:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 376,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3566:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 347,
																		"id": 377,
																		"nodeType": "Return",
																		"src": "3559:16:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3499:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 363,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3499:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"initializationExpression": {
													"assignments": [
														359
													],
													"declarations": [
														{
															"constant": false,
															"id": 359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3492:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 381,
															"src": "3484:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 361,
													"initialValue": {
														"hexValue": "30",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3484:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3517:3:0",
														"subExpression": {
															"id": 366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3517:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "3517:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3480:113:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3607:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 347,
												"id": 385,
												"nodeType": "Return",
												"src": "3600:17:0"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "firstIndexOf",
									"nameLocation": "3316:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3329:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3329:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3362:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3354:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:38:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3389:15:0"
									},
									"scope": 848,
									"src": "3307:318:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3684:229:0",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "3703:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:12:0"
											},
											{
												"body": {
													"id": 439,
													"nodeType": "Block",
													"src": "3762:144:0",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 409,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 410,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 412,
																	"indexExpression": {
																		"id": 411,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "3777:15:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 415,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"id": 416,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3813:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3807:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 418,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3818:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 425,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 419,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3824:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3824:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3839:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3824:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 423,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3843:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3824:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3818:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3807:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "3807:38:0"
														},
														{
															"expression": {
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 428,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3860:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 435,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 429,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3866:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3866:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3881:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3866:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 433,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3860:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 436,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3860:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "3860:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 401,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3739:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3739:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3739:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3735:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 440,
												"initializationExpression": {
													"assignments": [
														397
													],
													"declarations": [
														{
															"constant": false,
															"id": 397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3728:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 440,
															"src": "3723:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 396,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 399,
													"initialValue": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3723:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3757:3:0",
														"subExpression": {
															"id": 406,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 408,
													"nodeType": "ExpressionStatement",
													"src": "3757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3718:188:0"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reverse",
									"nameLocation": "3642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3650:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"nodeType": "ArrayTypeName",
													"src": "3650:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:25:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:0:0"
									},
									"scope": 848,
									"src": "3633:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4007:197:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 455,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "4015:54:0",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "4039:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 452,
															"id": 459,
															"nodeType": "Return",
															"src": "4048:12:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 484,
													"nodeType": "Block",
													"src": "4113:65:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "4125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 475,
																	"indexExpression": {
																		"id": 474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4127:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "4133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"id": 477,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4125:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "4122:48:0",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "4138:32:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 452,
																		"id": 481,
																		"nodeType": "Return",
																		"src": "4148:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 467,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4099:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4095:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4088:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 485,
															"src": "4080:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4080:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4109:3:0",
														"subExpression": {
															"id": 470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "4109:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4076:102:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 487,
												"nodeType": "Return",
												"src": "4185:11:0"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "3930:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3937:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3958:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 446,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 447,
													"nodeType": "ArrayTypeName",
													"src": "3958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:42:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4002:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:6:0"
									},
									"scope": 848,
									"src": "3921:283:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4280:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4296:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4304:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4296:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f756e6473",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															},
															"value": "ArrayForUint256: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "4288:69:0"
											},
											{
												"body": {
													"id": 524,
													"nodeType": "Block",
													"src": "4403:80:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 511,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4418:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 512,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "4424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 515,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "4439:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4447:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4439:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4433:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4418:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "4418:31:0"
														},
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4464:7:0",
																"subExpression": {
																	"id": 521,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "4464:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4385:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4377:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "WhileStatement",
												"src": "4370:113:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 526,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4493:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4493:11:0"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByIndex",
									"nameLocation": "4221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4235:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "4235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:37:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:0:0"
									},
									"scope": 848,
									"src": "4212:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4595:172:0",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4611:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4606:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"nodeType": "VariableDeclarationStatement",
												"src": "4606:10:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4632:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4627:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"nodeType": "VariableDeclarationStatement",
												"src": "4627:9:0"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 546,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "4648:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 547,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4647:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 550,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 549,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4663:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4647:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4647:42:0"
											},
											{
												"condition": {
													"id": 555,
													"name": "isIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "4703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "4700:60:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "4708:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4735:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"id": 558,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "4742:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 556,
																	"name": "removeByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4721:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "4721:27:0"
														}
													]
												}
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByValue",
									"nameLocation": "4533:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4547:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "4547:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4580:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:40:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4595:0:0"
									},
									"scope": 848,
									"src": "4524:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4841:159:0",
										"statements": [
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4854:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4849:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"nodeType": "VariableDeclarationStatement",
												"src": "4849:10:0"
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:9:0"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 578,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4891:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 579,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "4897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 580,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4890:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 582,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "4919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "4926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 581,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4906:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4906:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4890:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4890:42:0"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4946:5:0",
													"subExpression": {
														"id": 587,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "4947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "4943:50:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "4952:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "4975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 589,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4964:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "4964:17:0"
														}
													]
												}
											}
										]
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addValue",
									"nameLocation": "4784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4793:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 566,
													"nodeType": "ArrayTypeName",
													"src": "4793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:40:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4841:0:0"
									},
									"scope": 848,
									"src": "4775:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5074:115:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 607,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5085:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5082:100:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5099:83:0",
													"statements": [
														{
															"body": {
																"id": 630,
																"nodeType": "Block",
																"src": "5142:32:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 625,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 604,
																						"src": "5159:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 627,
																					"indexExpression": {
																						"id": 626,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 612,
																						"src": "5161:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5159:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "5152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "5152:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer,uint256)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "5152:12:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 615,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "5128:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"initializationExpression": {
																"assignments": [
																	612
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 612,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5117:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 631,
																		"src": "5112:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 611,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5112:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 614,
																"initialValue": {
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5112:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5138:3:0",
																	"subExpression": {
																		"id": 619,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "5138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 621,
																"nodeType": "ExpressionStatement",
																"src": "5138:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5108:66:0"
														}
													]
												}
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extend",
									"nameLocation": "5017:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5042:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5024:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"nodeType": "ArrayTypeName",
													"src": "5024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5045:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "5045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:41:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5074:0:0"
									},
									"scope": 848,
									"src": "5008:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "5274:667:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "contains",
														"nameLocation": "5290:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5285:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 643,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:13:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5314:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5309:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:10:0"
											},
											{
												"body": {
													"id": 737,
													"nodeType": "Block",
													"src": "5370:532:0",
													"statements": [
														{
															"expression": {
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 660,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "5385:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5396:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5385:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "5385:16:0"
														},
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5416:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "5416:9:0"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "j",
																	"nameLocation": "5445:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 737,
																	"src": "5440:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5440:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 673,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5440:12:0"
														},
														{
															"body": {
																"id": 699,
																"nodeType": "Block",
																"src": "5494:175:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 681,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 683,
																				"indexExpression": {
																					"id": 682,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5522:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5516:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 684,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5528:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 686,
																				"indexExpression": {
																					"id": 685,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "5534:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5528:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5516:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 698,
																		"nodeType": "IfStatement",
																		"src": "5513:141:0",
																		"trueBody": {
																			"id": 697,
																			"nodeType": "Block",
																			"src": "5537:117:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 688,
																							"name": "contains",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "5560:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 689,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5570:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "5560:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 691,
																					"nodeType": "ExpressionStatement",
																					"src": "5560:14:0"
																				},
																				{
																					"expression": {
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 692,
																							"name": "index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 647,
																							"src": "5597:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 693,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 650,
																							"src": "5605:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5597:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 695,
																					"nodeType": "ExpressionStatement",
																					"src": "5597:9:0"
																				},
																				{
																					"id": 696,
																					"nodeType": "Break",
																					"src": "5629:5:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "5472:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 675,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 700,
															"loopExpression": {
																"expression": {
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5490:3:0",
																	"subExpression": {
																		"id": 678,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "5490:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 680,
																"nodeType": "ExpressionStatement",
																"src": "5490:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5467:202:0"
														},
														{
															"condition": {
																"id": 701,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "5687:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "5683:208:0",
															"trueBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "5697:194:0",
																"statements": [
																	{
																		"body": {
																			"id": 725,
																			"nodeType": "Block",
																			"src": "5758:66:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 715,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5781:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 717,
																							"indexExpression": {
																								"id": 716,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 669,
																								"src": "5787:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5781:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 718,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5792:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 722,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 721,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 719,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 669,
																									"src": "5798:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 720,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5802:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5798:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5792:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5781:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 724,
																					"nodeType": "ExpressionStatement",
																					"src": "5781:23:0"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 706,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "5732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 707,
																						"name": "array",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 638,
																						"src": "5736:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																							"typeString": "uint256[] storage pointer"
																						}
																					},
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "5736:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5751:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5736:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5732:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 726,
																		"initializationExpression": {
																			"expression": {
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 702,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 703,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "5725:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5721:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 705,
																			"nodeType": "ExpressionStatement",
																			"src": "5721:9:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5754:3:0",
																				"subExpression": {
																					"id": 712,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 714,
																			"nodeType": "ExpressionStatement",
																			"src": "5754:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "5716:108:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 727,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5842:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5842:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5842:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 731,
																		"nodeType": "ExpressionStatement",
																		"src": "5842:11:0"
																	},
																	{
																		"expression": {
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "5872:3:0",
																			"subExpression": {
																				"id": 732,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "5872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "5872:3:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5347:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"initializationExpression": {
													"assignments": [
														650
													],
													"declarations": [
														{
															"constant": false,
															"id": 650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5340:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 738,
															"src": "5335:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 649,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 652,
													"initialValue": {
														"hexValue": "30",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5335:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5365:3:0",
														"subExpression": {
															"id": 657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5365:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "5365:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5330:572:0"
											},
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 740,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5912:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "5912:21:0"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distinct",
									"nameLocation": "5206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5233:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5215:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 637,
													"nodeType": "ArrayTypeName",
													"src": "5215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:25:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "5266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:16:0"
									},
									"scope": 848,
									"src": "5197:744:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "6046:244:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "maxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 758,
														"indexExpression": {
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6074:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6057:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6057:19:0"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "maxIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "6087:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6087:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "6087:12:0"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "6149:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 776,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "6167:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "6173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 779,
																	"name": "maxValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6178:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "IfStatement",
															"src": "6164:108:0",
															"trueBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "6187:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 781,
																				"name": "maxValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "6206:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 782,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "6217:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 784,
																				"indexExpression": {
																					"id": 783,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6223:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6217:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6206:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "6206:19:0"
																	},
																	{
																		"expression": {
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 787,
																				"name": "maxIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "6244:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6244:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 790,
																		"nodeType": "ExpressionStatement",
																		"src": "6244:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "6128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 770,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6132:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6128:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														766
													],
													"declarations": [
														{
															"constant": false,
															"id": 766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6122:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "6114:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 768,
													"initialValue": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6114:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6145:3:0",
														"subExpression": {
															"id": 773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 775,
													"nodeType": "ExpressionStatement",
													"src": "6145:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6110:173:0"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5958:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5962:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 747,
													"nodeType": "ArrayTypeName",
													"src": "5962:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:25:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "maxValue",
												"nameLocation": "6018:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "maxIndex",
												"nameLocation": "6036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:36:0"
									},
									"scope": 848,
									"src": "5949:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "6395:244:0",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "minValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 807,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 809,
														"indexExpression": {
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6406:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "6406:19:0"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "minIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "6436:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "6436:12:0"
											},
											{
												"body": {
													"id": 844,
													"nodeType": "Block",
													"src": "6498:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 827,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "6516:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 829,
																	"indexExpression": {
																		"id": 828,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "6522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6516:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 830,
																	"name": "minValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6527:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6516:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "6513:108:0",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "6536:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "minValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "6555:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 833,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 835,
																				"indexExpression": {
																					"id": 834,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "6572:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6566:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6555:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 837,
																		"nodeType": "ExpressionStatement",
																		"src": "6555:19:0"
																	},
																	{
																		"expression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 838,
																				"name": "minIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "6593:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 839,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "6604:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6593:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "6593:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 821,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6481:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6477:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"initializationExpression": {
													"assignments": [
														817
													],
													"declarations": [
														{
															"constant": false,
															"id": 817,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6471:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 845,
															"src": "6463:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 816,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 819,
													"initialValue": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6463:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6494:3:0",
														"subExpression": {
															"id": 824,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"nodeType": "ExpressionStatement",
													"src": "6494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6459:173:0"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6307:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6311:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 797,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ArrayTypeName",
													"src": "6311:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6310:25:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "minValue",
												"nameLocation": "6367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "minIndex",
												"nameLocation": "6385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6377:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:36:0"
									},
									"scope": 848,
									"src": "6298:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1633,
							"src": "2267:4377:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1737,
										"src": "6668:7:0"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "6668:7:0"
								},
								{
									"baseName": {
										"id": 851,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1951,
										"src": "6678:13:0"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "6678:13:0"
								}
							],
							"canonicalName": "Farming",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1632,
							"linearizedBaseContracts": [
								1632,
								1951,
								1985,
								1900,
								2630,
								2642,
								1737,
								2606
							],
							"name": "Farming",
							"nameLocation": "6657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 855,
									"libraryName": {
										"id": 853,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2954,
										"src": "6704:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6698:27:0",
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6717:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 859,
									"libraryName": {
										"id": 856,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2287,
										"src": "6737:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6731:27:0",
									"typeName": {
										"id": 858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 857,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2063,
											"src": "6751:6:0"
										},
										"referencedDeclaration": 2063,
										"src": "6751:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2063",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farming.UserInfo",
									"id": 866,
									"members": [
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6805:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6797:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 860,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6797:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "6861:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6853:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6853:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 865,
											"mutability": "mutable",
											"name": "pointsDebt",
											"nameLocation": "6967:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6959:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 864,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6959:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "6777:8:0",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "6770:282:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farming.NFTInfo",
									"id": 875,
									"members": [
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "7098:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7090:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 867,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7090:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7132:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7124:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 869,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7124:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "remaining",
											"nameLocation": "7175:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7167:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 871,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7167:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "7234:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7226:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTInfo",
									"nameLocation": "7071:7:0",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "7064:224:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fcbd285",
									"id": 878,
									"mutability": "mutable",
									"name": "lpToken",
									"nameLocation": "7314:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7300:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2063",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 877,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 876,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2063,
											"src": "7300:6:0"
										},
										"referencedDeclaration": 2063,
										"src": "7300:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2063",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6c9bd47",
									"id": 881,
									"mutability": "mutable",
									"name": "nftIds",
									"nameLocation": "7385:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7368:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 880,
										"nodeType": "ArrayTypeName",
										"src": "7368:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 886,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "7434:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7398:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
										"typeString": "mapping(address => struct Farming.UserInfo)"
									},
									"typeName": {
										"id": 885,
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7406:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7398:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
											"typeString": "mapping(address => struct Farming.UserInfo)"
										},
										"valueType": {
											"id": 884,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 883,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 866,
												"src": "7417:8:0"
											},
											"referencedDeclaration": 866,
											"src": "7417:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
												"typeString": "struct Farming.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "userlist",
									"nameLocation": "7464:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7446:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7446:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 888,
										"nodeType": "ArrayTypeName",
										"src": "7446:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 892,
									"mutability": "mutable",
									"name": "withdrawAmount",
									"nameLocation": "7497:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7481:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7481:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7514:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "lpUnitValue",
									"nameLocation": "7538:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7522:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 893,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303635",
										"id": 894,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7552:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1065_by_1",
											"typeString": "int_const 1065"
										},
										"value": "1065"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 898,
									"mutability": "mutable",
									"name": "timeUnitValue",
									"nameLocation": "7579:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7563:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 896,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7563:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "383634303030",
										"id": 897,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7595:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_864000_by_1",
											"typeString": "int_const 864000"
										},
										"value": "864000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "threshold",
									"nameLocation": "7624:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "7608:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 899,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7608:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 906,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 902,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 900,
												"name": "lpUnitValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 895,
												"src": "7636:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"id": 901,
												"name": "timeUnitValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 898,
												"src": "7650:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "7636:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 905,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 903,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7666:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 904,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7672:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "7666:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "7636:38:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "601a6ec53ec4046203ac233b5fd42d196f8437baa1df272d33125d6904f31002",
									"id": 917,
									"name": "NFTAdded",
									"nameLocation": "7689:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "7714:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7698:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "7751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "7766:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7758:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7697:75:0"
									},
									"src": "7683:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 923,
									"name": "Staked",
									"nameLocation": "7785:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7808:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "7792:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7822:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "7814:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:38:0"
									},
									"src": "7779:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7",
									"id": 931,
									"name": "Claim",
									"nameLocation": "7842:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7864:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7848:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7878:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7870:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "7893:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7885:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7847:55:0"
									},
									"src": "7836:67:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 937,
									"name": "Withdrawn",
									"nameLocation": "7915:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7941:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7925:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7955:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7947:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7924:38:0"
									},
									"src": "7909:54:0"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "7989:8:0",
										"statements": []
									},
									"id": 941,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7986:2:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7989:0:0"
									},
									"scope": 1632,
									"src": "7975:22:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "8155:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 958,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "8205:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 954,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8166:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8166:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8166:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "8166:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8271:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8271:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 969,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8291:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																],
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 967,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8283:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8283:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "8298:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 972,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "8303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8312:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 962,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "8229:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 961,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "8220:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1859_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8220:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1859",
																"typeString": "contract IERC1155"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1858,
														"src": "8220:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8220:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "8220:95:0"
											}
										]
									},
									"functionSelector": "63c66891",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 952,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 951,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "8146:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8146:9:0"
										}
									],
									"name": "addNFTBatch",
									"nameLocation": "8014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "8044:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "8036:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "8090:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "8073:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 944,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 945,
													"nodeType": "ArrayTypeName",
													"src": "8073:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8121:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "8104:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 947,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 948,
													"nodeType": "ArrayTypeName",
													"src": "8104:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8025:110:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8155:0:0"
									},
									"scope": 1632,
									"src": "8005:318:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "8475:434:0",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8503:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "8486:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 996,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8523:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8509:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 993,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 994,
															"nodeType": "ArrayTypeName",
															"src": "8513:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8486:47:0"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8561:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "8544:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1002,
															"nodeType": "ArrayTypeName",
															"src": "8544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8585:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8571:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1004,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1005,
															"nodeType": "ArrayTypeName",
															"src": "8575:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8544:51:0"
											},
											{
												"body": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8660:78:0",
													"statements": [
														{
															"expression": {
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1023,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "8675:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1027,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1024,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "8679:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1025,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "8681:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8679:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8675:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1028,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "8690:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8675:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1030,
															"nodeType": "ExpressionStatement",
															"src": "8675:16:0"
														},
														{
															"expression": {
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1031,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "8706:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1035,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1032,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "8714:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1033,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "8716:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8714:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8706:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8706:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1038,
															"nodeType": "ExpressionStatement",
															"src": "8706:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "8630:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1015,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "8635:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1016,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "8647:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8635:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1018,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8634:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8630:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"initializationExpression": {
													"assignments": [
														1011
													],
													"declarations": [
														{
															"constant": false,
															"id": 1011,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8619:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1040,
															"src": "8611:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1010,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8611:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1013,
													"initialValue": {
														"id": 1012,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8623:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8611:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8655:3:0",
														"subExpression": {
															"id": 1020,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "8655:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1022,
													"nodeType": "ExpressionStatement",
													"src": "8655:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8606:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1044,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8781:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "8789:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1041,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8750:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8750:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8750:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "8750:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1052,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8857:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8857:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8877:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8869:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8869:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "8884:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1059,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1049,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "8815:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1048,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "8806:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1859_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8806:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1859",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1858,
														"src": "8806:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8806:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "8806:95:0"
											}
										]
									},
									"functionSelector": "4b02218f",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "8465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8465:9:0"
										}
									],
									"name": "addNftBatchWithNumber",
									"nameLocation": "8340:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "8380:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "8372:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "8417:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "8409:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "8441:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "8433:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:96:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8475:0:0"
									},
									"scope": 1632,
									"src": "8331:578:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "8957:514:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9007:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9007:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1076,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9040:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9032:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9032:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9032:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "9060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1069,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "8968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2120,
														"src": "8968:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2063_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8968:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "8968:109:0"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9115:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "9098:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1082,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1081,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "9098:8:0"
															},
															"referencedDeclaration": 866,
															"src": "9098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"baseExpression": {
														"id": 1084,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "9122:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1087,
													"indexExpression": {
														"expression": {
															"id": 1085,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9128:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9128:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9122:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9098:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9164:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9164:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1089,
															"name": "userlist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "9150:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9150:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "9150:25:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1096,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "9236:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9236:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "9233:91:0",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "9254:70:0",
													"statements": [
														{
															"expression": {
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1100,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "9269:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																			"typeString": "struct Farming.UserInfo storage pointer"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "pointsDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 865,
																	"src": "9269:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1104,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9301:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9301:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1103,
																		"name": "pointsBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "9287:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9287:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9269:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1108,
															"nodeType": "ExpressionStatement",
															"src": "9269:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1111,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "9334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1117,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "9364:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1114,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "9348:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "9348:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2818,
															"src": "9348:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9348:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9334:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "9334:37:0"
											},
											{
												"expression": {
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1121,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9382:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "9382:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1124,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9404:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9382:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "9382:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9444:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9444:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "9456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "9437:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "EmitStatement",
												"src": "9432:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "8926:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8940:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "8932:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8931:16:0"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8957:0:0"
									},
									"scope": 1632,
									"src": "8917:554:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "9579:789:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1141,
																	"name": "nftIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "9598:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9598:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9614:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9598:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c204e465473206661726d6564",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9617:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
																"typeString": "literal_string \"All NFTs farmed\""
															},
															"value": "All NFTs farmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
																"typeString": "literal_string \"All NFTs farmed\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9590:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "9590:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1150,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9668:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9668:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1149,
																	"name": "pointsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "9654:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9654:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1153,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "9683:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9654:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420506f696e7473",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9694:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
																"typeString": "literal_string \"Insufficient Points\""
															},
															"value": "Insufficient Points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
																"typeString": "literal_string \"Insufficient Points\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9646:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9646:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "9646:70:0"
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9744:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "9727:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1158,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "9727:8:0"
															},
															"referencedDeclaration": 866,
															"src": "9727:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"baseExpression": {
														"id": 1161,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "9751:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1164,
													"indexExpression": {
														"expression": {
															"id": 1162,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9757:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9751:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9727:41:0"
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1166,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "9815:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pointsDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "9815:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1174,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "9863:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1170,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9847:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9847:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "pointsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "9833:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9833:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2833,
															"src": "9833:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9833:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9815:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "9815:58:0"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1178,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "9884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "9884:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1181,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9906:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9906:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9884:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "9884:37:0"
											},
											{
												"assignments": [
													1186,
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "9951:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "9943:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "9971:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "9963:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "10008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1189,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "9980:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "9980:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9980:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9942:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1197,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "10064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1198,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "10072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1194,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "10026:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeByIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "10026:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "10026:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10184:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10176:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10176:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10176:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "10229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10270:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1202,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "10125:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1201,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "10116:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1859_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10116:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1859",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1842,
														"src": "10116:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10116:167:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "10116:167:0"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "10294:16:0",
													"subExpression": {
														"id": 1216,
														"name": "withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "10296:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "10294:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10334:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "10346:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10358:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1219,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "EmitStatement",
												"src": "10323:37:0"
											}
										]
									},
									"functionSelector": "1e83409a",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "9538:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "9552:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "9544:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:28:0"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9579:0:0"
									},
									"scope": 1632,
									"src": "9529:839:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "10427:739:0",
										"statements": [
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10455:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "10438:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1233,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1232,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "10438:8:0"
															},
															"referencedDeclaration": 866,
															"src": "10438:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"baseExpression": {
														"id": 1235,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "10462:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1238,
													"indexExpression": {
														"expression": {
															"id": 1236,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10468:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10468:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10462:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10438:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1241,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "10498:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "10498:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1243,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "10513:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10498:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b6564",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10521:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
																"typeString": "literal_string \"Insufficient staked\""
															},
															"value": "Insufficient staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
																"typeString": "literal_string \"Insufficient staked\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10490:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "10490:53:0"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1248,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "10589:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pointsDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "10589:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1252,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10621:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10621:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1251,
															"name": "pointsBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "10607:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10607:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10589:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10589:43:0"
											},
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1257,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "10643:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "10643:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1263,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "10673:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1260,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "10657:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "10657:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2833,
															"src": "10657:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10657:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10643:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "10643:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1267,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "10695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "10695:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "10691:277:0",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "10713:255:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1271,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "10731:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																			"typeString": "struct Farming.UserInfo storage pointer"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pointsDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 865,
																	"src": "10731:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1273,
																	"name": "threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "10749:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10731:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1299,
																"nodeType": "Block",
																"src": "10903:54:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1293,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1234,
																					"src": "10922:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																						"typeString": "struct Farming.UserInfo storage pointer"
																					}
																				},
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "pointsDebt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 865,
																				"src": "10922:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10940:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10922:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1298,
																		"nodeType": "ExpressionStatement",
																		"src": "10922:19:0"
																	}
																]
															},
															"id": 1300,
															"nodeType": "IfStatement",
															"src": "10728:229:0",
															"trueBody": {
																"id": 1292,
																"nodeType": "Block",
																"src": "10760:137:0",
																"statements": [
																	{
																		"assignments": [
																			1276
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1276,
																				"mutability": "mutable",
																				"name": "number",
																				"nameLocation": "10784:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1292,
																				"src": "10779:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1275,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "10779:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1282,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1280,
																					"name": "threshold",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 907,
																					"src": "10813:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1277,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1234,
																						"src": "10793:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																							"typeString": "struct Farming.UserInfo storage pointer"
																						}
																					},
																					"id": 1278,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "pointsDebt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 865,
																					"src": "10793:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2863,
																				"src": "10793:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10793:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10779:44:0"
																	},
																	{
																		"expression": {
																			"id": 1290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1283,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1234,
																					"src": "10842:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																						"typeString": "struct Farming.UserInfo storage pointer"
																					}
																				},
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "pointsDebt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 865,
																				"src": "10842:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1288,
																						"name": "number",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "10874:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1286,
																						"name": "threshold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 907,
																						"src": "10860:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2848,
																					"src": "10860:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10860:21:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10842:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1291,
																		"nodeType": "ExpressionStatement",
																		"src": "10842:39:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1303,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "10978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "10978:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1306,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11000:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10978:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "10978:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11071:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11071:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "11096:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1310,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "11036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "11036:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2063_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11036:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "11036:77:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11139:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11139:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "11151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "11129:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "EmitStatement",
												"src": "11124:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "10395:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10412:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "10404:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10403:16:0"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10427:0:0"
									},
									"scope": 1632,
									"src": "10386:780:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "11203:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1329,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "11223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
																		"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
																	}
																},
																"id": 1332,
																"indexExpression": {
																	"expression": {
																		"id": 1330,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11229:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11229:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11223:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_storage",
																	"typeString": "struct Farming.UserInfo storage ref"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "11223:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "11214:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11214:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "11214:34:0"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "11187:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11191:2:0"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11203:0:0"
									},
									"scope": 1632,
									"src": "11178:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "11338:117:0",
										"statements": [
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "11365:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "11349:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1345,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1344,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "11349:8:0"
															},
															"referencedDeclaration": 866,
															"src": "11349:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"baseExpression": {
														"id": 1347,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "11372:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1349,
													"indexExpression": {
														"id": 1348,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "11378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11372:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11349:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1355,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "11441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																		"typeString": "struct Farming.UserInfo memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																		"typeString": "struct Farming.UserInfo memory"
																	}
																],
																"id": 1354,
																"name": "_unDebitedPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "11424:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UserInfo_$866_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct Farming.UserInfo memory) view returns (uint256)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11424:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1351,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "11404:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																	"typeString": "struct Farming.UserInfo memory"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pointsDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "11404:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2818,
														"src": "11404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11404:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1358,
												"nodeType": "Return",
												"src": "11397:50:0"
											}
										]
									},
									"functionSelector": "25ca4cff",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pointsBalance",
									"nameLocation": "11277:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "11291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11290:17:0"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "11329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11328:9:0"
									},
									"scope": 1632,
									"src": "11268:187:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "11547:123:0",
										"statements": [
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "blockTime",
														"nameLocation": "11566:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "11558:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"expression": {
														"id": 1370,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "11578:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "11578:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11558:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1379,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "11650:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																	"typeString": "struct Farming.UserInfo memory"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "11650:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1375,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "11625:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																			"typeString": "struct Farming.UserInfo memory"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastUpdateTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 863,
																	"src": "11625:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1373,
																	"name": "blockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "11611:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2833,
																"src": "11611:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11611:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2848,
														"src": "11611:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11611:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1382,
												"nodeType": "Return",
												"src": "11604:58:0"
											}
										]
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unDebitedPoints",
									"nameLocation": "11476:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "11493:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
													"typeString": "struct Farming.UserInfo"
												},
												"typeName": {
													"id": 1362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1361,
														"name": "UserInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 866,
														"src": "11493:8:0"
													},
													"referencedDeclaration": 866,
													"src": "11493:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
														"typeString": "struct Farming.UserInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11492:22:0"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "11538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11537:9:0"
									},
									"scope": 1632,
									"src": "11467:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "11732:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1389,
														"name": "nftIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "11750:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11750:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1388,
												"id": 1391,
												"nodeType": "Return",
												"src": "11743:20:0"
											}
										]
									},
									"functionSelector": "0af2c6ca",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nftCount",
									"nameLocation": "11691:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11699:2:0"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "11723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11722:9:0"
									},
									"scope": 1632,
									"src": "11682:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "11838:120:0",
										"statements": [
											{
												"assignments": [
													1399,
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "11858:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "11850:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "11878:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "11870:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1406,
												"initialValue": {
													"arguments": [
														{
															"id": 1404,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "11915:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1402,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "11887:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "11887:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11887:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11849:73:0"
											},
											{
												"expression": {
													"id": 1407,
													"name": "minTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1399,
													"src": "11940:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1408,
												"nodeType": "Return",
												"src": "11933:17:0"
											}
										]
									},
									"functionSelector": "55ac2fd3",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextNftTokenId",
									"nameLocation": "11788:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11805:2:0"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11828:9:0"
									},
									"scope": 1632,
									"src": "11779:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "12020:35:0",
										"statements": [
											{
												"expression": {
													"id": 1415,
													"name": "threshold",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 907,
													"src": "12038:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1416,
												"nodeType": "Return",
												"src": "12031:16:0"
											}
										]
									},
									"functionSelector": "e75235b8",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getThreshold",
									"nameLocation": "11975:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11987:2:0"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "12011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12010:9:0"
									},
									"scope": 1632,
									"src": "11966:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "12131:330:0",
										"statements": [
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "12150:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "12142:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"expression": {
														"id": 1427,
														"name": "nftIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "12159:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12159:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12142:30:0"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "12200:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "12183:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "12183:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"arguments": [
														{
															"id": 1438,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "12224:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12210:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1436,
															"nodeType": "ArrayTypeName",
															"src": "12214:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12210:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12183:48:0"
											},
											{
												"body": {
													"id": 1457,
													"nodeType": "Block",
													"src": "12279:41:0",
													"statements": [
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1451,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "12294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1453,
																	"indexExpression": {
																		"id": 1452,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1442,
																		"src": "12302:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12294:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12294:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "12294:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "12262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1446,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "12266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12262:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"initializationExpression": {
													"assignments": [
														1442
													],
													"declarations": [
														{
															"constant": false,
															"id": 1442,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12255:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1458,
															"src": "12247:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1441,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1444,
													"initialValue": {
														"hexValue": "30",
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12247:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12274:3:0",
														"subExpression": {
															"id": 1448,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "12274:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1450,
													"nodeType": "ExpressionStatement",
													"src": "12274:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12242:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12390:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1632",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12382:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12382:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12397:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1470,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "12417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12426:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1460,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "12339:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1459,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "12330:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1859_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12330:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1859",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1858,
														"src": "12330:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12330:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "12330:99:0"
											},
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12440:13:0",
													"subExpression": {
														"id": 1474,
														"name": "nftIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "12447:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "12440:13:0"
											}
										]
									},
									"functionSelector": "c4091443",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1423,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1422,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "12122:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12122:9:0"
										}
									],
									"name": "urgentWithdraw",
									"nameLocation": "12072:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "12095:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "12087:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12086:28:0"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12131:0:0"
									},
									"scope": 1632,
									"src": "12063:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "12526:41:0",
										"statements": [
											{
												"expression": {
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1485,
														"name": "lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "12537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2063",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1487,
																"name": "mint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "12554:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1486,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "12547:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2063_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12547:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2063",
															"typeString": "contract IERC20"
														}
													},
													"src": "12537:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "12537:22:0"
											}
										]
									},
									"functionSelector": "aa8932f1",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1482,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "12516:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12516:9:0"
										}
									],
									"name": "setLpMintAddress",
									"nameLocation": "12478:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "mint",
												"nameLocation": "12503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "12495:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12494:14:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12526:0:0"
									},
									"scope": 1632,
									"src": "12469:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "12631:99:0",
										"statements": [
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "lpUnitValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "12642:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "12656:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12642:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "12642:19:0"
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1503,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "12672:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1504,
																"name": "lpUnitValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "12684:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1505,
																"name": "timeUnitValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "12698:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12684:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12714:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12720:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "12714:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "12684:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12672:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "12672:50:0"
											}
										]
									},
									"functionSelector": "2de1ea01",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "12621:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12621:9:0"
										}
									],
									"name": "setLpUnitValue",
									"nameLocation": "12584:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "12599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:15:0"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12631:0:0"
									},
									"scope": 1632,
									"src": "12575:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "12796:101:0",
										"statements": [
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1521,
														"name": "timeUnitValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "12807:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1522,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "12823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12807:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "12807:21:0"
											},
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1525,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "12839:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1526,
																"name": "lpUnitValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "12851:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1527,
																"name": "timeUnitValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "12865:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12851:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12881:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12887:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "12881:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "12851:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12839:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "12839:50:0"
											}
										]
									},
									"functionSelector": "14f8beca",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1518,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "12786:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12786:9:0"
										}
									],
									"name": "setTimeUnitValue",
									"nameLocation": "12747:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "12764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12763:15:0"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12796:0:0"
									},
									"scope": 1632,
									"src": "12738:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "12967:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1543,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														],
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12985:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12985:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1545,
												"nodeType": "Return",
												"src": "12978:23:0"
											}
										]
									},
									"functionSelector": "a197d0db",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLpMintAddress",
									"nameLocation": "12918:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12934:2:0"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "12958:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12957:9:0"
									},
									"scope": 1632,
									"src": "12909:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "13074:37:0",
										"statements": [
											{
												"expression": {
													"id": 1552,
													"name": "lpUnitValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 895,
													"src": "13092:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1553,
												"nodeType": "Return",
												"src": "13085:18:0"
											}
										]
									},
									"functionSelector": "601abc54",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLpUnitValue",
									"nameLocation": "13027:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13041:2:0"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "13065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13064:9:0"
									},
									"scope": 1632,
									"src": "13018:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "13177:39:0",
										"statements": [
											{
												"expression": {
													"id": 1560,
													"name": "timeUnitValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 898,
													"src": "13195:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1561,
												"nodeType": "Return",
												"src": "13188:20:0"
											}
										]
									},
									"functionSelector": "dadcde10",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeUnitValue",
									"nameLocation": "13128:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13144:2:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "13168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13167:9:0"
									},
									"scope": 1632,
									"src": "13119:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "13296:44:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1570,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "13314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
																"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
															}
														},
														"id": 1572,
														"indexExpression": {
															"id": 1571,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "13320:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13314:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage",
															"typeString": "struct Farming.UserInfo storage ref"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 861,
													"src": "13314:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1574,
												"nodeType": "Return",
												"src": "13307:25:0"
											}
										]
									},
									"functionSelector": "7612f53c",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakeAmount",
									"nameLocation": "13233:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "13260:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "13252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13251:14:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "13287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13286:9:0"
									},
									"scope": 1632,
									"src": "13224:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "13419:386:0",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "13507:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "13499:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"id": 1586,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "13525:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1585,
														"name": "pointsBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "13511:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13511:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13499:31:0"
											},
											{
												"body": {
													"id": 1599,
													"nodeType": "Block",
													"src": "13562:47:0",
													"statements": [
														{
															"expression": {
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1592,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "13577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1595,
																			"name": "threshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "13587:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1593,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "13581:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2833,
																		"src": "13581:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13581:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13577:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1598,
															"nodeType": "ExpressionStatement",
															"src": "13577:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "13547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1590,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "13551:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13547:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"nodeType": "WhileStatement",
												"src": "13541:68:0"
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "userStakedAmount",
														"nameLocation": "13627:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "13619:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"arguments": [
														{
															"id": 1604,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "13665:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1603,
														"name": "getUserStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "13646:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13646:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13619:51:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "userStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "13684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13704:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13684:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1613,
												"nodeType": "IfStatement",
												"src": "13681:61:0",
												"trueBody": {
													"id": 1612,
													"nodeType": "Block",
													"src": "13707:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13729:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1582,
															"id": 1611,
															"nodeType": "Return",
															"src": "13722:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "userStakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "13780:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1616,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "13773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1614,
																	"name": "threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "13759:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2833,
																"src": "13759:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13759:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2863,
														"src": "13759:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13759:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1621,
												"nodeType": "Return",
												"src": "13752:45:0"
											}
										]
									},
									"functionSelector": "16dcb588",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserNextNftTime",
									"nameLocation": "13357:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "13384:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "13376:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13375:14:0"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "13411:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13410:9:0"
									},
									"scope": 1632,
									"src": "13348:457:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "13871:40:0",
										"statements": [
											{
												"expression": {
													"id": 1628,
													"name": "withdrawAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 892,
													"src": "13889:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1629,
												"nodeType": "Return",
												"src": "13882:21:0"
											}
										]
									},
									"functionSelector": "027932f9",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWithdrawAmount",
									"nameLocation": "13822:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13839:2:0"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "13863:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13862:9:0"
									},
									"scope": 1632,
									"src": "13813:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1633,
							"src": "6648:7268:0",
							"usedErrors": []
						}
					],
					"src": "59:13857:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2606
						],
						"Ownable": [
							1737
						]
					},
					"id": 1738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1738,
							"sourceUnit": 2607,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1637,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2606,
										"src": "668:7:1"
									},
									"id": 1638,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1636,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1737,
							"linearizedBaseContracts": [
								1737,
								2606
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1640,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1737,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1639,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1646,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1650,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1656,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 1737,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 1662,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1640,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1663,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 1737,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1669,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1671,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 1677,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1679,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1685,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1682,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 1737,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1711,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1698,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 1737,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1735,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1722,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1725,
												"initialValue": {
													"id": 1724,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1640,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1726,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1727,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1731,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1732,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 1737,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1738,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1859
						],
						"IERC165": [
							2642
						]
					},
					"id": 1860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 2643,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1742,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2642,
										"src": "357:7:2"
									},
									"id": 1743,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1741,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1859,
							"linearizedBaseContracts": [
								1859,
								2642
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1756,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1771,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1764,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1765,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1767,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1780,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1787,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 1859,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1799,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1800,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1802,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1803,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1806,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1807,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 1859,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 1859,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 1859,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 1859,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1848,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1849,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1851,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1852,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 1859,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1860,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1900
						],
						"IERC165": [
							2642
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 2643,
							"src": "128:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1864,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2642,
										"src": "247:7:3"
									},
									"id": 1865,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1863,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1900,
							"linearizedBaseContracts": [
								1900,
								2642
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1118:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1144:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1166:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1209:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:3"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1253:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1878,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:3"
									},
									"scope": 1900,
									"src": "1082:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2290:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2338:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1887,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1888,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2370:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1890,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1891,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2405:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:3"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "2449:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:3"
									},
									"scope": 1900,
									"src": "2249:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1901,
							"src": "217:2242:3",
							"usedErrors": []
						}
					],
					"src": "103:2357:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							1951
						],
						"ERC1155Receiver": [
							1985
						],
						"ERC165": [
							2630
						],
						"IERC1155Receiver": [
							1900
						],
						"IERC165": [
							2642
						]
					},
					"id": 1952,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1952,
							"sourceUnit": 1986,
							"src": "131:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1985,
										"src": "230:15:4"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "230:15:4"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "164:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1951,
							"linearizedBaseContracts": [
								1951,
								1985,
								1900,
								2630,
								2642
							],
							"name": "ERC1155Holder",
							"nameLocation": "213:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1881
									],
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "416:55:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1922,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "433:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1951",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1927,
														"src": "433:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "433:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1925,
												"nodeType": "Return",
												"src": "426:38:4"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "261:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1918,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "390:8:4"
									},
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "288:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "305:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "322:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "339:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "356:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "356:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:96:4"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "408:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "408:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:8:4"
									},
									"scope": 1951,
									"src": "252:219:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1899
									],
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "664:60:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1945,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "681:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1951",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "681:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "681:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1948,
												"nodeType": "Return",
												"src": "674:43:4"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "486:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1941,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "638:8:4"
									},
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "518:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "552:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1932,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "552:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1933,
													"nodeType": "ArrayTypeName",
													"src": "552:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "578:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1935,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "578:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1936,
													"nodeType": "ArrayTypeName",
													"src": "578:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "604:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "604:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:114:4"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "656:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1942,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:8:4"
									},
									"scope": 1951,
									"src": "477:247:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1952,
							"src": "204:522:4",
							"usedErrors": []
						}
					],
					"src": "106:621:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							1985
						],
						"ERC165": [
							2630
						],
						"IERC1155Receiver": [
							1900
						],
						"IERC165": [
							2642
						]
					},
					"id": 1986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1953,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 1954,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1986,
							"sourceUnit": 1901,
							"src": "133:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1955,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1986,
							"sourceUnit": 2631,
							"src": "167:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1957,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2630,
										"src": "295:6:5"
									},
									"id": 1958,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:5"
								},
								{
									"baseName": {
										"id": 1959,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1900,
										"src": "303:16:5"
									},
									"id": 1960,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:5"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1956,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1985,
							"linearizedBaseContracts": [
								1985,
								1900,
								2630,
								2642
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2629,
										2641
									],
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "495:113:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1971,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "512:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1973,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "532:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1900_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1900_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 1972,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$1900",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1979,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "589:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1977,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$1985_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2629,
															"src": "565:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1970,
												"id": 1982,
												"nodeType": "Return",
												"src": "505:96:5"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1967,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1965,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2630,
												"src": "463:6:5"
											},
											{
												"id": 1966,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2642,
												"src": "471:7:5"
											}
										],
										"src": "454:25:5"
									},
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "414:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:5"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "489:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:5"
									},
									"scope": 1985,
									"src": "387:221:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1986,
							"src": "258:352:5",
							"usedErrors": []
						}
					],
					"src": "108:503:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2063
						]
					},
					"id": 2064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1988,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2063,
							"linearizedBaseContracts": [
								2063
							],
							"name": "IERC20",
							"nameLocation": "197:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:6"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "327:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:6"
									},
									"scope": 2063,
									"src": "281:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "438:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:6"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:6"
									},
									"scope": 2063,
									"src": "419:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "725:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:6"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "778:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:6"
									},
									"scope": 2063,
									"src": "707:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1078:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:6"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1133:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:6"
									},
									"scope": 2063,
									"src": "1059:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "1812:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "1829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:6"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "1863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:6"
									},
									"scope": 2063,
									"src": "1795:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2207:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2231:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2258:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:6"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2297:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:6"
									},
									"scope": 2063,
									"src": "2176:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2053,
									"name": "Transfer",
									"nameLocation": "2478:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2487:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2509:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2529:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:6"
									},
									"src": "2472:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2062,
									"name": "Approval",
									"nameLocation": "2709:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2718:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2741:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2766:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:6"
									},
									"src": "2703:78:6"
								}
							],
							"scope": 2064,
							"src": "187:2596:6",
							"usedErrors": []
						}
					],
					"src": "91:2693:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2584
						],
						"IERC20": [
							2063
						],
						"SafeERC20": [
							2287
						]
					},
					"id": 2288,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2065,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2288,
							"sourceUnit": 2064,
							"src": "125:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 2067,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2288,
							"sourceUnit": 2585,
							"src": "149:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2068,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2287,
							"linearizedBaseContracts": [
								2287
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2071,
									"libraryName": {
										"id": 2069,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2584,
										"src": "675:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:7",
									"typeName": {
										"id": 2070,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "803:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2082,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "833:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2085,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2074,
																			"src": "863:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2063",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2012,
																		"src": "863:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2088,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "888:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2089,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2083,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2081,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "813:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "813:86:7"
											}
										]
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "732:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2072,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "732:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "732:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "754:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:7"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:7"
									},
									"scope": 2287,
									"src": "701:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "1040:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2107,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "1070:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2110,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "1100:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2063",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2044,
																		"src": "1100:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2113,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "1129:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2114,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "1135:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2115,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "1139:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2108,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2106,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "1050:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:7"
											}
										]
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "947:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2095,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "947:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "947:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "969:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "991:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1011:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:7"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:7"
									},
									"scope": 2287,
									"src": "912:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "1519:497:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2132,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2128,
																			"src": "1768:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2140,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2287",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2287",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2138,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2142,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2126,
																					"src": "1815:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2136,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2124,
																					"src": "1784:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2063",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2022,
																				"src": "1784:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2146,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "1939:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2155,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "1969:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2063",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2032,
																		"src": "1969:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2158,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "1993:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "2002:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2153,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2151,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "1919:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:7"
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1443:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2122,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "1443:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "1443:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1465:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1490:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:7"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:7"
									},
									"scope": 2287,
									"src": "1413:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "2138:194:7",
										"statements": [
											{
												"assignments": [
													2175
												],
												"declarations": [
													{
														"constant": false,
														"id": 2175,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "2148:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2186,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2180,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2287",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2287",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2178,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2182,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "2202:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2176,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2171:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2063",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "2171:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2184,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "2213:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2248:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2191,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "2278:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2063",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2032,
																		"src": "2278:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2194,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "2302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2195,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "2311:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2189,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2063",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2187,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "2228:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:7"
											}
										]
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2062:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2165,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "2062:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "2062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2109:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:7"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:7"
									},
									"scope": 2287,
									"src": "2022:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "2454:370:7",
										"statements": [
											{
												"id": 2246,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:7",
												"statements": [
													{
														"assignments": [
															2211
														],
														"declarations": [
															{
																"constant": false,
																"id": 2211,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2246,
																"src": "2488:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2210,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2220,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2216,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2287",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2287",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2214,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2218,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "2542:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2212,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "2511:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2063",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2022,
																"src": "2511:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2222,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "2572:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "2588:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2221,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2227,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:7"
													},
													{
														"assignments": [
															2229
														],
														"declarations": [
															{
																"constant": false,
																"id": 2229,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2246,
																"src": "2653:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2228,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2233,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2230,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2211,
																"src": "2676:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2231,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "2691:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2235,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "2730:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2063",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2238,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2203,
																					"src": "2760:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2063",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2032,
																				"src": "2760:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2241,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2205,
																			"src": "2784:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2242,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "2793:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2236,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2063",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2234,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "2710:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2063_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2245,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:7"
													}
												]
											}
										]
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2378:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2201,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "2378:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "2378:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2425:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:7"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:7"
									},
									"scope": 2287,
									"src": "2338:486:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "3277:636:7",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2285,
														"src": "3626:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2257,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2267,
												"initialValue": {
													"arguments": [
														{
															"id": 2264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "3680:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2261,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "3660:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2063",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2063",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2378,
														"src": "3652:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2268,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "3735:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2284,
												"nodeType": "IfStatement",
												"src": "3731:176:7",
												"trueBody": {
													"id": 2283,
													"nodeType": "Block",
													"src": "3758:149:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2275,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2258,
																				"src": "3830:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2276,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2278,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2273,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2272,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2282,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "3236:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2063",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2250,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2063,
														"src": "3236:6:7"
													},
													"referencedDeclaration": 2063,
													"src": "3236:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2063",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "3250:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:7"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:7"
									},
									"scope": 2287,
									"src": "3207:706:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2288,
							"src": "645:3270:7",
							"usedErrors": []
						}
					],
					"src": "100:3816:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2584
						]
					},
					"id": 2585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2289,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2290,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2584,
							"linearizedBaseContracts": [
								2584
							],
							"name": "Address",
							"nameLocation": "187:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "837:311:8",
										"statements": [
											{
												"assignments": [
													2299
												],
												"declarations": [
													{
														"constant": false,
														"id": 2299,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "1034:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2300,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2293,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:8",
														"valueSize": 1
													},
													{
														"declaration": 2299,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:8",
														"valueSize": 1
													}
												],
												"id": 2301,
												"nodeType": "InlineAssembly",
												"src": "1056:61:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2302,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "1133:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2305,
												"nodeType": "Return",
												"src": "1126:15:8"
											}
										]
									},
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "791:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:8"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "831:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:8"
									},
									"scope": 2584,
									"src": "771:377:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "2136:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2318,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2584",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2584",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2316,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2321,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "2179:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:8"
											},
											{
												"assignments": [
													2327,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "2231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2334,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2328,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "2249:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2330,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "2271:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "2300:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:8"
											}
										]
									},
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "2084:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "2111:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:8"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:8"
									},
									"scope": 2584,
									"src": "2065:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "3208:84:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "3238:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "3246:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2351,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2358,
															2378
														],
														"referencedDeclaration": 2378,
														"src": "3225:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2350,
												"id": 2356,
												"nodeType": "Return",
												"src": "3218:67:8"
											}
										]
									},
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "3141:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "3157:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:8"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "3194:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:8"
									},
									"scope": 2584,
									"src": "3119:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "3661:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "3700:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "3708:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2374,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "3717:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2370,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2398,
															2448
														],
														"referencedDeclaration": 2448,
														"src": "3678:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2376,
												"nodeType": "Return",
												"src": "3671:59:8"
											}
										]
									},
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "3545:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "3569:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "3596:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:8"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "3647:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:8"
									},
									"scope": 2584,
									"src": "3514:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "4242:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2391,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "4281:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "4289:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2393,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "4295:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2390,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2398,
															2448
														],
														"referencedDeclaration": 2448,
														"src": "4259:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2389,
												"id": 2396,
												"nodeType": "Return",
												"src": "4252:94:8"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "4139:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "4163:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "4190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:8"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "4228:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:8"
									},
									"scope": 2584,
									"src": "4099:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "4780:320:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2415,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2584",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2584",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2413,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2418,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "4823:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2425,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "4900:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2424,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "4889:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:8"
											},
											{
												"assignments": [
													2431,
													2433
												],
												"declarations": [
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2447,
														"src": "4953:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2433,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2447,
														"src": "4967:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2432,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"arguments": [
														{
															"id": 2438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "5020:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2434,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "4994:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2436,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "5013:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2442,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "5059:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2443,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "5068:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2444,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "5080:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2441,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "5042:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2411,
												"id": 2446,
												"nodeType": "Return",
												"src": "5035:58:8"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4641:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4665:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4692:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4715:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:8"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "4766:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:8"
									},
									"scope": 2584,
									"src": "4601:499:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "5377:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "5413:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "5421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2458,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2465,
															2500
														],
														"referencedDeclaration": 2500,
														"src": "5394:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2457,
												"id": 2463,
												"nodeType": "Return",
												"src": "5387:80:8"
											}
										]
									},
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5305:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5321:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:8"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5363:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:8"
									},
									"scope": 2584,
									"src": "5277:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "5816:228:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2479,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "5845:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2478,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "5834:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:8"
											},
											{
												"assignments": [
													2485,
													2487
												],
												"declarations": [
													{
														"constant": false,
														"id": 2485,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "5905:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2484,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2487,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "5919:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2486,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2492,
												"initialValue": {
													"arguments": [
														{
															"id": 2490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "5964:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "5946:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "6003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "6012:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "6024:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2493,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "5986:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2476,
												"id": 2498,
												"nodeType": "Return",
												"src": "5979:58:8"
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "5695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "5719:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "5746:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:8"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "5802:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:8"
									},
									"scope": 2584,
									"src": "5658:386:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "6320:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "6358:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2505,
															"src": "6366:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2510,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2517,
															2552
														],
														"referencedDeclaration": 2552,
														"src": "6337:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2509,
												"id": 2515,
												"nodeType": "Return",
												"src": "6330:84:8"
											}
										]
									},
									"documentation": {
										"id": 2501,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "6253:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "6269:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:8"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "6306:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:8"
									},
									"scope": 2584,
									"src": "6223:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "6762:232:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2531,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "6791:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2530,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "6780:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:8"
											},
											{
												"assignments": [
													2537,
													2539
												],
												"declarations": [
													{
														"constant": false,
														"id": 2537,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2551,
														"src": "6853:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2551,
														"src": "6867:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2538,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2544,
												"initialValue": {
													"arguments": [
														{
															"id": 2542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "6894:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2537,
															"src": "6953:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2547,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "6962:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2548,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "6974:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2545,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "6936:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2528,
												"id": 2550,
												"nodeType": "Return",
												"src": "6929:58:8"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "6646:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "6670:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "6697:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:8"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "6748:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:8"
									},
									"scope": 2584,
									"src": "6607:387:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "7374:532:8",
										"statements": [
											{
												"condition": {
													"id": 2564,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2555,
													"src": "7388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2580,
													"nodeType": "Block",
													"src": "7445:455:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2568,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2557,
																		"src": "7529:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2578,
																"nodeType": "Block",
																"src": "7837:53:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2575,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "7862:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2574,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2577,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:8"
																	}
																]
															},
															"id": 2579,
															"nodeType": "IfStatement",
															"src": "7525:365:8",
															"trueBody": {
																"id": 2573,
																"nodeType": "Block",
																"src": "7552:279:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:8"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2557,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2557,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 2572,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 2581,
												"nodeType": "IfStatement",
												"src": "7384:516:8",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "7397:42:8",
													"statements": [
														{
															"expression": {
																"id": 2565,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "7418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2563,
															"id": 2566,
															"nodeType": "Return",
															"src": "7411:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:8",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "7249:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "7271:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "7304:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:8"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "7360:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:8"
									},
									"scope": 2584,
									"src": "7214:692:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2585,
							"src": "179:7729:8",
							"usedErrors": []
						}
					],
					"src": "86:7823:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2606
						]
					},
					"id": 2607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2587,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2606,
							"linearizedBaseContracts": [
								2606
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2592,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2591,
												"id": 2594,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 2606,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2601,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2600,
												"id": 2603,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 2606,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2607,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2630
						],
						"IERC165": [
							2642
						]
					},
					"id": 2631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2631,
							"sourceUnit": 2643,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2611,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2642,
										"src": "754:7:10"
									},
									"id": 2612,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2610,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2630,
							"linearizedBaseContracts": [
								2630,
								2642
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2641
									],
									"body": {
										"id": 2628,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2621,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2623,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2642_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2642_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2622,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2642",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2620,
												"id": 2627,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2617,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2614,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 2630,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2631,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2642
						]
					},
					"id": 2643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2633,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2642,
							"linearizedBaseContracts": [
								2642
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2634,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2635,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 2642,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2643,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2954
						]
					},
					"id": 2955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2644,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2645,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2954,
							"linearizedBaseContracts": [
								2954
							],
							"name": "SafeMath",
							"nameLocation": "475:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "702:140:12",
										"statements": [
											{
												"id": 2675,
												"nodeType": "UncheckedBlock",
												"src": "712:124:12",
												"statements": [
													{
														"assignments": [
															2658
														],
														"declarations": [
															{
																"constant": false,
																"id": 2658,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2675,
																"src": "736:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2657,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2662,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2659,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2660,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "752:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2663,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2658,
																"src": "771:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2664,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "767:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2656,
															"id": 2669,
															"nodeType": "Return",
															"src": "778:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2672,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "823:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2673,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2656,
														"id": 2674,
														"nodeType": "Return",
														"src": "809:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "642:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "653:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:12"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "687:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "693:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:12"
									},
									"scope": 2954,
									"src": "626:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "1064:113:12",
										"statements": [
											{
												"id": 2703,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2689,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "1102:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2690,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "1106:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2696,
														"nodeType": "IfStatement",
														"src": "1098:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2694,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2688,
															"id": 2695,
															"nodeType": "Return",
															"src": "1109:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2698,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2680,
																		"src": "1154:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2699,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2682,
																		"src": "1158:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2701,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2688,
														"id": 2702,
														"nodeType": "Return",
														"src": "1140:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1004:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1015:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:12"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1049:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "1055:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:12"
									},
									"scope": 2954,
									"src": "988:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2746,
										"nodeType": "Block",
										"src": "1401:417:12",
										"statements": [
											{
												"id": 2745,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2717,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "1669:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "1665:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2722,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2716,
															"id": 2723,
															"nodeType": "Return",
															"src": "1677:16:12"
														}
													},
													{
														"assignments": [
															2726
														],
														"declarations": [
															{
																"constant": false,
																"id": 2726,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2745,
																"src": "1707:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2730,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2727,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "1719:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2728,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "1723:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2731,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "1742:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2732,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "1746:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2734,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "1751:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2740,
														"nodeType": "IfStatement",
														"src": "1738:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2716,
															"id": 2739,
															"nodeType": "Return",
															"src": "1754:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2742,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "1799:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2743,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2716,
														"id": 2744,
														"nodeType": "Return",
														"src": "1785:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1341:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1352:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:12"
									},
									"returnParameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1386:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "1392:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:12"
									},
									"scope": 2954,
									"src": "1325:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "2043:114:12",
										"statements": [
											{
												"id": 2773,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2759,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2752,
																"src": "2081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "2077:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2764,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2758,
															"id": 2765,
															"nodeType": "Return",
															"src": "2089:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2750,
																		"src": "2134:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2769,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2752,
																		"src": "2138:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2771,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2758,
														"id": 2772,
														"nodeType": "Return",
														"src": "2120:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2748,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "1983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "1994:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:12"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "2028:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "2034:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:12"
									},
									"scope": 2954,
									"src": "1967:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2802,
										"nodeType": "Block",
										"src": "2392:114:12",
										"statements": [
											{
												"id": 2801,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2787,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2780,
																"src": "2430:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2794,
														"nodeType": "IfStatement",
														"src": "2426:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2792,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2786,
															"id": 2793,
															"nodeType": "Return",
															"src": "2438:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2796,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "2483:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2797,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "2487:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2799,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2786,
														"id": 2800,
														"nodeType": "Return",
														"src": "2469:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2332:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:12"
									},
									"returnParameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2377:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2383:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:12"
									},
									"scope": 2954,
									"src": "2316:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "2808:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "2825:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "2829:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2812,
												"id": 2816,
												"nodeType": "Return",
												"src": "2818:12:12"
											}
										]
									},
									"documentation": {
										"id": 2804,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "2754:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "2765:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:12"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "2799:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:12"
									},
									"scope": 2954,
									"src": "2741:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "3175:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2828,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2821,
														"src": "3192:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2829,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2823,
														"src": "3196:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2827,
												"id": 2831,
												"nodeType": "Return",
												"src": "3185:12:12"
											}
										]
									},
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3121:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3132:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:12"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "3166:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:12"
									},
									"scope": 2954,
									"src": "3108:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "3518:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2843,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "3535:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2844,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "3539:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2842,
												"id": 2846,
												"nodeType": "Return",
												"src": "3528:12:12"
											}
										]
									},
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "3464:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "3475:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:12"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "3509:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:12"
									},
									"scope": 2954,
									"src": "3451:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2862,
										"nodeType": "Block",
										"src": "3903:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2858,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "3920:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2859,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "3924:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2857,
												"id": 2861,
												"nodeType": "Return",
												"src": "3913:12:12"
											}
										]
									},
									"documentation": {
										"id": 2849,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "3849:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "3860:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:12"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "3894:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:12"
									},
									"scope": 2954,
									"src": "3836:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "4452:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2873,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2866,
														"src": "4469:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2874,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2868,
														"src": "4473:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2872,
												"id": 2876,
												"nodeType": "Return",
												"src": "4462:12:12"
											}
										]
									},
									"documentation": {
										"id": 2864,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "4398:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "4409:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:12"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "4443:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:12"
									},
									"scope": 2954,
									"src": "4385:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2902,
										"nodeType": "Block",
										"src": "5070:106:12",
										"statements": [
											{
												"id": 2901,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2891,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2883,
																		"src": "5112:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2892,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2881,
																		"src": "5117:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2894,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "5120:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2890,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2896,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "5154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "5158:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2889,
														"id": 2900,
														"nodeType": "Return",
														"src": "5147:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "4967:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "4986:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "5005:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:12"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "5061:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:12"
									},
									"scope": 2954,
									"src": "4945:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "5785:105:12",
										"statements": [
											{
												"id": 2926,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2908,
																		"src": "5827:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2919,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2910,
																	"src": "5834:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2915,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2921,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2922,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2906,
																"src": "5868:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2923,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2908,
																"src": "5872:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2914,
														"id": 2925,
														"nodeType": "Return",
														"src": "5861:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2904,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "5682:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "5701:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "5720:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:12"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "5776:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:12"
									},
									"scope": 2954,
									"src": "5660:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "6661:105:12",
										"statements": [
											{
												"id": 2951,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2941,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2933,
																		"src": "6703:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2944,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2935,
																	"src": "6710:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2940,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2946,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2947,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "6744:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2948,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "6748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2939,
														"id": 2950,
														"nodeType": "Return",
														"src": "6737:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2929,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "6558:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "6577:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "6596:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:12"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "6652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:12"
									},
									"scope": 2954,
									"src": "6536:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2955,
							"src": "467:6301:12",
							"usedErrors": []
						}
					],
					"src": "92:6677:12"
				},
				"id": 12
			}
		}
	}
}
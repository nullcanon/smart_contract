{
	"id": "f907ae2d9c9fcc9a18a791c307bac71e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/ERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\ncontract BeeItems is  ERC1155 , Ownable{\r\n\r\n    uint256 public tokenSupply;\r\n\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n    }\r\n\r\n    function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r\n            ids[i - tokenSupply] = i;\r\n            amounts[i - tokenSupply] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n        tokenSupply = tokenSupply + idsNumber;\r\n    }\r\n\r\n    function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i - start] = i;\r\n            amounts[i - start] = 1;\r\n        }\r\n        safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\");\r\n    }\r\n\r\n\r\n    function setURI(string memory newuri) public onlyOwner{\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n        tokenSupply = tokenSupply + ids.length;\r\n    }\r\n\r\n    function getTokenSupply() public view returns (uint256) {\r\n        return tokenSupply;\r\n    }\r\n\r\n    function brun(\r\n        address account,\r\n        uint256 id,\r\n        uint256 value) public {\r\n\r\n        require(\r\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        _burn(account, id, value);\r\n        --tokenSupply;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/ERC1155.sol": {
				"BeeItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "brun",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "mintBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"nft/ERC1155.sol\":269:342  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_10\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  tag_11\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  jump\t// in\ntag_10:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_12\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  jump(tag_31)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_16\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\ntag_17:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_23\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_26)\ntag_23:\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\n    /* \"#utility.yul\":14:394   */\ntag_21:\n    /* \"#utility.yul\":99:100   */\n  0x02\n    /* \"#utility.yul\":89:101   */\n  dup2\n  div\n    /* \"#utility.yul\":146:147   */\n  0x01\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:159   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:159   */\ntag_33:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:229   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:229   */\ntag_34:\n  pop\n    /* \"#utility.yul\":69:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"nft/ERC1155.sol\":184:2031  contract BeeItems is  ERC1155 , Ownable{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ac14e6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xad974f4c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x71ac14e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7824407f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9416308e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0e89341c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x092f2dbf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n    tag_6:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n    tag_8:\n      tag_36\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_10:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_36\n      tag_65\n      jump\t// in\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n    tag_12:\n      tag_36\n      tag_67\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"nft/ERC1155.sol\":232:258  uint256 public tokenSupply */\n    tag_13:\n      tag_24\n      tag_70\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r... */\n    tag_15:\n      tag_36\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      tag_36\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {\r... */\n    tag_17:\n      tag_24\n      tag_85\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_30\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_19:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_36\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_33:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_105\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      tag_107\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1507:1518  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1506  super.supportsInterface */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_104:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_110\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_112\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_113:\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      tag_117\n        /* \"nft/ERC1155.sol\":1323:1329  newuri */\n      dup2\n        /* \"nft/ERC1155.sol\":1315:1322  _setURI */\n      tag_118\n        /* \"nft/ERC1155.sol\":1315:1330  _setURI(newuri) */\n      jump\t// in\n    tag_117:\n        /* \"nft/ERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n    tag_43:\n        /* \"nft/ERC1155.sol\":1834:1846  _msgSender() */\n      tag_120\n        /* \"nft/ERC1155.sol\":1834:1844  _msgSender */\n      tag_111\n        /* \"nft/ERC1155.sol\":1834:1846  _msgSender() */\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      and\n        /* \"nft/ERC1155.sol\":1823:1830  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":1823:1846  account == _msgSender() */\n      and\n      eq\n        /* \"nft/ERC1155.sol\":1823:1889  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_122\n      jumpi\n      pop\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n      tag_122\n        /* \"nft/ERC1155.sol\":1867:1874  account */\n      dup4\n        /* \"nft/ERC1155.sol\":1876:1888  _msgSender() */\n      tag_88\n        /* \"nft/ERC1155.sol\":1876:1886  _msgSender */\n      tag_111\n        /* \"nft/ERC1155.sol\":1876:1888  _msgSender() */\n      jump\t// in\n        /* \"nft/ERC1155.sol\":1850:1889  isApprovedForAll(account, _msgSender()) */\n    tag_122:\n        /* \"nft/ERC1155.sol\":1801:1958  require(\r... */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      tag_127\n        /* \"nft/ERC1155.sol\":1977:1984  account */\n      dup4\n        /* \"nft/ERC1155.sol\":1986:1988  id */\n      dup4\n        /* \"nft/ERC1155.sol\":1990:1995  value */\n      dup4\n        /* \"nft/ERC1155.sol\":1971:1976  _burn */\n      tag_128\n        /* \"nft/ERC1155.sol\":1971:1996  _burn(account, id, value) */\n      jump\t// in\n    tag_127:\n        /* \"nft/ERC1155.sol\":2009:2020  tokenSupply */\n      0x04\n      0x00\n        /* \"nft/ERC1155.sol\":2007:2020  --tokenSupply */\n      dup2\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1695:2028  function brun(\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n    tag_53:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_139\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_140\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_141:\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      tag_144\n        /* \"nft/ERC1155.sol\":1506:1508  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1510:1513  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1515:1522  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1524:1528  data */\n      dup5\n        /* \"nft/ERC1155.sol\":1495:1505  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"nft/ERC1155.sol\":1568:1571  ids */\n      dup3\n        /* \"nft/ERC1155.sol\":1568:1578  ids.length */\n      mload\n        /* \"nft/ERC1155.sol\":1554:1565  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1554:1578  tokenSupply + ids.length */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"nft/ERC1155.sol\":1540:1551  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":1540:1578  tokenSupply = tokenSupply + ids.length */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_57:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4288  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      jump\t// in\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4274  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_151\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_151\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4327  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_155\n      jump\t// in\n    tag_153:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_161\n      jump\t// in\n    tag_159:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_162:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_167\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_169\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_27\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_170:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_171\n      dup2\n      tag_172\n      jump\t// in\n    tag_171:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_164)\n    tag_165:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_174\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_176:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_179\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_180\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_179:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_182\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_183\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_184:\n        /* \"nft/ERC1155.sol\":425:445  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":462:471  idsNumber */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":448:472  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_187:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_188:\n      pop\n        /* \"nft/ERC1155.sol\":425:472  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":483:507  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":524:533  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":510:534  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_189:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_190:\n      pop\n        /* \"nft/ERC1155.sol\":562:573  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":483:534  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      swap2\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n    tag_191:\n        /* \"nft/ERC1155.sol\":592:603  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_194\n      swap1\n        /* \"nft/ERC1155.sol\":580:589  idsNumber */\n      dup6\n        /* \"nft/ERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_147\n      jump\t// in\n    tag_194:\n        /* \"nft/ERC1155.sol\":575:576  i */\n      dup2\n        /* \"nft/ERC1155.sol\":575:604  i < (idsNumber + tokenSupply) */\n      lt\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n      iszero\n      tag_192\n      jumpi\n        /* \"nft/ERC1155.sol\":649:650  i */\n      dup1\n        /* \"nft/ERC1155.sol\":626:629  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":634:645  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":630:631  i */\n      dup4\n        /* \"nft/ERC1155.sol\":630:645  i - tokenSupply */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"nft/ERC1155.sol\":626:646  ids[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_197:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft/ERC1155.sol\":626:650  ids[i - tokenSupply] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":692:693  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":665:672  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":677:688  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":673:674  i */\n      dup4\n        /* \"nft/ERC1155.sol\":673:688  i - tokenSupply */\n      tag_198\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_198:\n        /* \"nft/ERC1155.sol\":665:689  amounts[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_199:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":665:693  amounts[i - tokenSupply] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":606:609  i++ */\n      dup1\n      tag_200\n      dup2\n      tag_172\n      jump\t// in\n    tag_200:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r... */\n      jump(tag_191)\n    tag_192:\n      pop\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_201\n        /* \"nft/ERC1155.sol\":726:736  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":738:741  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":743:750  amounts */\n      dup4\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":715:725  _mintBatch */\n      tag_145\n        /* \"nft/ERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_201:\n        /* \"nft/ERC1155.sol\":794:803  idsNumber */\n      dup3\n        /* \"nft/ERC1155.sol\":780:791  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":780:803  tokenSupply + idsNumber */\n      tag_202\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"nft/ERC1155.sol\":766:777  tokenSupply */\n      0x04\n        /* \"nft/ERC1155.sol\":766:803  tokenSupply = tokenSupply + idsNumber */\n      sstore\n      pop\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r... */\n      jump\t// out\n        /* \"nft/ERC1155.sol\":232:258  uint256 public tokenSupply */\n    tag_70:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_203:\n      swap1\n      jump\t// out\n        /* \"nft/ERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r... */\n    tag_79:\n        /* \"nft/ERC1155.sol\":911:931  uint256[] memory ids */\n      0x00\n        /* \"nft/ERC1155.sol\":948:957  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":934:958  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_205\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_205:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_206:\n      pop\n        /* \"nft/ERC1155.sol\":911:958  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":969:993  uint256[] memory amounts */\n      0x00\n        /* \"nft/ERC1155.sol\":1010:1019  idsNumber */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"nft/ERC1155.sol\":996:1020  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_207:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_208:\n      pop\n        /* \"nft/ERC1155.sol\":969:1020  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/ERC1155.sol\":1048:1053  start */\n      dup5\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n    tag_209:\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_212\n        /* \"nft/ERC1155.sol\":1072:1077  start */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1069  idsNumber */\n      dup7\n        /* \"nft/ERC1155.sol\":1060:1077  idsNumber + start */\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"nft/ERC1155.sol\":1055:1056  i */\n      dup2\n        /* \"nft/ERC1155.sol\":1055:1078  i < (idsNumber + start) */\n      lt\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n      iszero\n      tag_210\n      jumpi\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup1\n        /* \"nft/ERC1155.sol\":1100:1103  ids */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_213\n        /* \"nft/ERC1155.sol\":1108:1113  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1117:1118  i */\n      dup4\n        /* \"nft/ERC1155.sol\":1104:1113  i - start */\n      tag_196\n      jump\t// in\n    tag_213:\n        /* \"nft/ERC1155.sol\":1100:1114  ids[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_214:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1100:1118  ids[i - start] = i */\n      mstore\n        /* \"nft/ERC1155.sol\":1154:1155  1 */\n      0x01\n        /* \"nft/ERC1155.sol\":1133:1140  amounts */\n      dup3\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_215\n        /* \"nft/ERC1155.sol\":1145:1150  start */\n      dup9\n        /* \"nft/ERC1155.sol\":1141:1142  i */\n      dup5\n        /* \"nft/ERC1155.sol\":1141:1150  i - start */\n      tag_196\n      jump\t// in\n    tag_215:\n        /* \"nft/ERC1155.sol\":1133:1151  amounts[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_216:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/ERC1155.sol\":1133:1155  amounts[i - start] = 1 */\n      mstore\n        /* \"nft/ERC1155.sol\":1080:1083  i++ */\n      dup1\n      tag_217\n      dup2\n      tag_172\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n      pop\n        /* \"nft/ERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {\r... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      tag_156\n        /* \"nft/ERC1155.sol\":1199:1209  msg.sender */\n      caller\n        /* \"nft/ERC1155.sol\":1211:1213  to */\n      dup5\n        /* \"nft/ERC1155.sol\":1215:1218  ids */\n      dup5\n        /* \"nft/ERC1155.sol\":1220:1227  amounts */\n      dup5\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nft/ERC1155.sol\":1177:1198  safeBatchTransferFrom */\n      tag_57\n        /* \"nft/ERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_83:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_220\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      tag_221\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3254  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_222\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_220:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {\r... */\n    tag_85:\n        /* \"nft/ERC1155.sol\":1668:1679  tokenSupply */\n      sload(0x04)\n        /* \"nft/ERC1155.sol\":1594:1687  function getTokenSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_95:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      tag_226\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3802  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3788  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_228\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      tag_88\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3841  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_228:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_230:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_233\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_235\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_236\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_242\n      jump\t// in\n    tag_240:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_180\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_108:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup2\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n      dup1\n      mload\n      tag_220\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n      0x02\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_248\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10248:10878  function _burn(... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10370:10388  from != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10362:10428  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_252\n      jump\t// in\n    tag_250:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10439:10455  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10458:10470  _msgSender() */\n      tag_253\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10458:10468  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10458:10470  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10439:10470  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_254\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10502:10510  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10512:10516  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10526:10527  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10551  _asSingletonArray(id) */\n      tag_255\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10548:10550  id */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10547  _asSingletonArray */\n      tag_256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10551  _asSingletonArray(id) */\n      jump\t// in\n    tag_255:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10578  _asSingletonArray(amount) */\n      tag_257\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10571:10577  amount */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10570  _asSingletonArray */\n      tag_256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10578  _asSingletonArray(amount) */\n      jump\t// in\n    tag_257:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10501  _beforeTokenTransfer */\n      tag_303\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      jump\t// in\n    tag_254:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10594:10613  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10616:10629  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10616:10635  _balances[id][from] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10653:10674  fromBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10645:10715  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_261\n      jump\t// in\n    tag_259:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10758  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10762  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10768  _balances[id][from] */\n      dup1\n      dup11\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10771:10791  fromBalance - amount */\n      dup8\n      dup7\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10791  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10768  _balances[id][from] */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      dup6\n      and\n      swap1\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap1\n      tag_262\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10759:10761  id */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10785:10791  amount */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10248:10878  function _burn(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9293:10008  function _mintBatch(... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9465:9481  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_267\n      jump\t// in\n    tag_265:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9558  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9565  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9540  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9547  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9565  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9529:9610  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_270\n      jump\t// in\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9621:9637  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9640:9652  _msgSender() */\n      tag_271\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9640:9650  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9640:9652  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9621:9652  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9663:9729  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_272\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9684:9692  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9702:9703  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9706:9708  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9710:9713  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9715:9722  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9724:9728  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9663:9683  _beforeTokenTransfer */\n      tag_303\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9663:9729  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_272:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9745:9754  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_273:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9767  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9774  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9761  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9774  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9827  amounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9828:9829  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9830  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_276\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_276:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9804  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9808  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9809:9810  i */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9811  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_277:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9813:9815  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9830  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_278\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_278:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9776:9779  i++ */\n      dup2\n      swap1\n      pop\n      tag_279\n      dup2\n      tag_172\n      jump\t// in\n    tag_279:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_273)\n    tag_274:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9892:9894  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9888:9889  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9870:9878  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9896:9899  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9901:9908  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9956:9964  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9974:9975  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9978:9980  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9982:9985  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9987:9994  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9996:10000  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:9955  _doSafeBatchTransferAcceptanceCheck */\n      tag_283\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_270\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_289\n      jump\t// in\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      tag_290\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6463  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      jump\t// in\n    tag_290:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6465  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_291\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6497:6505  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6507:6511  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6513:6515  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6517:6520  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6529  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6531:6535  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6496  _beforeTokenTransfer */\n      tag_303\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_291:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6552:6561  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_292:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_295\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_295:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_296\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_296:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_299\n      jump\t// in\n    tag_297:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_300\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_300:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_301\n      swap1\n      tag_172\n      jump\t// in\n    tag_301:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_292)\n    tag_293:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_302\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_303\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_283\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_303:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_180:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_308\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap1\n      tag_309\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup6\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      tag_35\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_289\n      jump\t// in\n    tag_311:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5191  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      tag_313\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5204  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      jump\t// in\n    tag_313:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5206  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_314\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5238:5246  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_315\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_316\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n    tag_316:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5308:5312  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5237  _beforeTokenTransfer */\n      tag_303\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_314:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_299\n      jump\t// in\n    tag_317:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_319\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_147\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5621:5623  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5615:5619  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5605:5613  operator */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5625:5627  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5629:5635  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_321\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_322\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_321:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_256:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_326\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_326:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_283:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      tag_329\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14516  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      and\n      tag_330\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      jump\t// in\n    tag_329:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_332\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_333\n      jump\t// in\n    tag_332:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_334:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_335\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_336\n      swap2\n      dup2\n      add\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      0x01\n    tag_335:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_338\n      jumpi\n      tag_342\n      tag_343\n      jump\t// in\n    tag_342:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_341\n      jumpi\n      pop\n      tag_344\n      tag_345\n      jump\t// in\n    tag_344:\n      dup1\n      tag_346\n      jumpi\n      pop\n      jump(tag_340)\n    tag_346:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_341:\n      pop\n    tag_340:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_349\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_338:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_353\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_322:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      tag_355\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13760  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      and\n      tag_330\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      jump\t// in\n    tag_355:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_357\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_358\n      jump\t// in\n    tag_357:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_359:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_360\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_361\n      swap2\n      dup2\n      add\n      swap1\n      tag_337\n      jump\t// in\n    tag_361:\n      0x01\n    tag_360:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_362\n      jumpi\n      tag_342\n      tag_343\n      jump\t// in\n    tag_362:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_353\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_330:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    tag_248:\n      dup3\n      dup1\n      sload\n      tag_375\n      swap1\n      tag_133\n      jump\t// in\n    tag_375:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_377\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_380)\n    tag_377:\n      dup3\n      0x1f\n      lt\n      tag_378\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_380)\n    tag_378:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_380\n      jumpi\n      swap2\n      dup3\n      add\n    tag_379:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_380\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_379)\n    tag_380:\n      pop\n      tag_381\n      swap3\n      swap2\n      pop\n      tag_382\n      jump\t// in\n    tag_381:\n      pop\n      swap1\n      jump\t// out\n    tag_382:\n    tag_383:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_381\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_383)\n        /* \"#utility.yul\":14:484   */\n    tag_386:\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":103:133   */\n      gt\n        /* \"#utility.yul\":100:102   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":136:154   */\n      tag_389\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":185:187   */\n      0x40\n        /* \"#utility.yul\":179:188   */\n      mload\n        /* \"#utility.yul\":197:266   */\n      tag_391\n        /* \"#utility.yul\":254:256   */\n      0x1f\n        /* \"#utility.yul\":233:248   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":229:258   */\n      and\n        /* \"#utility.yul\":260:264   */\n      0x20\n        /* \"#utility.yul\":225:265   */\n      add\n        /* \"#utility.yul\":179:188   */\n      dup3\n        /* \"#utility.yul\":197:266   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":284:290   */\n      dup1\n        /* \"#utility.yul\":275:290   */\n      swap2\n      pop\n        /* \"#utility.yul\":314:320   */\n      dup4\n        /* \"#utility.yul\":306:312   */\n      dup2\n        /* \"#utility.yul\":299:321   */\n      mstore\n        /* \"#utility.yul\":354:357   */\n      dup5\n        /* \"#utility.yul\":345:351   */\n      dup5\n        /* \"#utility.yul\":340:343   */\n      dup5\n        /* \"#utility.yul\":336:352   */\n      add\n        /* \"#utility.yul\":333:358   */\n      gt\n        /* \"#utility.yul\":330:332   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":371:372   */\n      0x00\n        /* \"#utility.yul\":368:369   */\n      dup1\n        /* \"#utility.yul\":361:373   */\n      revert\n        /* \"#utility.yul\":330:332   */\n    tag_393:\n        /* \"#utility.yul\":421:427   */\n      dup4\n        /* \"#utility.yul\":416:419   */\n      dup4\n        /* \"#utility.yul\":409:413   */\n      0x20\n        /* \"#utility.yul\":401:407   */\n      dup4\n        /* \"#utility.yul\":397:414   */\n      add\n        /* \"#utility.yul\":384:428   */\n      calldatacopy\n        /* \"#utility.yul\":476:477   */\n      0x00\n        /* \"#utility.yul\":469:473   */\n      0x20\n        /* \"#utility.yul\":460:466   */\n      dup6\n        /* \"#utility.yul\":452:458   */\n      dup4\n        /* \"#utility.yul\":448:467   */\n      add\n        /* \"#utility.yul\":444:474   */\n      add\n        /* \"#utility.yul\":437:478   */\n      mstore\n      pop\n        /* \"#utility.yul\":90:484   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:664   */\n    tag_394:\n        /* \"#utility.yul\":559:579   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":608:639   */\n      dup2\n      and\n        /* \"#utility.yul\":598:640   */\n      dup2\n      eq\n        /* \"#utility.yul\":588:590   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":654:655   */\n      0x00\n        /* \"#utility.yul\":651:652   */\n      dup1\n        /* \"#utility.yul\":644:656   */\n      revert\n        /* \"#utility.yul\":669:1437   */\n    tag_397:\n      0x00\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:779   */\n      0x1f\n        /* \"#utility.yul\":767:773   */\n      dup4\n        /* \"#utility.yul\":763:780   */\n      add\n        /* \"#utility.yul\":759:786   */\n      slt\n        /* \"#utility.yul\":749:751   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":804:809   */\n      dup1\n        /* \"#utility.yul\":797:802   */\n      dup2\n        /* \"#utility.yul\":790:810   */\n      revert\n        /* \"#utility.yul\":749:751   */\n    tag_399:\n        /* \"#utility.yul\":844:850   */\n      dup2\n        /* \"#utility.yul\":831:851   */\n      calldataload\n        /* \"#utility.yul\":870:874   */\n      0x20\n        /* \"#utility.yul\":893:942   */\n      tag_400\n        /* \"#utility.yul\":939:941   */\n      dup3\n        /* \"#utility.yul\":893:942   */\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":971:973   */\n      0x40\n        /* \"#utility.yul\":965:974   */\n      mload\n        /* \"#utility.yul\":983:1014   */\n      tag_402\n        /* \"#utility.yul\":1011:1013   */\n      dup3\n        /* \"#utility.yul\":1003:1009   */\n      dup3\n        /* \"#utility.yul\":983:1014   */\n      tag_392\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1049:1067   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1083:1098   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1118:1133   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1164:1175   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":1152:1176   */\n      dup8\n      add\n        /* \"#utility.yul\":1148:1181   */\n      dup5\n      add\n        /* \"#utility.yul\":1145:1187   */\n      dup9\n      lt\n        /* \"#utility.yul\":1142:1144   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1204:1209   */\n      dup6\n        /* \"#utility.yul\":1197:1202   */\n      dup7\n        /* \"#utility.yul\":1190:1210   */\n      revert\n        /* \"#utility.yul\":1142:1144   */\n    tag_403:\n        /* \"#utility.yul\":1230:1235   */\n      dup6\n        /* \"#utility.yul\":1244:1407   */\n    tag_404:\n        /* \"#utility.yul\":1258:1260   */\n      dup6\n        /* \"#utility.yul\":1255:1256   */\n      dup2\n        /* \"#utility.yul\":1252:1261   */\n      lt\n        /* \"#utility.yul\":1244:1407   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1315:1332   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1303:1333   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1353:1365   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1385:1397   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1276:1277   */\n      0x01\n        /* \"#utility.yul\":1269:1278   */\n      add\n        /* \"#utility.yul\":1244:1407   */\n      jump(tag_404)\n    tag_406:\n      pop\n        /* \"#utility.yul\":1425:1431   */\n      swap1\n      swap8\n        /* \"#utility.yul\":739:1437   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1442:1674   */\n    tag_407:\n      0x00\n        /* \"#utility.yul\":1539:1542   */\n      dup3\n        /* \"#utility.yul\":1532:1536   */\n      0x1f\n        /* \"#utility.yul\":1524:1530   */\n      dup4\n        /* \"#utility.yul\":1520:1537   */\n      add\n        /* \"#utility.yul\":1516:1543   */\n      slt\n        /* \"#utility.yul\":1506:1508   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":1561:1566   */\n      dup1\n        /* \"#utility.yul\":1554:1559   */\n      dup2\n        /* \"#utility.yul\":1547:1567   */\n      revert\n        /* \"#utility.yul\":1506:1508   */\n    tag_409:\n        /* \"#utility.yul\":1587:1668   */\n      tag_410\n        /* \"#utility.yul\":1664:1667   */\n      dup4\n        /* \"#utility.yul\":1655:1661   */\n      dup4\n        /* \"#utility.yul\":1642:1662   */\n      calldataload\n        /* \"#utility.yul\":1635:1639   */\n      0x20\n        /* \"#utility.yul\":1627:1633   */\n      dup6\n        /* \"#utility.yul\":1623:1640   */\n      add\n        /* \"#utility.yul\":1587:1668   */\n      tag_386\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1578:1668   */\n      swap4\n        /* \"#utility.yul\":1496:1674   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1679:1877   */\n    tag_98:\n      0x00\n        /* \"#utility.yul\":1791:1793   */\n      0x20\n        /* \"#utility.yul\":1779:1788   */\n      dup3\n        /* \"#utility.yul\":1770:1777   */\n      dup5\n        /* \"#utility.yul\":1766:1789   */\n      sub\n        /* \"#utility.yul\":1762:1794   */\n      slt\n        /* \"#utility.yul\":1759:1761   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1812:1818   */\n      dup1\n        /* \"#utility.yul\":1804:1810   */\n      dup2\n        /* \"#utility.yul\":1797:1819   */\n      revert\n        /* \"#utility.yul\":1759:1761   */\n    tag_412:\n        /* \"#utility.yul\":1840:1871   */\n      tag_410\n        /* \"#utility.yul\":1861:1870   */\n      dup3\n        /* \"#utility.yul\":1840:1871   */\n      tag_394\n      jump\t// in\n        /* \"#utility.yul\":1882:2156   */\n    tag_89:\n      0x00\n      dup1\n        /* \"#utility.yul\":2011:2013   */\n      0x40\n        /* \"#utility.yul\":1999:2008   */\n      dup4\n        /* \"#utility.yul\":1990:1997   */\n      dup6\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:1981   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2032:2038   */\n      dup1\n        /* \"#utility.yul\":2024:2030   */\n      dup2\n        /* \"#utility.yul\":2017:2039   */\n      revert\n        /* \"#utility.yul\":1979:1981   */\n    tag_415:\n        /* \"#utility.yul\":2060:2091   */\n      tag_416\n        /* \"#utility.yul\":2081:2090   */\n      dup4\n        /* \"#utility.yul\":2060:2091   */\n      tag_394\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2050:2091   */\n      swap2\n      pop\n        /* \"#utility.yul\":2110:2150   */\n      tag_417\n        /* \"#utility.yul\":2146:2148   */\n      0x20\n        /* \"#utility.yul\":2135:2144   */\n      dup5\n        /* \"#utility.yul\":2131:2149   */\n      add\n        /* \"#utility.yul\":2110:2150   */\n      tag_394\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2100:2150   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:2156   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2161:3162   */\n    tag_56:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2400:2403   */\n      0xa0\n        /* \"#utility.yul\":2388:2397   */\n      dup7\n        /* \"#utility.yul\":2379:2386   */\n      dup9\n        /* \"#utility.yul\":2375:2398   */\n      sub\n        /* \"#utility.yul\":2371:2404   */\n      slt\n        /* \"#utility.yul\":2368:2370   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2422:2428   */\n      dup1\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2407:2429   */\n      revert\n        /* \"#utility.yul\":2368:2370   */\n    tag_419:\n        /* \"#utility.yul\":2450:2481   */\n      tag_420\n        /* \"#utility.yul\":2471:2480   */\n      dup7\n        /* \"#utility.yul\":2450:2481   */\n      tag_394\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2440:2481   */\n      swap5\n      pop\n        /* \"#utility.yul\":2500:2540   */\n      tag_421\n        /* \"#utility.yul\":2536:2538   */\n      0x20\n        /* \"#utility.yul\":2525:2534   */\n      dup8\n        /* \"#utility.yul\":2521:2539   */\n      add\n        /* \"#utility.yul\":2500:2540   */\n      tag_394\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2490:2540   */\n      swap4\n      pop\n        /* \"#utility.yul\":2591:2593   */\n      0x40\n        /* \"#utility.yul\":2580:2589   */\n      dup7\n        /* \"#utility.yul\":2576:2594   */\n      add\n        /* \"#utility.yul\":2563:2595   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2655:2657   */\n      dup1\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      gt\n        /* \"#utility.yul\":2641:2643   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2668:2674   */\n      dup4\n        /* \"#utility.yul\":2661:2683   */\n      revert\n        /* \"#utility.yul\":2641:2643   */\n    tag_422:\n        /* \"#utility.yul\":2704:2771   */\n      tag_423\n        /* \"#utility.yul\":2763:2770   */\n      dup10\n        /* \"#utility.yul\":2754:2760   */\n      dup4\n        /* \"#utility.yul\":2743:2752   */\n      dup11\n        /* \"#utility.yul\":2739:2761   */\n      add\n        /* \"#utility.yul\":2704:2771   */\n      tag_397\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2694:2771   */\n      swap5\n      pop\n        /* \"#utility.yul\":2824:2826   */\n      0x60\n        /* \"#utility.yul\":2813:2822   */\n      dup9\n        /* \"#utility.yul\":2809:2827   */\n      add\n        /* \"#utility.yul\":2796:2828   */\n      calldataload\n        /* \"#utility.yul\":2780:2828   */\n      swap2\n      pop\n        /* \"#utility.yul\":2853:2855   */\n      dup1\n        /* \"#utility.yul\":2843:2851   */\n      dup3\n        /* \"#utility.yul\":2840:2856   */\n      gt\n        /* \"#utility.yul\":2837:2839   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2874:2880   */\n      dup3\n        /* \"#utility.yul\":2866:2872   */\n      dup4\n        /* \"#utility.yul\":2859:2881   */\n      revert\n        /* \"#utility.yul\":2837:2839   */\n    tag_424:\n        /* \"#utility.yul\":2902:2971   */\n      tag_425\n        /* \"#utility.yul\":2963:2970   */\n      dup10\n        /* \"#utility.yul\":2952:2960   */\n      dup4\n        /* \"#utility.yul\":2941:2950   */\n      dup11\n        /* \"#utility.yul\":2937:2961   */\n      add\n        /* \"#utility.yul\":2902:2971   */\n      tag_397\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2892:2971   */\n      swap4\n      pop\n        /* \"#utility.yul\":3024:3027   */\n      0x80\n        /* \"#utility.yul\":3013:3022   */\n      dup9\n        /* \"#utility.yul\":3009:3028   */\n      add\n        /* \"#utility.yul\":2996:3029   */\n      calldataload\n        /* \"#utility.yul\":2980:3029   */\n      swap2\n      pop\n        /* \"#utility.yul\":3054:3056   */\n      dup1\n        /* \"#utility.yul\":3044:3052   */\n      dup3\n        /* \"#utility.yul\":3041:3057   */\n      gt\n        /* \"#utility.yul\":3038:3040   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3075:3081   */\n      dup3\n        /* \"#utility.yul\":3067:3073   */\n      dup4\n        /* \"#utility.yul\":3060:3082   */\n      revert\n        /* \"#utility.yul\":3038:3040   */\n    tag_426:\n      pop\n        /* \"#utility.yul\":3103:3156   */\n      tag_427\n        /* \"#utility.yul\":3148:3155   */\n      dup9\n        /* \"#utility.yul\":3137:3145   */\n      dup3\n        /* \"#utility.yul\":3126:3135   */\n      dup10\n        /* \"#utility.yul\":3122:3146   */\n      add\n        /* \"#utility.yul\":3103:3156   */\n      tag_407\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3093:3156   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2358:3162   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3167:3799   */\n    tag_94:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3356:3359   */\n      0xa0\n        /* \"#utility.yul\":3344:3353   */\n      dup7\n        /* \"#utility.yul\":3335:3342   */\n      dup9\n        /* \"#utility.yul\":3331:3354   */\n      sub\n        /* \"#utility.yul\":3327:3360   */\n      slt\n        /* \"#utility.yul\":3324:3326   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":3378:3384   */\n      dup1\n        /* \"#utility.yul\":3370:3376   */\n      dup2\n        /* \"#utility.yul\":3363:3385   */\n      revert\n        /* \"#utility.yul\":3324:3326   */\n    tag_429:\n        /* \"#utility.yul\":3406:3437   */\n      tag_430\n        /* \"#utility.yul\":3427:3436   */\n      dup7\n        /* \"#utility.yul\":3406:3437   */\n      tag_394\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3396:3437   */\n      swap5\n      pop\n        /* \"#utility.yul\":3456:3496   */\n      tag_431\n        /* \"#utility.yul\":3492:3494   */\n      0x20\n        /* \"#utility.yul\":3481:3490   */\n      dup8\n        /* \"#utility.yul\":3477:3495   */\n      add\n        /* \"#utility.yul\":3456:3496   */\n      tag_394\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3446:3496   */\n      swap4\n      pop\n        /* \"#utility.yul\":3543:3545   */\n      0x40\n        /* \"#utility.yul\":3532:3541   */\n      dup7\n        /* \"#utility.yul\":3528:3546   */\n      add\n        /* \"#utility.yul\":3515:3547   */\n      calldataload\n        /* \"#utility.yul\":3505:3547   */\n      swap3\n      pop\n        /* \"#utility.yul\":3594:3596   */\n      0x60\n        /* \"#utility.yul\":3583:3592   */\n      dup7\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3566:3598   */\n      calldataload\n        /* \"#utility.yul\":3556:3598   */\n      swap2\n      pop\n        /* \"#utility.yul\":3649:3652   */\n      0x80\n        /* \"#utility.yul\":3638:3647   */\n      dup7\n        /* \"#utility.yul\":3634:3653   */\n      add\n        /* \"#utility.yul\":3621:3654   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3669:3675   */\n      dup2\n        /* \"#utility.yul\":3666:3696   */\n      gt\n        /* \"#utility.yul\":3663:3665   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3706:3712   */\n      dup3\n        /* \"#utility.yul\":3699:3721   */\n      revert\n        /* \"#utility.yul\":3663:3665   */\n    tag_432:\n        /* \"#utility.yul\":3742:3793   */\n      tag_427\n        /* \"#utility.yul\":3785:3792   */\n      dup9\n        /* \"#utility.yul\":3776:3782   */\n      dup3\n        /* \"#utility.yul\":3765:3774   */\n      dup10\n        /* \"#utility.yul\":3761:3783   */\n      add\n        /* \"#utility.yul\":3742:3793   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":3804:4728   */\n    tag_52:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":4026:4029   */\n      0x80\n        /* \"#utility.yul\":4014:4023   */\n      dup6\n        /* \"#utility.yul\":4005:4012   */\n      dup8\n        /* \"#utility.yul\":4001:4024   */\n      sub\n        /* \"#utility.yul\":3997:4030   */\n      slt\n        /* \"#utility.yul\":3994:3996   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4048:4054   */\n      dup4\n        /* \"#utility.yul\":4040:4046   */\n      dup5\n        /* \"#utility.yul\":4033:4055   */\n      revert\n        /* \"#utility.yul\":3994:3996   */\n    tag_435:\n        /* \"#utility.yul\":4076:4107   */\n      tag_436\n        /* \"#utility.yul\":4097:4106   */\n      dup6\n        /* \"#utility.yul\":4076:4107   */\n      tag_394\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4066:4107   */\n      swap4\n      pop\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"#utility.yul\":4147:4156   */\n      dup6\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"#utility.yul\":4130:4162   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4222:4224   */\n      dup1\n        /* \"#utility.yul\":4214:4220   */\n      dup3\n        /* \"#utility.yul\":4211:4225   */\n      gt\n        /* \"#utility.yul\":4208:4210   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4243:4249   */\n      dup5\n        /* \"#utility.yul\":4235:4241   */\n      dup6\n        /* \"#utility.yul\":4228:4250   */\n      revert\n        /* \"#utility.yul\":4208:4210   */\n    tag_437:\n        /* \"#utility.yul\":4271:4338   */\n      tag_438\n        /* \"#utility.yul\":4330:4337   */\n      dup9\n        /* \"#utility.yul\":4321:4327   */\n      dup4\n        /* \"#utility.yul\":4310:4319   */\n      dup10\n        /* \"#utility.yul\":4306:4328   */\n      add\n        /* \"#utility.yul\":4271:4338   */\n      tag_397\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4261:4338   */\n      swap5\n      pop\n        /* \"#utility.yul\":4391:4393   */\n      0x40\n        /* \"#utility.yul\":4380:4389   */\n      dup8\n        /* \"#utility.yul\":4376:4394   */\n      add\n        /* \"#utility.yul\":4363:4395   */\n      calldataload\n        /* \"#utility.yul\":4347:4395   */\n      swap2\n      pop\n        /* \"#utility.yul\":4420:4422   */\n      dup1\n        /* \"#utility.yul\":4410:4418   */\n      dup3\n        /* \"#utility.yul\":4407:4423   */\n      gt\n        /* \"#utility.yul\":4404:4406   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4441:4447   */\n      dup4\n        /* \"#utility.yul\":4433:4439   */\n      dup5\n        /* \"#utility.yul\":4426:4448   */\n      revert\n        /* \"#utility.yul\":4404:4406   */\n    tag_439:\n        /* \"#utility.yul\":4469:4538   */\n      tag_440\n        /* \"#utility.yul\":4530:4537   */\n      dup9\n        /* \"#utility.yul\":4519:4527   */\n      dup4\n        /* \"#utility.yul\":4508:4517   */\n      dup10\n        /* \"#utility.yul\":4504:4528   */\n      add\n        /* \"#utility.yul\":4469:4538   */\n      tag_397\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4459:4538   */\n      swap4\n      pop\n        /* \"#utility.yul\":4591:4593   */\n      0x60\n        /* \"#utility.yul\":4580:4589   */\n      dup8\n        /* \"#utility.yul\":4576:4594   */\n      add\n        /* \"#utility.yul\":4563:4595   */\n      calldataload\n        /* \"#utility.yul\":4547:4595   */\n      swap2\n      pop\n        /* \"#utility.yul\":4620:4622   */\n      dup1\n        /* \"#utility.yul\":4610:4618   */\n      dup3\n        /* \"#utility.yul\":4607:4623   */\n      gt\n        /* \"#utility.yul\":4604:4606   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4641:4647   */\n      dup3\n        /* \"#utility.yul\":4633:4639   */\n      dup4\n        /* \"#utility.yul\":4626:4648   */\n      revert\n        /* \"#utility.yul\":4604:4606   */\n    tag_441:\n      pop\n        /* \"#utility.yul\":4669:4722   */\n      tag_442\n        /* \"#utility.yul\":4714:4721   */\n      dup8\n        /* \"#utility.yul\":4703:4711   */\n      dup3\n        /* \"#utility.yul\":4692:4701   */\n      dup9\n        /* \"#utility.yul\":4688:4712   */\n      add\n        /* \"#utility.yul\":4669:4722   */\n      tag_407\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4659:4722   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3984:4728   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4733:5102   */\n    tag_82:\n      0x00\n      dup1\n        /* \"#utility.yul\":4859:4861   */\n      0x40\n        /* \"#utility.yul\":4847:4856   */\n      dup4\n        /* \"#utility.yul\":4838:4845   */\n      dup6\n        /* \"#utility.yul\":4834:4857   */\n      sub\n        /* \"#utility.yul\":4830:4862   */\n      slt\n        /* \"#utility.yul\":4827:4829   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4880:4886   */\n      dup2\n        /* \"#utility.yul\":4872:4878   */\n      dup3\n        /* \"#utility.yul\":4865:4887   */\n      revert\n        /* \"#utility.yul\":4827:4829   */\n    tag_444:\n        /* \"#utility.yul\":4908:4939   */\n      tag_445\n        /* \"#utility.yul\":4929:4938   */\n      dup4\n        /* \"#utility.yul\":4908:4939   */\n      tag_394\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4898:4939   */\n      swap2\n      pop\n        /* \"#utility.yul\":4989:4991   */\n      0x20\n        /* \"#utility.yul\":4978:4987   */\n      dup4\n        /* \"#utility.yul\":4974:4992   */\n      add\n        /* \"#utility.yul\":4961:4993   */\n      calldataload\n        /* \"#utility.yul\":5036:5041   */\n      dup1\n        /* \"#utility.yul\":5029:5042   */\n      iszero\n        /* \"#utility.yul\":5022:5043   */\n      iszero\n        /* \"#utility.yul\":5015:5020   */\n      dup2\n        /* \"#utility.yul\":5012:5044   */\n      eq\n        /* \"#utility.yul\":5002:5004   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":5063:5069   */\n      dup2\n        /* \"#utility.yul\":5055:5061   */\n      dup3\n        /* \"#utility.yul\":5048:5070   */\n      revert\n        /* \"#utility.yul\":5002:5004   */\n    tag_446:\n        /* \"#utility.yul\":5091:5096   */\n      dup1\n        /* \"#utility.yul\":5081:5096   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4817:5102   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5107:5373   */\n    tag_26:\n      0x00\n      dup1\n        /* \"#utility.yul\":5236:5238   */\n      0x40\n        /* \"#utility.yul\":5224:5233   */\n      dup4\n        /* \"#utility.yul\":5215:5222   */\n      dup6\n        /* \"#utility.yul\":5211:5234   */\n      sub\n        /* \"#utility.yul\":5207:5239   */\n      slt\n        /* \"#utility.yul\":5204:5206   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5257:5263   */\n      dup2\n        /* \"#utility.yul\":5249:5255   */\n      dup3\n        /* \"#utility.yul\":5242:5264   */\n      revert\n        /* \"#utility.yul\":5204:5206   */\n    tag_448:\n        /* \"#utility.yul\":5285:5316   */\n      tag_449\n        /* \"#utility.yul\":5306:5315   */\n      dup4\n        /* \"#utility.yul\":5285:5316   */\n      tag_394\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5275:5316   */\n      swap5\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"#utility.yul\":5348:5366   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5335:5367   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5194:5373   */\n      jump\t// out\n        /* \"#utility.yul\":5378:5712   */\n    tag_42:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5524:5526   */\n      0x60\n        /* \"#utility.yul\":5512:5521   */\n      dup5\n        /* \"#utility.yul\":5503:5510   */\n      dup7\n        /* \"#utility.yul\":5499:5522   */\n      sub\n        /* \"#utility.yul\":5495:5527   */\n      slt\n        /* \"#utility.yul\":5492:5494   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5545:5551   */\n      dup1\n        /* \"#utility.yul\":5537:5543   */\n      dup2\n        /* \"#utility.yul\":5530:5552   */\n      revert\n        /* \"#utility.yul\":5492:5494   */\n    tag_451:\n        /* \"#utility.yul\":5573:5604   */\n      tag_452\n        /* \"#utility.yul\":5594:5603   */\n      dup5\n        /* \"#utility.yul\":5573:5604   */\n      tag_394\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5563:5604   */\n      swap6\n        /* \"#utility.yul\":5651:5653   */\n      0x20\n        /* \"#utility.yul\":5636:5654   */\n      dup6\n      add\n        /* \"#utility.yul\":5623:5655   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5702:5704   */\n      0x40\n        /* \"#utility.yul\":5687:5705   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5674:5706   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5482:5712   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:7006   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":5896:5898   */\n      0x40\n        /* \"#utility.yul\":5884:5893   */\n      dup4\n        /* \"#utility.yul\":5875:5882   */\n      dup6\n        /* \"#utility.yul\":5871:5894   */\n      sub\n        /* \"#utility.yul\":5867:5899   */\n      slt\n        /* \"#utility.yul\":5864:5866   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":5917:5923   */\n      dup2\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5902:5924   */\n      revert\n        /* \"#utility.yul\":5864:5866   */\n    tag_454:\n        /* \"#utility.yul\":5962:5971   */\n      dup3\n        /* \"#utility.yul\":5949:5972   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6032:6034   */\n      dup1\n        /* \"#utility.yul\":6024:6030   */\n      dup3\n        /* \"#utility.yul\":6021:6035   */\n      gt\n        /* \"#utility.yul\":6018:6020   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6053:6059   */\n      dup4\n        /* \"#utility.yul\":6045:6051   */\n      dup5\n        /* \"#utility.yul\":6038:6060   */\n      revert\n        /* \"#utility.yul\":6018:6020   */\n    tag_455:\n        /* \"#utility.yul\":6096:6102   */\n      dup2\n        /* \"#utility.yul\":6085:6094   */\n      dup6\n        /* \"#utility.yul\":6081:6103   */\n      add\n        /* \"#utility.yul\":6071:6103   */\n      swap2\n      pop\n        /* \"#utility.yul\":6141:6148   */\n      dup6\n        /* \"#utility.yul\":6134:6138   */\n      0x1f\n        /* \"#utility.yul\":6130:6132   */\n      dup4\n        /* \"#utility.yul\":6126:6139   */\n      add\n        /* \"#utility.yul\":6122:6149   */\n      slt\n        /* \"#utility.yul\":6112:6114   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6168:6174   */\n      dup4\n        /* \"#utility.yul\":6160:6166   */\n      dup5\n        /* \"#utility.yul\":6153:6175   */\n      revert\n        /* \"#utility.yul\":6112:6114   */\n    tag_456:\n        /* \"#utility.yul\":6209:6211   */\n      dup2\n        /* \"#utility.yul\":6196:6212   */\n      calldataload\n        /* \"#utility.yul\":6231:6235   */\n      0x20\n        /* \"#utility.yul\":6254:6303   */\n      tag_457\n        /* \"#utility.yul\":6300:6302   */\n      dup3\n        /* \"#utility.yul\":6254:6303   */\n      tag_401\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6332:6334   */\n      0x40\n        /* \"#utility.yul\":6326:6335   */\n      mload\n        /* \"#utility.yul\":6344:6375   */\n      tag_458\n        /* \"#utility.yul\":6372:6374   */\n      dup3\n        /* \"#utility.yul\":6364:6370   */\n      dup3\n        /* \"#utility.yul\":6344:6375   */\n      tag_392\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6410:6428   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6444:6459   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":6479:6490   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":6517:6528   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":6509:6529   */\n      dup8\n      add\n        /* \"#utility.yul\":6505:6534   */\n      dup5\n      add\n        /* \"#utility.yul\":6502:6544   */\n      dup12\n      lt\n        /* \"#utility.yul\":6499:6501   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6562:6568   */\n      dup9\n        /* \"#utility.yul\":6554:6560   */\n      dup10\n        /* \"#utility.yul\":6547:6569   */\n      revert\n        /* \"#utility.yul\":6499:6501   */\n    tag_459:\n        /* \"#utility.yul\":6589:6595   */\n      dup9\n        /* \"#utility.yul\":6580:6595   */\n      swap7\n      pop\n        /* \"#utility.yul\":6604:6775   */\n    tag_460:\n        /* \"#utility.yul\":6618:6620   */\n      dup5\n        /* \"#utility.yul\":6615:6616   */\n      dup8\n        /* \"#utility.yul\":6612:6621   */\n      lt\n        /* \"#utility.yul\":6604:6775   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6675:6700   */\n      tag_463\n        /* \"#utility.yul\":6696:6699   */\n      dup2\n        /* \"#utility.yul\":6675:6700   */\n      tag_394\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6663:6701   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6636:6637   */\n      0x01\n        /* \"#utility.yul\":6629:6638   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":6721:6733   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":6753:6765   */\n      dup4\n      add\n        /* \"#utility.yul\":6604:6775   */\n      jump(tag_460)\n    tag_462:\n      pop\n        /* \"#utility.yul\":6794:6800   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6838:6856   */\n      dup7\n      add\n        /* \"#utility.yul\":6825:6857   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6869:6885   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6866:6868   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":6903:6909   */\n      dup3\n        /* \"#utility.yul\":6895:6901   */\n      dup4\n        /* \"#utility.yul\":6888:6910   */\n      revert\n        /* \"#utility.yul\":6866:6868   */\n    tag_464:\n      pop\n        /* \"#utility.yul\":6931:7000   */\n      tag_465\n        /* \"#utility.yul\":6992:6999   */\n      dup6\n        /* \"#utility.yul\":6981:6989   */\n      dup3\n        /* \"#utility.yul\":6970:6979   */\n      dup7\n        /* \"#utility.yul\":6966:6990   */\n      add\n        /* \"#utility.yul\":6931:7000   */\n      tag_397\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6921:7000   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5854:7006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7011:7268   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":7122:7124   */\n      0x20\n        /* \"#utility.yul\":7110:7119   */\n      dup3\n        /* \"#utility.yul\":7101:7108   */\n      dup5\n        /* \"#utility.yul\":7097:7120   */\n      sub\n        /* \"#utility.yul\":7093:7125   */\n      slt\n        /* \"#utility.yul\":7090:7092   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7143:7149   */\n      dup1\n        /* \"#utility.yul\":7135:7141   */\n      dup2\n        /* \"#utility.yul\":7128:7150   */\n      revert\n        /* \"#utility.yul\":7090:7092   */\n    tag_467:\n        /* \"#utility.yul\":7187:7196   */\n      dup2\n        /* \"#utility.yul\":7174:7197   */\n      calldataload\n        /* \"#utility.yul\":7206:7238   */\n      tag_410\n        /* \"#utility.yul\":7232:7237   */\n      dup2\n        /* \"#utility.yul\":7206:7238   */\n      tag_469\n      jump\t// in\n        /* \"#utility.yul\":7273:7534   */\n    tag_337:\n      0x00\n        /* \"#utility.yul\":7395:7397   */\n      0x20\n        /* \"#utility.yul\":7383:7392   */\n      dup3\n        /* \"#utility.yul\":7374:7381   */\n      dup5\n        /* \"#utility.yul\":7370:7393   */\n      sub\n        /* \"#utility.yul\":7366:7398   */\n      slt\n        /* \"#utility.yul\":7363:7365   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7416:7422   */\n      dup1\n        /* \"#utility.yul\":7408:7414   */\n      dup2\n        /* \"#utility.yul\":7401:7423   */\n      revert\n        /* \"#utility.yul\":7363:7365   */\n    tag_471:\n        /* \"#utility.yul\":7453:7462   */\n      dup2\n        /* \"#utility.yul\":7447:7463   */\n      mload\n        /* \"#utility.yul\":7472:7504   */\n      tag_410\n        /* \"#utility.yul\":7498:7503   */\n      dup2\n        /* \"#utility.yul\":7472:7504   */\n      tag_469\n      jump\t// in\n        /* \"#utility.yul\":7539:8021   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":7661:7663   */\n      0x20\n        /* \"#utility.yul\":7649:7658   */\n      dup3\n        /* \"#utility.yul\":7640:7647   */\n      dup5\n        /* \"#utility.yul\":7636:7659   */\n      sub\n        /* \"#utility.yul\":7632:7664   */\n      slt\n        /* \"#utility.yul\":7629:7631   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7682:7688   */\n      dup1\n        /* \"#utility.yul\":7674:7680   */\n      dup2\n        /* \"#utility.yul\":7667:7689   */\n      revert\n        /* \"#utility.yul\":7629:7631   */\n    tag_474:\n        /* \"#utility.yul\":7727:7736   */\n      dup2\n        /* \"#utility.yul\":7714:7737   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7752:7758   */\n      dup2\n        /* \"#utility.yul\":7749:7779   */\n      gt\n        /* \"#utility.yul\":7746:7748   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":7797:7803   */\n      dup2\n        /* \"#utility.yul\":7789:7795   */\n      dup3\n        /* \"#utility.yul\":7782:7804   */\n      revert\n        /* \"#utility.yul\":7746:7748   */\n    tag_475:\n        /* \"#utility.yul\":7825:7847   */\n      dup3\n      add\n        /* \"#utility.yul\":7878:7882   */\n      0x1f\n        /* \"#utility.yul\":7870:7883   */\n      dup2\n      add\n        /* \"#utility.yul\":7866:7893   */\n      dup5\n      sgt\n        /* \"#utility.yul\":7856:7858   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7912:7918   */\n      dup2\n        /* \"#utility.yul\":7904:7910   */\n      dup3\n        /* \"#utility.yul\":7897:7919   */\n      revert\n        /* \"#utility.yul\":7856:7858   */\n    tag_476:\n        /* \"#utility.yul\":7940:8015   */\n      tag_477\n        /* \"#utility.yul\":8007:8014   */\n      dup5\n        /* \"#utility.yul\":8002:8004   */\n      dup3\n        /* \"#utility.yul\":7989:8005   */\n      calldataload\n        /* \"#utility.yul\":7984:7986   */\n      0x20\n        /* \"#utility.yul\":7980:7982   */\n      dup5\n        /* \"#utility.yul\":7976:7987   */\n      add\n        /* \"#utility.yul\":7940:8015   */\n      tag_386\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7930:8015   */\n      swap5\n        /* \"#utility.yul\":7619:8021   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8026:8216   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":8138:8140   */\n      0x20\n        /* \"#utility.yul\":8126:8135   */\n      dup3\n        /* \"#utility.yul\":8117:8124   */\n      dup5\n        /* \"#utility.yul\":8113:8136   */\n      sub\n        /* \"#utility.yul\":8109:8141   */\n      slt\n        /* \"#utility.yul\":8106:8108   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":8159:8165   */\n      dup1\n        /* \"#utility.yul\":8151:8157   */\n      dup2\n        /* \"#utility.yul\":8144:8166   */\n      revert\n        /* \"#utility.yul\":8106:8108   */\n    tag_479:\n      pop\n        /* \"#utility.yul\":8187:8210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":8096:8216   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8221:8555   */\n    tag_78:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":8367:8369   */\n      0x60\n        /* \"#utility.yul\":8355:8364   */\n      dup5\n        /* \"#utility.yul\":8346:8353   */\n      dup7\n        /* \"#utility.yul\":8342:8365   */\n      sub\n        /* \"#utility.yul\":8338:8370   */\n      slt\n        /* \"#utility.yul\":8335:8337   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":8388:8394   */\n      dup1\n        /* \"#utility.yul\":8380:8386   */\n      dup2\n        /* \"#utility.yul\":8373:8395   */\n      revert\n        /* \"#utility.yul\":8335:8337   */\n    tag_481:\n        /* \"#utility.yul\":8429:8438   */\n      dup4\n        /* \"#utility.yul\":8416:8439   */\n      calldataload\n        /* \"#utility.yul\":8406:8439   */\n      swap3\n      pop\n        /* \"#utility.yul\":8486:8488   */\n      0x20\n        /* \"#utility.yul\":8475:8484   */\n      dup5\n        /* \"#utility.yul\":8471:8489   */\n      add\n        /* \"#utility.yul\":8458:8490   */\n      calldataload\n        /* \"#utility.yul\":8448:8490   */\n      swap2\n      pop\n        /* \"#utility.yul\":8509:8549   */\n      tag_482\n        /* \"#utility.yul\":8545:8547   */\n      0x40\n        /* \"#utility.yul\":8534:8543   */\n      dup6\n        /* \"#utility.yul\":8530:8548   */\n      add\n        /* \"#utility.yul\":8509:8549   */\n      tag_394\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8499:8549   */\n      swap1\n      pop\n        /* \"#utility.yul\":8325:8555   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8560:9003   */\n    tag_483:\n      0x00\n        /* \"#utility.yul\":8657:8662   */\n      dup2\n        /* \"#utility.yul\":8651:8663   */\n      mload\n        /* \"#utility.yul\":8684:8690   */\n      dup1\n        /* \"#utility.yul\":8679:8682   */\n      dup5\n        /* \"#utility.yul\":8672:8691   */\n      mstore\n        /* \"#utility.yul\":8710:8714   */\n      0x20\n        /* \"#utility.yul\":8739:8741   */\n      dup1\n        /* \"#utility.yul\":8734:8737   */\n      dup6\n        /* \"#utility.yul\":8730:8742   */\n      add\n        /* \"#utility.yul\":8723:8742   */\n      swap5\n      pop\n        /* \"#utility.yul\":8776:8778   */\n      dup1\n        /* \"#utility.yul\":8769:8774   */\n      dup5\n        /* \"#utility.yul\":8765:8779   */\n      add\n        /* \"#utility.yul\":8797:8800   */\n      dup4\n        /* \"#utility.yul\":8809:8978   */\n    tag_485:\n        /* \"#utility.yul\":8823:8829   */\n      dup4\n        /* \"#utility.yul\":8820:8821   */\n      dup2\n        /* \"#utility.yul\":8817:8830   */\n      lt\n        /* \"#utility.yul\":8809:8978   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":8884:8897   */\n      dup2\n      mload\n        /* \"#utility.yul\":8872:8898   */\n      dup8\n      mstore\n        /* \"#utility.yul\":8918:8930   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":8953:8968   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8845:8846   */\n      0x01\n        /* \"#utility.yul\":8838:8847   */\n      add\n        /* \"#utility.yul\":8809:8978   */\n      jump(tag_485)\n    tag_487:\n      pop\n        /* \"#utility.yul\":8994:8997   */\n      swap5\n      swap6\n        /* \"#utility.yul\":8627:9003   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9008:9485   */\n    tag_488:\n      0x00\n        /* \"#utility.yul\":9089:9094   */\n      dup2\n        /* \"#utility.yul\":9083:9095   */\n      mload\n        /* \"#utility.yul\":9116:9122   */\n      dup1\n        /* \"#utility.yul\":9111:9114   */\n      dup5\n        /* \"#utility.yul\":9104:9123   */\n      mstore\n        /* \"#utility.yul\":9141:9144   */\n      dup2\n        /* \"#utility.yul\":9153:9315   */\n    tag_490:\n        /* \"#utility.yul\":9167:9173   */\n      dup2\n        /* \"#utility.yul\":9164:9165   */\n      dup2\n        /* \"#utility.yul\":9161:9174   */\n      lt\n        /* \"#utility.yul\":9153:9315   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9229:9233   */\n      0x20\n        /* \"#utility.yul\":9285:9298   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":9281:9303   */\n      dup2\n      add\n        /* \"#utility.yul\":9275:9304   */\n      mload\n        /* \"#utility.yul\":9257:9268   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":9253:9273   */\n      dup3\n      add\n        /* \"#utility.yul\":9246:9305   */\n      mstore\n        /* \"#utility.yul\":9182:9194   */\n      add\n        /* \"#utility.yul\":9153:9315   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":9333:9339   */\n      dup2\n        /* \"#utility.yul\":9330:9331   */\n      dup2\n        /* \"#utility.yul\":9327:9340   */\n      gt\n        /* \"#utility.yul\":9324:9326   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":9399:9402   */\n      dup3\n        /* \"#utility.yul\":9392:9396   */\n      0x20\n        /* \"#utility.yul\":9383:9389   */\n      dup4\n        /* \"#utility.yul\":9378:9381   */\n      dup8\n        /* \"#utility.yul\":9374:9390   */\n      add\n        /* \"#utility.yul\":9370:9397   */\n      add\n        /* \"#utility.yul\":9363:9403   */\n      mstore\n        /* \"#utility.yul\":9324:9326   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":9467:9469   */\n      0x1f\n        /* \"#utility.yul\":9446:9461   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9442:9471   */\n      and\n        /* \"#utility.yul\":9433:9472   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":9474:9478   */\n      0x20\n        /* \"#utility.yul\":9429:9479   */\n      add\n      swap3\n        /* \"#utility.yul\":9059:9485   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9490:9693   */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9654:9686   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9636:9687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9624:9626   */\n      0x20\n        /* \"#utility.yul\":9609:9627   */\n      add\n      swap1\n        /* \"#utility.yul\":9591:9693   */\n      jump\t// out\n        /* \"#utility.yul\":9698:10538   */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10095:10110   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10077:10111   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10147:10162   */\n      dup6\n      and\n        /* \"#utility.yul\":10142:10144   */\n      0x20\n        /* \"#utility.yul\":10127:10145   */\n      dup3\n      add\n        /* \"#utility.yul\":10120:10163   */\n      mstore\n        /* \"#utility.yul\":10057:10060   */\n      0xa0\n        /* \"#utility.yul\":10194:10196   */\n      0x40\n        /* \"#utility.yul\":10179:10197   */\n      dup3\n      add\n        /* \"#utility.yul\":10172:10203   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9698:10538   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10226:10289   */\n      tag_496\n      swap1\n        /* \"#utility.yul\":10269:10288   */\n      dup4\n      add\n        /* \"#utility.yul\":10261:10267   */\n      dup7\n        /* \"#utility.yul\":10226:10289   */\n      tag_483\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10337:10346   */\n      dup3\n        /* \"#utility.yul\":10329:10335   */\n      dup2\n        /* \"#utility.yul\":10325:10347   */\n      sub\n        /* \"#utility.yul\":10320:10322   */\n      0x60\n        /* \"#utility.yul\":10309:10318   */\n      dup5\n        /* \"#utility.yul\":10305:10323   */\n      add\n        /* \"#utility.yul\":10298:10348   */\n      mstore\n        /* \"#utility.yul\":10371:10421   */\n      tag_497\n        /* \"#utility.yul\":10414:10420   */\n      dup2\n        /* \"#utility.yul\":10406:10412   */\n      dup7\n        /* \"#utility.yul\":10371:10421   */\n      tag_483\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10357:10421   */\n      swap1\n      pop\n        /* \"#utility.yul\":10470:10479   */\n      dup3\n        /* \"#utility.yul\":10462:10468   */\n      dup2\n        /* \"#utility.yul\":10458:10480   */\n      sub\n        /* \"#utility.yul\":10452:10455   */\n      0x80\n        /* \"#utility.yul\":10441:10450   */\n      dup5\n        /* \"#utility.yul\":10437:10456   */\n      add\n        /* \"#utility.yul\":10430:10481   */\n      mstore\n        /* \"#utility.yul\":10498:10532   */\n      tag_498\n        /* \"#utility.yul\":10525:10531   */\n      dup2\n        /* \"#utility.yul\":10517:10523   */\n      dup6\n        /* \"#utility.yul\":10498:10532   */\n      tag_488\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10490:10532   */\n      swap9\n        /* \"#utility.yul\":10029:10538   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10543:11105   */\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10840:10855   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10822:10856   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10892:10907   */\n      dup6\n      and\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10872:10890   */\n      dup3\n      add\n        /* \"#utility.yul\":10865:10908   */\n      mstore\n        /* \"#utility.yul\":10939:10941   */\n      0x40\n        /* \"#utility.yul\":10924:10942   */\n      dup2\n      add\n        /* \"#utility.yul\":10917:10951   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10982:10984   */\n      0x60\n        /* \"#utility.yul\":10967:10985   */\n      dup2\n      add\n        /* \"#utility.yul\":10960:10994   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10802:10805   */\n      0xa0\n        /* \"#utility.yul\":11025:11028   */\n      0x80\n        /* \"#utility.yul\":11010:11029   */\n      dup3\n      add\n        /* \"#utility.yul\":11003:11035   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10543:11105   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11052:11099   */\n      tag_500\n      swap1\n        /* \"#utility.yul\":11079:11098   */\n      dup4\n      add\n        /* \"#utility.yul\":11071:11077   */\n      dup5\n        /* \"#utility.yul\":11052:11099   */\n      tag_488\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11044:11099   */\n      swap8\n        /* \"#utility.yul\":10774:11105   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11110:11377   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":11289:11291   */\n      0x20\n        /* \"#utility.yul\":11278:11287   */\n      dup3\n        /* \"#utility.yul\":11271:11292   */\n      mstore\n        /* \"#utility.yul\":11309:11371   */\n      tag_410\n        /* \"#utility.yul\":11367:11369   */\n      0x20\n        /* \"#utility.yul\":11356:11365   */\n      dup4\n        /* \"#utility.yul\":11352:11370   */\n      add\n        /* \"#utility.yul\":11344:11350   */\n      dup5\n        /* \"#utility.yul\":11309:11371   */\n      tag_483\n      jump\t// in\n        /* \"#utility.yul\":11382:11859   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":11639:11641   */\n      0x40\n        /* \"#utility.yul\":11628:11637   */\n      dup3\n        /* \"#utility.yul\":11621:11642   */\n      mstore\n        /* \"#utility.yul\":11665:11727   */\n      tag_504\n        /* \"#utility.yul\":11723:11725   */\n      0x40\n        /* \"#utility.yul\":11712:11721   */\n      dup4\n        /* \"#utility.yul\":11708:11726   */\n      add\n        /* \"#utility.yul\":11700:11706   */\n      dup6\n        /* \"#utility.yul\":11665:11727   */\n      tag_483\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11775:11784   */\n      dup3\n        /* \"#utility.yul\":11767:11773   */\n      dup2\n        /* \"#utility.yul\":11763:11785   */\n      sub\n        /* \"#utility.yul\":11758:11760   */\n      0x20\n        /* \"#utility.yul\":11747:11756   */\n      dup5\n        /* \"#utility.yul\":11743:11761   */\n      add\n        /* \"#utility.yul\":11736:11786   */\n      mstore\n        /* \"#utility.yul\":11803:11853   */\n      tag_505\n        /* \"#utility.yul\":11846:11852   */\n      dup2\n        /* \"#utility.yul\":11838:11844   */\n      dup6\n        /* \"#utility.yul\":11803:11853   */\n      tag_483\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11795:11853   */\n      swap6\n        /* \"#utility.yul\":11611:11859   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11864:12051   */\n    tag_35:\n        /* \"#utility.yul\":12029:12043   */\n      swap1\n      iszero\n        /* \"#utility.yul\":12022:12044   */\n      iszero\n        /* \"#utility.yul\":12004:12045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11992:11994   */\n      0x20\n        /* \"#utility.yul\":11977:11995   */\n      add\n      swap1\n        /* \"#utility.yul\":11959:12051   */\n      jump\t// out\n        /* \"#utility.yul\":12056:12277   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":12205:12207   */\n      0x20\n        /* \"#utility.yul\":12194:12203   */\n      dup3\n        /* \"#utility.yul\":12187:12208   */\n      mstore\n        /* \"#utility.yul\":12225:12271   */\n      tag_410\n        /* \"#utility.yul\":12267:12269   */\n      0x20\n        /* \"#utility.yul\":12256:12265   */\n      dup4\n        /* \"#utility.yul\":12252:12270   */\n      add\n        /* \"#utility.yul\":12244:12250   */\n      dup5\n        /* \"#utility.yul\":12225:12271   */\n      tag_488\n      jump\t// in\n        /* \"#utility.yul\":12282:12698   */\n    tag_349:\n        /* \"#utility.yul\":12484:12486   */\n      0x20\n        /* \"#utility.yul\":12466:12487   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12523:12525   */\n      0x34\n        /* \"#utility.yul\":12503:12521   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12496:12526   */\n      mstore\n        /* \"#utility.yul\":12562:12596   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":12557:12559   */\n      0x40\n        /* \"#utility.yul\":12542:12560   */\n      dup3\n      add\n        /* \"#utility.yul\":12535:12597   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":12628:12630   */\n      0x60\n        /* \"#utility.yul\":12613:12631   */\n      dup3\n      add\n        /* \"#utility.yul\":12606:12656   */\n      mstore\n        /* \"#utility.yul\":12688:12691   */\n      0x80\n        /* \"#utility.yul\":12673:12692   */\n      add\n      swap1\n        /* \"#utility.yul\":12456:12698   */\n      jump\t// out\n        /* \"#utility.yul\":12703:13107   */\n    tag_353:\n        /* \"#utility.yul\":12905:12907   */\n      0x20\n        /* \"#utility.yul\":12887:12908   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12944:12946   */\n      0x28\n        /* \"#utility.yul\":12924:12942   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12917:12947   */\n      mstore\n        /* \"#utility.yul\":12983:13017   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":12978:12980   */\n      0x40\n        /* \"#utility.yul\":12963:12981   */\n      dup3\n      add\n        /* \"#utility.yul\":12956:13018   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":13049:13051   */\n      0x60\n        /* \"#utility.yul\":13034:13052   */\n      dup3\n      add\n        /* \"#utility.yul\":13027:13065   */\n      mstore\n        /* \"#utility.yul\":13097:13100   */\n      0x80\n        /* \"#utility.yul\":13082:13101   */\n      add\n      swap1\n        /* \"#utility.yul\":12877:13107   */\n      jump\t// out\n        /* \"#utility.yul\":13112:13519   */\n    tag_103:\n        /* \"#utility.yul\":13314:13316   */\n      0x20\n        /* \"#utility.yul\":13296:13317   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13353:13355   */\n      0x2b\n        /* \"#utility.yul\":13333:13351   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13326:13356   */\n      mstore\n        /* \"#utility.yul\":13392:13426   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":13387:13389   */\n      0x40\n        /* \"#utility.yul\":13372:13390   */\n      dup3\n      add\n        /* \"#utility.yul\":13365:13427   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":13458:13460   */\n      0x60\n        /* \"#utility.yul\":13443:13461   */\n      dup3\n      add\n        /* \"#utility.yul\":13436:13477   */\n      mstore\n        /* \"#utility.yul\":13509:13512   */\n      0x80\n        /* \"#utility.yul\":13494:13513   */\n      add\n      swap1\n        /* \"#utility.yul\":13286:13519   */\n      jump\t// out\n        /* \"#utility.yul\":13524:13926   */\n    tag_242:\n        /* \"#utility.yul\":13726:13728   */\n      0x20\n        /* \"#utility.yul\":13708:13729   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13765:13767   */\n      0x26\n        /* \"#utility.yul\":13745:13763   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13738:13768   */\n      mstore\n        /* \"#utility.yul\":13804:13838   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13799:13801   */\n      0x40\n        /* \"#utility.yul\":13784:13802   */\n      dup3\n      add\n        /* \"#utility.yul\":13777:13839   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13870:13872   */\n      0x60\n        /* \"#utility.yul\":13855:13873   */\n      dup3\n      add\n        /* \"#utility.yul\":13848:13884   */\n      mstore\n        /* \"#utility.yul\":13916:13919   */\n      0x80\n        /* \"#utility.yul\":13901:13920   */\n      add\n      swap1\n        /* \"#utility.yul\":13698:13926   */\n      jump\t// out\n        /* \"#utility.yul\":13931:14331   */\n    tag_261:\n        /* \"#utility.yul\":14133:14135   */\n      0x20\n        /* \"#utility.yul\":14115:14136   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14172:14174   */\n      0x24\n        /* \"#utility.yul\":14152:14170   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14145:14175   */\n      mstore\n        /* \"#utility.yul\":14211:14245   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":14206:14208   */\n      0x40\n        /* \"#utility.yul\":14191:14209   */\n      dup3\n      add\n        /* \"#utility.yul\":14184:14246   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":14277:14279   */\n      0x60\n        /* \"#utility.yul\":14262:14280   */\n      dup3\n      add\n        /* \"#utility.yul\":14255:14289   */\n      mstore\n        /* \"#utility.yul\":14321:14324   */\n      0x80\n        /* \"#utility.yul\":14306:14325   */\n      add\n      swap1\n        /* \"#utility.yul\":14105:14331   */\n      jump\t// out\n        /* \"#utility.yul\":14336:14741   */\n    tag_126:\n        /* \"#utility.yul\":14538:14540   */\n      0x20\n        /* \"#utility.yul\":14520:14541   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14577:14579   */\n      0x29\n        /* \"#utility.yul\":14557:14575   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14550:14580   */\n      mstore\n        /* \"#utility.yul\":14616:14650   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":14611:14613   */\n      0x40\n        /* \"#utility.yul\":14596:14614   */\n      dup3\n      add\n        /* \"#utility.yul\":14589:14651   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":14682:14684   */\n      0x60\n        /* \"#utility.yul\":14667:14685   */\n      dup3\n      add\n        /* \"#utility.yul\":14660:14699   */\n      mstore\n        /* \"#utility.yul\":14731:14734   */\n      0x80\n        /* \"#utility.yul\":14716:14735   */\n      add\n      swap1\n        /* \"#utility.yul\":14510:14741   */\n      jump\t// out\n        /* \"#utility.yul\":14746:15147   */\n    tag_289:\n        /* \"#utility.yul\":14948:14950   */\n      0x20\n        /* \"#utility.yul\":14930:14951   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14987:14989   */\n      0x25\n        /* \"#utility.yul\":14967:14985   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14960:14990   */\n      mstore\n        /* \"#utility.yul\":15026:15060   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":15021:15023   */\n      0x40\n        /* \"#utility.yul\":15006:15024   */\n      dup3\n      add\n        /* \"#utility.yul\":14999:15061   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15092:15094   */\n      0x60\n        /* \"#utility.yul\":15077:15095   */\n      dup3\n      add\n        /* \"#utility.yul\":15070:15105   */\n      mstore\n        /* \"#utility.yul\":15137:15140   */\n      0x80\n        /* \"#utility.yul\":15122:15141   */\n      add\n      swap1\n        /* \"#utility.yul\":14920:15147   */\n      jump\t// out\n        /* \"#utility.yul\":15152:15566   */\n    tag_155:\n        /* \"#utility.yul\":15354:15356   */\n      0x20\n        /* \"#utility.yul\":15336:15357   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15393:15395   */\n      0x32\n        /* \"#utility.yul\":15373:15391   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15366:15396   */\n      mstore\n        /* \"#utility.yul\":15432:15466   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":15427:15429   */\n      0x40\n        /* \"#utility.yul\":15412:15430   */\n      dup3\n      add\n        /* \"#utility.yul\":15405:15467   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":15498:15500   */\n      0x60\n        /* \"#utility.yul\":15483:15501   */\n      dup3\n      add\n        /* \"#utility.yul\":15476:15524   */\n      mstore\n        /* \"#utility.yul\":15556:15559   */\n      0x80\n        /* \"#utility.yul\":15541:15560   */\n      add\n      swap1\n        /* \"#utility.yul\":15326:15566   */\n      jump\t// out\n        /* \"#utility.yul\":15571:15970   */\n    tag_252:\n        /* \"#utility.yul\":15773:15775   */\n      0x20\n        /* \"#utility.yul\":15755:15776   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15812:15814   */\n      0x23\n        /* \"#utility.yul\":15792:15810   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15785:15815   */\n      mstore\n        /* \"#utility.yul\":15851:15885   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":15846:15848   */\n      0x40\n        /* \"#utility.yul\":15831:15849   */\n      dup3\n      add\n        /* \"#utility.yul\":15824:15886   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":15917:15919   */\n      0x60\n        /* \"#utility.yul\":15902:15920   */\n      dup3\n      add\n        /* \"#utility.yul\":15895:15928   */\n      mstore\n        /* \"#utility.yul\":15960:15963   */\n      0x80\n        /* \"#utility.yul\":15945:15964   */\n      add\n      swap1\n        /* \"#utility.yul\":15745:15970   */\n      jump\t// out\n        /* \"#utility.yul\":15975:16381   */\n    tag_299:\n        /* \"#utility.yul\":16177:16179   */\n      0x20\n        /* \"#utility.yul\":16159:16180   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16216:16218   */\n      0x2a\n        /* \"#utility.yul\":16196:16214   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16189:16219   */\n      mstore\n        /* \"#utility.yul\":16255:16289   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":16250:16252   */\n      0x40\n        /* \"#utility.yul\":16235:16253   */\n      dup3\n      add\n        /* \"#utility.yul\":16228:16290   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":16321:16323   */\n      0x60\n        /* \"#utility.yul\":16306:16324   */\n      dup3\n      add\n        /* \"#utility.yul\":16299:16339   */\n      mstore\n        /* \"#utility.yul\":16371:16374   */\n      0x80\n        /* \"#utility.yul\":16356:16375   */\n      add\n      swap1\n        /* \"#utility.yul\":16149:16381   */\n      jump\t// out\n        /* \"#utility.yul\":16386:16742   */\n    tag_115:\n        /* \"#utility.yul\":16588:16590   */\n      0x20\n        /* \"#utility.yul\":16570:16591   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16607:16625   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16600:16630   */\n      mstore\n        /* \"#utility.yul\":16666:16700   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16661:16663   */\n      0x40\n        /* \"#utility.yul\":16646:16664   */\n      dup3\n      add\n        /* \"#utility.yul\":16639:16701   */\n      mstore\n        /* \"#utility.yul\":16733:16735   */\n      0x60\n        /* \"#utility.yul\":16718:16736   */\n      add\n      swap1\n        /* \"#utility.yul\":16560:16742   */\n      jump\t// out\n        /* \"#utility.yul\":16747:17152   */\n    tag_308:\n        /* \"#utility.yul\":16949:16951   */\n      0x20\n        /* \"#utility.yul\":16931:16952   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16988:16990   */\n      0x29\n        /* \"#utility.yul\":16968:16986   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16961:16991   */\n      mstore\n        /* \"#utility.yul\":17027:17061   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":17022:17024   */\n      0x40\n        /* \"#utility.yul\":17007:17025   */\n      dup3\n      add\n        /* \"#utility.yul\":17000:17062   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":17093:17095   */\n      0x60\n        /* \"#utility.yul\":17078:17096   */\n      dup3\n      add\n        /* \"#utility.yul\":17071:17110   */\n      mstore\n        /* \"#utility.yul\":17142:17145   */\n      0x80\n        /* \"#utility.yul\":17127:17146   */\n      add\n      swap1\n        /* \"#utility.yul\":16921:17152   */\n      jump\t// out\n        /* \"#utility.yul\":17157:17562   */\n    tag_161:\n        /* \"#utility.yul\":17359:17361   */\n      0x20\n        /* \"#utility.yul\":17341:17362   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17398:17400   */\n      0x29\n        /* \"#utility.yul\":17378:17396   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17371:17401   */\n      mstore\n        /* \"#utility.yul\":17437:17471   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":17432:17434   */\n      0x40\n        /* \"#utility.yul\":17417:17435   */\n      dup3\n      add\n        /* \"#utility.yul\":17410:17472   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":17503:17505   */\n      0x60\n        /* \"#utility.yul\":17488:17506   */\n      dup3\n      add\n        /* \"#utility.yul\":17481:17520   */\n      mstore\n        /* \"#utility.yul\":17552:17555   */\n      0x80\n        /* \"#utility.yul\":17537:17556   */\n      add\n      swap1\n        /* \"#utility.yul\":17331:17562   */\n      jump\t// out\n        /* \"#utility.yul\":17567:17971   */\n    tag_270:\n        /* \"#utility.yul\":17769:17771   */\n      0x20\n        /* \"#utility.yul\":17751:17772   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17808:17810   */\n      0x28\n        /* \"#utility.yul\":17788:17806   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17781:17811   */\n      mstore\n        /* \"#utility.yul\":17847:17881   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":17842:17844   */\n      0x40\n        /* \"#utility.yul\":17827:17845   */\n      dup3\n      add\n        /* \"#utility.yul\":17820:17882   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":17913:17915   */\n      0x60\n        /* \"#utility.yul\":17898:17916   */\n      dup3\n      add\n        /* \"#utility.yul\":17891:17929   */\n      mstore\n        /* \"#utility.yul\":17961:17964   */\n      0x80\n        /* \"#utility.yul\":17946:17965   */\n      add\n      swap1\n        /* \"#utility.yul\":17741:17971   */\n      jump\t// out\n        /* \"#utility.yul\":17976:18373   */\n    tag_267:\n        /* \"#utility.yul\":18178:18180   */\n      0x20\n        /* \"#utility.yul\":18160:18181   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18217:18219   */\n      0x21\n        /* \"#utility.yul\":18197:18215   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18190:18220   */\n      mstore\n        /* \"#utility.yul\":18256:18290   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":18251:18253   */\n      0x40\n        /* \"#utility.yul\":18236:18254   */\n      dup3\n      add\n        /* \"#utility.yul\":18229:18291   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":18322:18324   */\n      0x60\n        /* \"#utility.yul\":18307:18325   */\n      dup3\n      add\n        /* \"#utility.yul\":18300:18331   */\n      mstore\n        /* \"#utility.yul\":18363:18366   */\n      0x80\n        /* \"#utility.yul\":18348:18367   */\n      add\n      swap1\n        /* \"#utility.yul\":18150:18373   */\n      jump\t// out\n        /* \"#utility.yul\":18378:18555   */\n    tag_29:\n        /* \"#utility.yul\":18524:18549   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":18512:18514   */\n      0x20\n        /* \"#utility.yul\":18497:18515   */\n      add\n      swap1\n        /* \"#utility.yul\":18479:18555   */\n      jump\t// out\n        /* \"#utility.yul\":18560:18808   */\n    tag_263:\n        /* \"#utility.yul\":18734:18759   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":18790:18792   */\n      0x20\n        /* \"#utility.yul\":18775:18793   */\n      dup3\n      add\n        /* \"#utility.yul\":18768:18802   */\n      mstore\n        /* \"#utility.yul\":18722:18724   */\n      0x40\n        /* \"#utility.yul\":18707:18725   */\n      add\n      swap1\n        /* \"#utility.yul\":18689:18808   */\n      jump\t// out\n        /* \"#utility.yul\":18813:19005   */\n    tag_401:\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":18904:18910   */\n      dup3\n        /* \"#utility.yul\":18901:18931   */\n      gt\n        /* \"#utility.yul\":18898:18900   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":18934:18952   */\n      tag_528\n      tag_390\n      jump\t// in\n    tag_528:\n      pop\n        /* \"#utility.yul\":18994:18998   */\n      0x20\n        /* \"#utility.yul\":18975:18992   */\n      swap1\n      dup2\n      mul\n        /* \"#utility.yul\":18971:18999   */\n      add\n      swap1\n        /* \"#utility.yul\":18888:19005   */\n      jump\t// out\n        /* \"#utility.yul\":19010:19138   */\n    tag_147:\n      0x00\n        /* \"#utility.yul\":19081:19082   */\n      dup3\n        /* \"#utility.yul\":19077:19083   */\n      not\n        /* \"#utility.yul\":19074:19075   */\n      dup3\n        /* \"#utility.yul\":19071:19084   */\n      gt\n        /* \"#utility.yul\":19068:19070   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":19087:19105   */\n      tag_531\n      tag_532\n      jump\t// in\n    tag_531:\n      pop\n        /* \"#utility.yul\":19123:19132   */\n      add\n      swap1\n        /* \"#utility.yul\":19058:19138   */\n      jump\t// out\n        /* \"#utility.yul\":19143:19268   */\n    tag_196:\n      0x00\n        /* \"#utility.yul\":19211:19212   */\n      dup3\n        /* \"#utility.yul\":19208:19209   */\n      dup3\n        /* \"#utility.yul\":19205:19213   */\n      lt\n        /* \"#utility.yul\":19202:19204   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":19216:19234   */\n      tag_535\n      tag_532\n      jump\t// in\n    tag_535:\n      pop\n        /* \"#utility.yul\":19253:19262   */\n      sub\n      swap1\n        /* \"#utility.yul\":19192:19268   */\n      jump\t// out\n        /* \"#utility.yul\":19273:19409   */\n    tag_130:\n      0x00\n        /* \"#utility.yul\":19340:19345   */\n      dup2\n        /* \"#utility.yul\":19330:19332   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":19349:19367   */\n      tag_538\n      tag_532\n      jump\t// in\n    tag_538:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":19385:19403   */\n      add\n      swap1\n        /* \"#utility.yul\":19320:19409   */\n      jump\t// out\n        /* \"#utility.yul\":19414:19794   */\n    tag_133:\n        /* \"#utility.yul\":19499:19500   */\n      0x02\n        /* \"#utility.yul\":19489:19501   */\n      dup2\n      div\n        /* \"#utility.yul\":19546:19547   */\n      0x01\n        /* \"#utility.yul\":19536:19548   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":19557:19559   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":19611:19615   */\n      0x7f\n        /* \"#utility.yul\":19603:19609   */\n      dup3\n        /* \"#utility.yul\":19599:19616   */\n      and\n        /* \"#utility.yul\":19589:19616   */\n      swap2\n      pop\n        /* \"#utility.yul\":19557:19559   */\n    tag_540:\n        /* \"#utility.yul\":19664:19666   */\n      0x20\n        /* \"#utility.yul\":19656:19662   */\n      dup3\n        /* \"#utility.yul\":19653:19667   */\n      lt\n        /* \"#utility.yul\":19633:19651   */\n      dup2\n        /* \"#utility.yul\":19630:19668   */\n      eq\n        /* \"#utility.yul\":19627:19629   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":19710:19720   */\n      0x4e487b71\n        /* \"#utility.yul\":19705:19708   */\n      0xe0\n        /* \"#utility.yul\":19701:19721   */\n      shl\n        /* \"#utility.yul\":19698:19699   */\n      0x00\n        /* \"#utility.yul\":19691:19722   */\n      mstore\n        /* \"#utility.yul\":19745:19749   */\n      0x22\n        /* \"#utility.yul\":19742:19743   */\n      0x04\n        /* \"#utility.yul\":19735:19750   */\n      mstore\n        /* \"#utility.yul\":19773:19777   */\n      0x24\n        /* \"#utility.yul\":19770:19771   */\n      0x00\n        /* \"#utility.yul\":19763:19778   */\n      revert\n        /* \"#utility.yul\":19627:19629   */\n    tag_541:\n      pop\n        /* \"#utility.yul\":19469:19794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19799:20048   */\n    tag_392:\n        /* \"#utility.yul\":19909:19911   */\n      0x1f\n        /* \"#utility.yul\":19890:19903   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":19886:19913   */\n      and\n        /* \"#utility.yul\":19874:19914   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":19929:19963   */\n      dup2\n      gt\n        /* \"#utility.yul\":19965:19987   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":19926:19988   */\n      or\n        /* \"#utility.yul\":19923:19925   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":19991:20009   */\n      tag_544\n      tag_390\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":20027:20029   */\n      0x40\n        /* \"#utility.yul\":20020:20042   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":19846:20048   */\n      jump\t// out\n        /* \"#utility.yul\":20053:20188   */\n    tag_172:\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":20113:20130   */\n      dup3\n      eq\n        /* \"#utility.yul\":20110:20112   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":20133:20151   */\n      tag_547\n      tag_532\n      jump\t// in\n    tag_547:\n      pop\n        /* \"#utility.yul\":20180:20181   */\n      0x01\n        /* \"#utility.yul\":20169:20182   */\n      add\n      swap1\n        /* \"#utility.yul\":20100:20188   */\n      jump\t// out\n        /* \"#utility.yul\":20193:20320   */\n    tag_532:\n        /* \"#utility.yul\":20254:20264   */\n      0x4e487b71\n        /* \"#utility.yul\":20249:20252   */\n      0xe0\n        /* \"#utility.yul\":20245:20265   */\n      shl\n        /* \"#utility.yul\":20242:20243   */\n      0x00\n        /* \"#utility.yul\":20235:20266   */\n      mstore\n        /* \"#utility.yul\":20285:20289   */\n      0x11\n        /* \"#utility.yul\":20282:20283   */\n      0x04\n        /* \"#utility.yul\":20275:20290   */\n      mstore\n        /* \"#utility.yul\":20309:20313   */\n      0x24\n        /* \"#utility.yul\":20306:20307   */\n      0x00\n        /* \"#utility.yul\":20299:20314   */\n      revert\n        /* \"#utility.yul\":20325:20452   */\n    tag_390:\n        /* \"#utility.yul\":20386:20396   */\n      0x4e487b71\n        /* \"#utility.yul\":20381:20384   */\n      0xe0\n        /* \"#utility.yul\":20377:20397   */\n      shl\n        /* \"#utility.yul\":20374:20375   */\n      0x00\n        /* \"#utility.yul\":20367:20398   */\n      mstore\n        /* \"#utility.yul\":20417:20421   */\n      0x41\n        /* \"#utility.yul\":20414:20415   */\n      0x04\n        /* \"#utility.yul\":20407:20422   */\n      mstore\n        /* \"#utility.yul\":20441:20445   */\n      0x24\n        /* \"#utility.yul\":20438:20439   */\n      0x00\n        /* \"#utility.yul\":20431:20446   */\n      revert\n        /* \"#utility.yul\":20457:20642   */\n    tag_343:\n      0x00\n        /* \"#utility.yul\":20534:20535   */\n      0x03\n        /* \"#utility.yul\":20516:20532   */\n      returndatasize\n        /* \"#utility.yul\":20513:20536   */\n      gt\n        /* \"#utility.yul\":20510:20512   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":20584:20585   */\n      0x04\n        /* \"#utility.yul\":20579:20582   */\n      dup2\n        /* \"#utility.yul\":20574:20577   */\n      dup3\n        /* \"#utility.yul\":20559:20586   */\n      returndatacopy\n        /* \"#utility.yul\":20615:20625   */\n      mload\n        /* \"#utility.yul\":20610:20613   */\n      0xe0\n        /* \"#utility.yul\":20606:20626   */\n      shr\n        /* \"#utility.yul\":20500:20642   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20647:21318   */\n    tag_345:\n      0x00\n        /* \"#utility.yul\":20728:20732   */\n      0x44\n        /* \"#utility.yul\":20710:20726   */\n      returndatasize\n        /* \"#utility.yul\":20707:20733   */\n      lt\n        /* \"#utility.yul\":20704:20706   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":20736:20741   */\n      jump(tag_203)\n        /* \"#utility.yul\":20704:20706   */\n    tag_553:\n        /* \"#utility.yul\":20770:20772   */\n      0x40\n        /* \"#utility.yul\":20764:20773   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":20835:20851   */\n      returndatasize\n        /* \"#utility.yul\":20831:20856   */\n      dup2\n      add\n        /* \"#utility.yul\":20828:20829   */\n      0x04\n        /* \"#utility.yul\":20764:20773   */\n      dup4\n        /* \"#utility.yul\":20807:20857   */\n      returndatacopy\n        /* \"#utility.yul\":20886:20890   */\n      dup2\n        /* \"#utility.yul\":20880:20891   */\n      mload\n        /* \"#utility.yul\":20910:20926   */\n      returndatasize\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":21016:21018   */\n      dup2\n        /* \"#utility.yul\":21009:21013   */\n      0x24\n        /* \"#utility.yul\":21001:21007   */\n      dup5\n        /* \"#utility.yul\":20997:21014   */\n      add\n        /* \"#utility.yul\":20994:21019   */\n      gt\n        /* \"#utility.yul\":20989:20991   */\n      dup2\n        /* \"#utility.yul\":20981:20987   */\n      dup5\n        /* \"#utility.yul\":20978:20992   */\n      gt\n        /* \"#utility.yul\":20975:21020   */\n      or\n        /* \"#utility.yul\":20972:20974   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":21023:21028   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_203)\n        /* \"#utility.yul\":20972:20974   */\n    tag_554:\n        /* \"#utility.yul\":21060:21066   */\n      dup3\n        /* \"#utility.yul\":21054:21058   */\n      dup6\n        /* \"#utility.yul\":21050:21067   */\n      add\n        /* \"#utility.yul\":21039:21067   */\n      swap2\n      pop\n        /* \"#utility.yul\":21096:21099   */\n      dup2\n        /* \"#utility.yul\":21090:21100   */\n      mload\n        /* \"#utility.yul\":21123:21125   */\n      dup2\n        /* \"#utility.yul\":21115:21121   */\n      dup2\n        /* \"#utility.yul\":21112:21126   */\n      gt\n        /* \"#utility.yul\":21109:21111   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":21129:21134   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_203)\n        /* \"#utility.yul\":21109:21111   */\n    tag_555:\n        /* \"#utility.yul\":21213:21215   */\n      dup5\n        /* \"#utility.yul\":21194:21210   */\n      returndatasize\n        /* \"#utility.yul\":21188:21192   */\n      dup8\n        /* \"#utility.yul\":21184:21211   */\n      add\n        /* \"#utility.yul\":21180:21216   */\n      add\n        /* \"#utility.yul\":21173:21177   */\n      0x20\n        /* \"#utility.yul\":21164:21170   */\n      dup3\n        /* \"#utility.yul\":21159:21162   */\n      dup6\n        /* \"#utility.yul\":21155:21171   */\n      add\n        /* \"#utility.yul\":21151:21178   */\n      add\n        /* \"#utility.yul\":21148:21217   */\n      gt\n        /* \"#utility.yul\":21145:21147   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":21220:21225   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_203)\n        /* \"#utility.yul\":21145:21147   */\n    tag_556:\n        /* \"#utility.yul\":21236:21293   */\n      tag_557\n        /* \"#utility.yul\":21287:21291   */\n      0x20\n        /* \"#utility.yul\":21278:21284   */\n      dup3\n        /* \"#utility.yul\":21270:21276   */\n      dup7\n        /* \"#utility.yul\":21266:21285   */\n      add\n        /* \"#utility.yul\":21262:21292   */\n      add\n        /* \"#utility.yul\":21256:21260   */\n      dup8\n        /* \"#utility.yul\":21236:21293   */\n      tag_392\n      jump\t// in\n    tag_557:\n      pop\n        /* \"#utility.yul\":21309:21312   */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20694:21318   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21323:21456   */\n    tag_469:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":21399:21431   */\n      dup2\n      and\n        /* \"#utility.yul\":21389:21432   */\n      dup2\n      eq\n        /* \"#utility.yul\":21379:21381   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":21446:21447   */\n      0x00\n        /* \"#utility.yul\":21443:21444   */\n      dup1\n        /* \"#utility.yul\":21436:21448   */\n      revert\n\n    auxdata: 0xa2646970667358221220a7db0017a09786ba80b41ae1ec8dad397747aababf9200001a5c9ee13bad5ac364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "93:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "99:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:10"
															},
															"nodeType": "YulIf",
															"src": "157:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:10"
															},
															"nodeType": "YulIf",
															"src": "227:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:10",
														"type": ""
													}
												],
												"src": "14:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x234F PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x52 JUMP JUMPDEST POP PUSH3 0x4C PUSH3 0x46 PUSH3 0x6B JUMP JUMPDEST PUSH3 0x6F JUMP JUMPDEST PUSH3 0x1A4 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x67 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC1 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCF SWAP1 PUSH3 0x167 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x121 JUMP JUMPDEST POP PUSH3 0x14C SWAP3 SWAP2 POP PUSH3 0x150 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x151 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x17C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x19E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219B DUP1 PUSH3 0x1B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x229 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x85E JUMP JUMPDEST PUSH2 0x21C PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x156 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x318 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x348 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x377 DUP2 PUSH2 0xAF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x382 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3A8 JUMPI POP PUSH2 0x3A8 DUP4 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x3CF DUP4 DUP4 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x3DE SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3F6 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x422 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x46F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x444 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x452 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x483 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x494 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x4C6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC17 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x50C JUMPI POP PUSH2 0x50C DUP6 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x535 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x653 JUMPI PUSH2 0x618 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x60B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x290 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x64C DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x663 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x674 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x6A4 PUSH1 0x0 PUSH2 0xF69 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6BF PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x70D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x736 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x78A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x79F SWAP1 DUP6 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x82C JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x80F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x824 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP PUSH2 0x848 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x89C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x919 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x928 DUP7 DUP7 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP1 DUP4 PUSH2 0x93B DUP9 DUP4 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x959 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x971 DUP9 DUP5 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x98F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9A4 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91E JUMP JUMPDEST POP PUSH2 0x535 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x9D4 PUSH2 0xAF1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA41 JUMPI POP PUSH2 0xA41 DUP6 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x535 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xA72 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA83 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0x377 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9DB SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB38 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB68 DUP2 DUP6 PUSH1 0x0 PUSH2 0xB4A DUP8 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xB53 DUP8 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP7 SUB SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP6 AND SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 PUSH2 0xC08 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC79 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC7C JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x535 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11FA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEE0 SWAP1 DUP5 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEF4 SWAP1 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP PUSH2 0xDFC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF61 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11FA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x1051 SWAP1 DUP6 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1084 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x10AE DUP2 DUP8 DUP8 PUSH2 0x109F DUP9 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0x10A8 DUP9 PUSH2 0x11A1 JUMP JUMPDEST DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x112C SWAP1 DUP5 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1198 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 JUMP JUMPDEST ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1245 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x128F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x128C SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12EF JUMPI PUSH2 0x129B PUSH2 0x20A7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x12D5 JUMPI POP PUSH2 0x12B0 PUSH2 0x20BE JUMP JUMPDEST DUP1 PUSH2 0x12BB JUMPI POP PUSH2 0x12D7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x1331 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 JUMP JUMPDEST ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x136A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13B4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13B1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C0 JUMPI PUSH2 0x129B PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1402 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1424 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x146A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x143D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x146A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x146A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x146A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x144F JUMP JUMPDEST POP PUSH2 0x1476 SWAP3 SWAP2 POP PUSH2 0x147A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x147B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A8 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14BF PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1513 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1520 DUP3 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152D DUP3 DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x154A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1568 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x154C JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1585 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1594 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x148F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1594 DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15D0 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x15DE PUSH1 0x20 DUP5 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15FE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1607 DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP PUSH2 0x1615 PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1630 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x163C DUP10 DUP4 DUP11 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1651 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x165D DUP10 DUP4 DUP11 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1672 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x167F DUP9 DUP3 DUP10 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x16AC DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP PUSH2 0x16BA PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16E2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x167F DUP9 DUP3 DUP10 ADD PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1703 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x170C DUP6 PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1727 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1733 DUP9 DUP4 DUP10 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1748 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1754 DUP9 DUP4 DUP10 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1769 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1776 DUP8 DUP3 DUP9 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1794 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x179D DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17B1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x17D7 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17F9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1802 DUP5 PUSH2 0x14EC JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1829 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x183F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1852 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x185F DUP3 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186C DUP3 DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1889 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x189E DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x188D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18C8 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x18D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1594 DUP2 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1594 DUP2 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x193D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x194D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x195C DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x148F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1990 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19A7 PUSH1 0x40 DUP6 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19C3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x19F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A20 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A75 SWAP1 DUP4 ADD DUP7 PUSH2 0x19B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A87 DUP2 DUP7 PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A9B DUP2 DUP6 PUSH2 0x19EA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AE1 SWAP1 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x1B12 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B24 DUP2 DUP6 PUSH2 0x19B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1FA9 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x207B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDD PUSH2 0x207B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1FF1 JUMPI PUSH2 0x1FF1 PUSH2 0x207B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x200D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x202E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2059 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2074 PUSH2 0x207B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x871 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x20FF JUMPI POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2119 JUMPI POP POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2135 JUMPI POP POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST PUSH2 0x2144 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x2034 JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xDB STOP OR LOG0 SWAP8 DUP7 0xBA DUP1 0xB4 BYTE 0xE1 0xEC DUP14 0xAD CODECOPY PUSH24 0x47AABABF9200001A5C9EE13BAD5AC364736F6C6343000801 STOP CALLER PUSH9 0x747470733A2F2F6761 PUSH14 0x652E6578616D706C652F6170692F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
							"sourceMap": "184:1847:0:-:0;;;269:73;;;;;;;;;;1092:62:2;;;;;;;;;;;;;;;;;1134:13;1142:4;1134:7;:13::i;:::-;-1:-1:-1;921:32:1;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;184:1847:0;;7936:86:2;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;640:96:7:-;719:10;640:96;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;184:1847:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;184:1847:0;;;-1:-1:-1;184:1847:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;184:1847:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21458:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:394:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "134:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "136:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "136:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "136:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "106:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "114:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "103:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:30:10"
															},
															"nodeType": "YulIf",
															"src": "100:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "185:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "169:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "217:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "237:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "233:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "233:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "254:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "250:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "250:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "229:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "229:29:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "260:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "225:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "225:40:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "197:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:69:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "275:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "284:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "275:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "306:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "314:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "359:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "368:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "371:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "361:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "361:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "361:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "340:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "345:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "336:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "354:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "333:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:25:10"
															},
															"nodeType": "YulIf",
															"src": "330:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "401:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "409:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "416:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "421:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "384:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "384:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "452:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "460:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "448:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "448:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "469:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "444:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "476:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "437:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "59:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "64:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "72:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "80:5:10",
														"type": ""
													}
												],
												"src": "14:470:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "540:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "550:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "572:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "559:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "550:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "642:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "651:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "654:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "644:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "644:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "644:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "601:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "612:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "627:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "632:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "623:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "623:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "636:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "619:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "619:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "608:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "608:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "598:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:50:10"
															},
															"nodeType": "YulIf",
															"src": "588:2:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "519:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "530:5:10",
														"type": ""
													}
												],
												"src": "489:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:698:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "788:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "797:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "804:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "790:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "790:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "767:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "775:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "759:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "752:35:10"
															},
															"nodeType": "YulIf",
															"src": "749:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "821:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "844:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "831:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "825:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "860:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "870:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "864:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "883:59:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "939:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "893:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:49:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "887:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "951:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "955:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1003:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1011:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "983:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "983:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1023:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1034:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1027:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1056:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1064:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1076:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1087:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1095:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1083:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1107:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1122:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1130:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1118:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1111:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1188:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1197:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1204:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1190:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1190:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1190:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1156:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1168:2:10"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "1172:2:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1164:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1164:11:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:24:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1178:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1148:33:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1183:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1145:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:42:10"
															},
															"nodeType": "YulIf",
															"src": "1142:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1221:14:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1230:5:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1225:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1289:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1310:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1328:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1315:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1315:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1303:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1303:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1303:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1346:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1357:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1362:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1353:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1353:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1346:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1378:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1389:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1394:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1385:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1385:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1378:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1255:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1258:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1252:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1262:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1264:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1273:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1269:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1269:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1264:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1248:3:10",
																"statements": []
															},
															"src": "1244:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1416:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1425:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "713:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "721:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "729:5:10",
														"type": ""
													}
												],
												"src": "669:768:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1496:178:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1545:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1554:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1561:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1547:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1547:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1547:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1524:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1532:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1520:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1520:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1539:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1516:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:35:10"
															},
															"nodeType": "YulIf",
															"src": "1506:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1578:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1635:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1655:6:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1642:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1642:20:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1664:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1587:35:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1578:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1470:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1478:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1486:5:10",
														"type": ""
													}
												],
												"src": "1442:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1749:128:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1795:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1804:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1812:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1770:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1779:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1766:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1762:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:32:10"
															},
															"nodeType": "YulIf",
															"src": "1759:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1830:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1861:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1840:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1715:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1726:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1738:6:10",
														"type": ""
													}
												],
												"src": "1679:198:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:187:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2015:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2024:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:32:10"
															},
															"nodeType": "YulIf",
															"src": "1979:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2050:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2060:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2100:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2110:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1927:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1938:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1950:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1958:6:10",
														"type": ""
													}
												],
												"src": "1882:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2358:804:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2405:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2414:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2422:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2407:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2407:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2407:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2379:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2388:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:33:10"
															},
															"nodeType": "YulIf",
															"src": "2368:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2440:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2450:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2490:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2536:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2521:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2500:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2500:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2549:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2591:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2563:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2553:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2604:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2614:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2608:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2659:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2668:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2676:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2661:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2661:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2647:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2655:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2644:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:14:10"
															},
															"nodeType": "YulIf",
															"src": "2641:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2694:77:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2739:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2763:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2704:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:67:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2694:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2780:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2796:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2784:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2857:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2866:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2874:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2859:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2859:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2843:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2840:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:16:10"
															},
															"nodeType": "YulIf",
															"src": "2837:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2892:79:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2941:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2952:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2963:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2902:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:69:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2980:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3024:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3009:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2996:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2984:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3058:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3067:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3075:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3060:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3060:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3060:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3044:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3054:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:16:10"
															},
															"nodeType": "YulIf",
															"src": "3038:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3093:63:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3137:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3148:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3103:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3103:53:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3093:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2292:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2303:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2315:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2323:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2331:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2339:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2347:6:10",
														"type": ""
													}
												],
												"src": "2161:1001:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3314:485:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3361:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3370:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3378:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3363:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3363:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3335:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3344:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3327:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:33:10"
															},
															"nodeType": "YulIf",
															"src": "3324:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3406:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3446:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3492:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3456:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3505:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3543:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3515:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3556:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3566:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3556:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3607:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3621:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3611:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3697:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3706:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3714:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3699:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3699:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3699:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3669:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3677:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3666:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:30:10"
															},
															"nodeType": "YulIf",
															"src": "3663:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3732:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3765:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3776:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3785:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3742:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3742:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3248:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3259:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3271:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3279:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3287:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3295:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3303:6:10",
														"type": ""
													}
												],
												"src": "3167:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3984:744:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4031:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4040:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4048:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4033:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4033:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4033:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4005:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3997:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:33:10"
															},
															"nodeType": "YulIf",
															"src": "3994:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4066:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4097:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4076:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4076:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4066:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4116:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4158:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4143:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4130:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4120:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4171:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4181:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4175:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4226:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4235:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4243:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4228:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4228:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4228:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4214:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4222:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4211:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:14:10"
															},
															"nodeType": "YulIf",
															"src": "4208:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:77:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4306:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4330:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4271:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:67:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4347:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4380:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4391:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4363:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4351:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4424:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:10"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4441:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4426:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4426:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4410:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4420:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4407:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:16:10"
															},
															"nodeType": "YulIf",
															"src": "4404:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4459:79:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4519:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4504:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4530:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4469:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:69:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4547:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4591:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4563:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4551:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4624:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4633:6:10"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4641:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4626:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4626:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4610:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4620:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4607:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:16:10"
															},
															"nodeType": "YulIf",
															"src": "4604:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4659:63:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4692:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4703:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4688:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4714:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4669:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:53:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3926:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3937:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3949:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3957:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3965:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3973:6:10",
														"type": ""
													}
												],
												"src": "3804:924:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:285:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4863:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4872:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4880:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4865:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4865:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4865:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4838:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4847:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4834:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:32:10"
															},
															"nodeType": "YulIf",
															"src": "4827:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4898:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4929:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4908:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4948:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4961:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4952:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5046:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5055:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5063:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5015:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5036:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5029:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5029:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5022:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5022:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5012:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5012:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:40:10"
															},
															"nodeType": "YulIf",
															"src": "5002:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5081:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5091:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5081:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4775:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4786:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4798:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4806:6:10",
														"type": ""
													}
												],
												"src": "4733:369:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5194:179:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5240:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5249:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5257:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5242:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5242:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5215:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5224:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5236:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5207:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:32:10"
															},
															"nodeType": "YulIf",
															"src": "5204:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5306:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5285:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5325:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5352:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5363:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5335:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5152:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5163:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5175:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5183:6:10",
														"type": ""
													}
												],
												"src": "5107:266:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5482:230:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5528:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5537:6:10"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5545:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5530:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5530:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5503:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5499:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5524:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:32:10"
															},
															"nodeType": "YulIf",
															"src": "5492:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5563:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5594:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5573:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5613:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5651:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5623:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5664:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5691:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5702:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5674:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5432:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5443:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5455:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5463:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5471:6:10",
														"type": ""
													}
												],
												"src": "5378:334:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5854:1152:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5900:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5909:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5917:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5902:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5902:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5902:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5875:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5884:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5871:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5867:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:32:10"
															},
															"nodeType": "YulIf",
															"src": "5864:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5935:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5962:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5949:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5939:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5991:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5985:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6036:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6045:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6053:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6038:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6038:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6038:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6024:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6032:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6021:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:14:10"
															},
															"nodeType": "YulIf",
															"src": "6018:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6071:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6085:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6096:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6075:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6151:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6160:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6168:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6153:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6153:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6153:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6130:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6134:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6126:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6126:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6141:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6122:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6122:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6115:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:35:10"
															},
															"nodeType": "YulIf",
															"src": "6112:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6186:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6209:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6196:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6196:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6190:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6221:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6231:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6225:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6244:59:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6300:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6254:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:49:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6248:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6312:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6326:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6316:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6372:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6344:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6344:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6384:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6395:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6388:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6425:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6410:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6437:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6448:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6456:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6468:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6483:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6487:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6479:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6472:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6545:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6554:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6562:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6547:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6547:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6547:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6513:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "6521:2:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "6525:2:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6517:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6517:11:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6509:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6509:20:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6531:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6505:29:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6536:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6502:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:42:10"
															},
															"nodeType": "YulIf",
															"src": "6499:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6580:15:10",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "6589:6:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6584:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6649:126:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6670:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6696:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "6675:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:25:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6663:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6663:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6663:38:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6714:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6725:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6730:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6721:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6721:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6714:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6746:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6762:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6753:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6753:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6746:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6615:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6618:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6612:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6622:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6624:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6633:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6636:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6629:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6629:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6624:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6608:3:10",
																"statements": []
															},
															"src": "6604:171:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6784:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6794:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6809:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6842:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6853:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6838:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6825:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6813:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6886:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "6895:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "6903:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6888:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6888:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6872:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6882:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:16:10"
															},
															"nodeType": "YulIf",
															"src": "6866:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6921:79:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6981:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6992:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6931:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:69:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5812:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5823:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5835:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5843:6:10",
														"type": ""
													}
												],
												"src": "5717:1289:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7080:188:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7126:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7135:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7143:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7128:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7128:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7128:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7101:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7110:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7097:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:32:10"
															},
															"nodeType": "YulIf",
															"src": "7090:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7161:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7187:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7174:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7165:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7232:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "7206:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7206:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7247:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7257:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7046:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7057:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7069:6:10",
														"type": ""
													}
												],
												"src": "7011:257:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7353:181:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7399:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7408:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7416:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7401:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7401:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7401:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7374:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7383:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7370:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7366:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:32:10"
															},
															"nodeType": "YulIf",
															"src": "7363:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7434:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7453:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7447:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7438:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7498:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "7472:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7472:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7523:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7513:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7319:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7330:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7342:6:10",
														"type": ""
													}
												],
												"src": "7273:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7619:402:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7665:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7674:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7682:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7667:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7667:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7667:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7640:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7649:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7636:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7661:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7632:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7632:32:10"
															},
															"nodeType": "YulIf",
															"src": "7629:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7700:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7727:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7714:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7704:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7780:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7789:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7797:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7782:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7782:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7782:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7752:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7760:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7749:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:30:10"
															},
															"nodeType": "YulIf",
															"src": "7746:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7815:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7829:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7840:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7825:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7819:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7895:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7904:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "7912:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7897:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7897:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7897:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7874:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7878:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7870:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7870:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7885:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7866:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7859:35:10"
															},
															"nodeType": "YulIf",
															"src": "7856:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7930:85:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7980:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7984:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7976:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8002:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7989:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8007:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7940:35:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7940:75:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7930:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7585:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7596:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7608:6:10",
														"type": ""
													}
												],
												"src": "7539:482:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8096:120:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8142:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "8151:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "8159:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8144:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8144:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8144:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8117:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8126:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8113:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8138:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8109:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:32:10"
															},
															"nodeType": "YulIf",
															"src": "8106:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8177:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8200:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8187:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8177:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8062:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8073:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8085:6:10",
														"type": ""
													}
												],
												"src": "8026:190:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8325:230:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8371:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8380:6:10"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "8388:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8373:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8373:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8373:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8346:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8355:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8367:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:32:10"
															},
															"nodeType": "YulIf",
															"src": "8335:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8406:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8429:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8416:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8448:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8486:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8471:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8458:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8448:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8499:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8545:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8530:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8509:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:40:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8499:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8275:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8286:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8298:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8306:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8314:6:10",
														"type": ""
													}
												],
												"src": "8221:334:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8627:376:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8637:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8657:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8651:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8641:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8684:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8672:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8672:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8672:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8700:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8710:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8704:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8723:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8734:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8739:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8751:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8769:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8776:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8755:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8788:12:10",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "8797:3:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8792:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8858:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8879:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8890:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8884:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8884:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8872:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8872:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8872:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8911:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8922:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8927:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8918:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8918:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8911:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8943:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8957:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8965:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8953:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8953:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8943:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8820:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8823:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8817:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8831:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8833:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8842:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8845:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8838:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8838:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8833:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8813:3:10",
																"statements": []
															},
															"src": "8809:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8987:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8994:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8987:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8604:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8611:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8619:3:10",
														"type": ""
													}
												],
												"src": "8560:443:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9059:426:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9069:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9089:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9083:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9083:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9073:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9111:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9116:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9104:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9132:12:10",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "9141:3:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9136:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9205:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9219:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9229:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "9223:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "9261:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9266:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9257:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9257:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "9270:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9253:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9253:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "9289:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "9296:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "9285:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9285:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "9300:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9281:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9281:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9275:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9275:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9246:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9246:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9246:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9164:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9167:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9161:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9161:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9175:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9177:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9186:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9189:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9182:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9182:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9177:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9157:3:10",
																"statements": []
															},
															"src": "9153:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9349:64:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "9378:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "9383:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9374:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9374:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9392:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9370:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9370:27:10"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "9399:3:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9363:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9363:40:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9330:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9333:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9327:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9327:13:10"
															},
															"nodeType": "YulIf",
															"src": "9324:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9422:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9437:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9450:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9458:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9446:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9446:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9467:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9463:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9463:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9442:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9442:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9433:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9429:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9036:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9043:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9051:3:10",
														"type": ""
													}
												],
												"src": "9008:477:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9591:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9601:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9613:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9624:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9609:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9609:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9601:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9643:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9658:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9674:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9679:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9670:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9670:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9683:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9666:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9666:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9636:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9636:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9560:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9571:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9582:4:10",
														"type": ""
													}
												],
												"src": "9490:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10029:509:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10039:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10057:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10062:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10053:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10053:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10066:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10043:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10084:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10099:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10107:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10095:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10077:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10077:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10131:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10142:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10127:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10151:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10159:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10147:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10147:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10183:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10194:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10179:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10199:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10172:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10172:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10212:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10261:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10273:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10284:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10269:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10269:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10226:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10226:63:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10216:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10309:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10320:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10305:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10329:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10325:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10298:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10357:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10406:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10414:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10371:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:50:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "10361:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10441:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10452:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10437:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10437:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "10462:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10470:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10430:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10430:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10490:42:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10517:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "10525:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10498:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10498:34:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10490:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9966:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9977:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9985:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9993:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10001:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10009:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10020:4:10",
														"type": ""
													}
												],
												"src": "9698:840:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10774:331:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10784:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10802:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10807:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10798:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10811:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10794:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10788:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10829:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10844:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10852:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10840:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10822:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10876:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10887:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10872:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10872:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10896:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10904:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10892:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10892:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10865:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10865:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10939:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10924:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10944:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10917:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10917:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10917:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10971:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10982:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10967:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10987:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10960:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10960:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11014:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11025:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11010:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11010:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11031:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11003:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11003:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11044:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11071:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11083:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11094:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11079:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11079:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11052:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11052:47:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11044:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10711:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10722:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10730:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10738:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10746:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10754:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10765:4:10",
														"type": ""
													}
												],
												"src": "10543:562:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11261:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11278:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11289:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11301:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11344:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11356:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11367:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11352:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11309:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11309:62:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11301:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11230:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11241:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11252:4:10",
														"type": ""
													}
												],
												"src": "11110:267:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11611:248:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11628:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11639:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11621:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11621:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11621:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11651:76:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11700:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11712:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11723:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11708:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11665:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:62:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11655:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11767:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11775:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11763:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11795:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11838:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11846:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11803:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:50:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11795:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11572:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11583:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11591:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11602:4:10",
														"type": ""
													}
												],
												"src": "11382:477:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11959:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11969:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11981:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11977:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11977:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11969:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12011:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "12036:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12029:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12029:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12022:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12022:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12004:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12004:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11928:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11950:4:10",
														"type": ""
													}
												],
												"src": "11864:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12177:100:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12194:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12205:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12217:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12244:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12256:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12267:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12252:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12252:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "12225:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12217:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12146:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12157:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12168:4:10",
														"type": ""
													}
												],
												"src": "12056:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12456:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12473:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12507:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12518:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12503:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12523:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12546:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12557:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12542:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12562:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12535:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12535:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12617:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12628:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12613:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12613:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12633:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12606:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12606:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12606:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12665:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12677:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12688:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12673:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12665:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12433:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12447:4:10",
														"type": ""
													}
												],
												"src": "12282:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12877:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12894:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12905:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12887:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12887:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12887:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12939:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12924:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12944:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12917:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12917:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12917:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12967:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12978:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12963:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12963:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12983:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12956:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12956:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12956:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13038:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13049:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13034:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13034:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13054:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13027:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13027:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13074:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13086:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13097:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13082:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13082:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12854:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12868:4:10",
														"type": ""
													}
												],
												"src": "12703:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13286:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13303:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13314:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13296:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13296:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13337:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13348:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13333:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13353:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13326:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13326:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13376:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13387:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13372:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13372:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13392:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13365:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13365:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13365:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13447:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13458:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13443:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13443:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13463:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13436:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13436:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13486:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13498:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13509:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13486:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13263:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13277:4:10",
														"type": ""
													}
												],
												"src": "13112:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13698:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13715:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13726:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13749:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13760:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13745:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13738:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13738:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13799:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13784:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13784:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13804:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13777:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13777:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13777:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13859:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13870:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13855:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13875:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13848:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13893:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13905:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13916:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13901:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13901:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13893:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13675:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13689:4:10",
														"type": ""
													}
												],
												"src": "13524:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14105:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14122:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14133:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14115:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14115:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14115:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14167:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14172:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14145:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14195:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14206:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14191:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14211:34:10",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14184:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14184:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14266:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14277:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14262:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14262:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14282:6:10",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14255:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14255:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14298:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14310:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14321:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14306:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14306:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14298:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14082:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14096:4:10",
														"type": ""
													}
												],
												"src": "13931:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14510:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14527:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14538:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14520:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14520:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14520:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14561:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14572:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14557:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14577:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14550:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14550:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14550:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14600:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14611:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14596:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14616:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14589:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14589:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14589:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14671:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14682:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14667:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14667:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14687:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14660:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14660:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14708:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14720:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14731:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14716:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14716:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14708:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14487:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14501:4:10",
														"type": ""
													}
												],
												"src": "14336:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14920:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14937:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14948:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14930:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14930:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14930:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14971:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14982:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14967:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14987:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14960:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15010:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15021:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15006:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15006:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15026:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14999:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14999:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14999:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15092:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15077:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15097:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15070:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15070:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15070:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15114:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15126:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15122:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15114:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14897:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14911:4:10",
														"type": ""
													}
												],
												"src": "14746:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15326:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15343:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15354:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15336:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15336:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15377:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15388:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15373:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15393:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15366:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15366:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15366:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15416:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15427:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15412:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15412:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15432:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15405:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15405:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15405:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15498:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15483:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15503:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15476:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15476:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15533:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15545:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15556:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15541:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15541:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15533:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15303:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15317:4:10",
														"type": ""
													}
												],
												"src": "15152:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15745:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15762:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15773:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15755:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15755:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15807:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15792:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15812:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15785:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15785:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15785:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15846:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15831:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15851:34:10",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15824:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15824:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15906:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15917:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15922:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15895:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15895:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15895:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15937:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15949:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15960:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15945:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15937:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15722:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15736:4:10",
														"type": ""
													}
												],
												"src": "15571:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16149:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16166:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16177:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16159:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16159:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16200:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16211:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16196:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16216:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16189:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16189:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16189:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16239:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16250:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16235:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16255:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16228:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16228:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16310:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16321:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16306:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16306:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16326:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16299:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16348:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16360:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16371:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16356:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16356:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16348:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16126:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16140:4:10",
														"type": ""
													}
												],
												"src": "15975:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16560:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16577:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16588:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16570:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16570:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16570:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16611:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16622:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16627:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16600:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16650:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16661:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16646:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16646:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16666:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16639:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16639:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16639:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16710:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16722:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16733:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16718:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16710:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16537:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16551:4:10",
														"type": ""
													}
												],
												"src": "16386:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16921:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16938:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16931:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16931:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16931:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16972:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16983:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16968:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16988:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16961:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16961:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17011:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17022:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17007:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17007:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17027:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17000:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17000:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17000:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17082:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17093:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17078:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17078:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17098:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17071:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17071:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17071:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17119:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17131:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17142:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17127:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17127:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17119:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16898:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16912:4:10",
														"type": ""
													}
												],
												"src": "16747:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17331:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17348:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17359:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17341:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17341:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17341:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17382:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17393:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17378:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17378:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17398:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17371:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17371:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17432:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17417:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17437:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17410:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17410:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17492:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17503:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17488:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17488:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17508:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17481:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17481:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17481:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17529:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17541:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17552:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17537:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17537:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17529:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17308:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17322:4:10",
														"type": ""
													}
												],
												"src": "17157:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17741:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17758:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17769:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17751:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17751:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17803:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17788:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17808:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17781:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17781:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17781:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17831:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17842:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17827:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17847:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17820:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17820:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17820:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17913:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17898:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17918:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17891:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17891:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17938:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17950:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17961:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17946:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17938:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17718:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17732:4:10",
														"type": ""
													}
												],
												"src": "17567:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18150:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18167:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18178:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18160:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18160:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18201:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18212:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18197:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18197:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18217:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18190:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18190:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18190:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18251:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18236:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18256:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18229:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18229:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18229:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18307:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18327:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18300:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18300:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18340:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18352:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18363:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18348:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18348:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18340:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18127:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18141:4:10",
														"type": ""
													}
												],
												"src": "17976:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18479:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18489:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18501:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18512:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18497:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18497:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18489:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18531:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18542:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18524:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18524:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18524:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18448:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18459:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18470:4:10",
														"type": ""
													}
												],
												"src": "18378:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18689:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18722:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18741:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18752:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18734:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18734:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18779:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18790:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18775:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18795:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18768:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18768:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18768:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18650:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18661:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18669:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18680:4:10",
														"type": ""
													}
												],
												"src": "18560:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18888:117:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18932:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18934:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18934:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18934:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18904:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18912:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18901:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18901:30:10"
															},
															"nodeType": "YulIf",
															"src": "18898:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18963:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18979:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18987:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "18975:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18975:17:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18994:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18971:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18971:28:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18963:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18868:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18879:4:10",
														"type": ""
													}
												],
												"src": "18813:192:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19058:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19085:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19087:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19087:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19087:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19074:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19081:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19077:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19071:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19071:13:10"
															},
															"nodeType": "YulIf",
															"src": "19068:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19116:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19127:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19130:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19123:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19123:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19116:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19041:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19044:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19050:3:10",
														"type": ""
													}
												],
												"src": "19010:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19192:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19214:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19216:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19216:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19216:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19208:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19211:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19205:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19205:8:10"
															},
															"nodeType": "YulIf",
															"src": "19202:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19245:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19257:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19260:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19253:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19245:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19174:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19177:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19183:4:10",
														"type": ""
													}
												],
												"src": "19143:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19320:89:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19347:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19349:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19349:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19349:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19340:5:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19333:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19333:13:10"
															},
															"nodeType": "YulIf",
															"src": "19330:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19378:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19389:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19400:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19396:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19385:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19385:18:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19378:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19302:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19312:3:10",
														"type": ""
													}
												],
												"src": "19273:136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19469:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19479:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19493:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19499:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19489:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19489:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19479:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19510:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19540:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19546:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19536:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19536:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "19514:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19587:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19589:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "19603:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19611:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "19599:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19599:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19589:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19567:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19560:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19560:26:10"
															},
															"nodeType": "YulIf",
															"src": "19557:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19677:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19698:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19705:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19710:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "19701:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19701:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19691:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19691:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19691:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19742:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19745:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19735:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19735:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19735:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19770:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19773:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19763:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19763:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19763:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19633:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19656:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19664:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19653:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19653:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19630:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19630:38:10"
															},
															"nodeType": "YulIf",
															"src": "19627:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "19449:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19458:6:10",
														"type": ""
													}
												],
												"src": "19414:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19846:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19856:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "19878:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "19894:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19900:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19890:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19890:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19909:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "19905:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19905:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19886:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19874:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19874:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "19860:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19989:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "19991:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19991:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19991:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19932:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19944:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19929:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19929:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19968:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19980:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19965:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19965:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19926:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19926:62:10"
															},
															"nodeType": "YulIf",
															"src": "19923:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20027:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "20031:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20020:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20020:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20020:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19828:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "19836:4:10",
														"type": ""
													}
												],
												"src": "19799:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20100:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20131:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20133:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20133:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20133:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20116:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20127:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20123:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20113:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20113:17:10"
															},
															"nodeType": "YulIf",
															"src": "20110:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20162:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20173:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20180:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20169:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20169:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20162:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20082:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20092:3:10",
														"type": ""
													}
												],
												"src": "20053:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20225:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20242:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20249:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20254:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20245:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20245:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20235:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20235:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20235:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20282:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20285:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20275:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20275:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20275:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20306:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20309:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20299:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20299:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20299:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20193:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20357:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20374:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20381:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20386:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20377:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20367:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20367:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20414:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20417:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20407:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20407:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20407:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20438:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20441:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20431:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20431:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20431:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "20325:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20500:142:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20545:91:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "20574:3:10"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "20579:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20584:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "20559:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20559:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20559:27:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20599:27:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20610:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "20621:3:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20615:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20615:10:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "20606:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20606:20:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "20599:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20516:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20516:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20534:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20513:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20513:23:10"
															},
															"nodeType": "YulIf",
															"src": "20510:2:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "20492:3:10",
														"type": ""
													}
												],
												"src": "20457:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20694:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20734:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20736:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20710:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20710:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20728:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20707:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20707:26:10"
															},
															"nodeType": "YulIf",
															"src": "20704:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20752:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20770:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20764:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20764:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "20756:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20782:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20796:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "20792:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20792:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20786:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20822:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20835:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20835:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20853:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20831:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "20807:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20807:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20807:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20866:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20886:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20880:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20880:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "20870:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20900:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "20910:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20910:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "20904:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20935:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20945:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "20939:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21021:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21023:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20981:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "20989:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20978:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20978:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21001:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21009:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20997:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20997:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "21016:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20994:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20994:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20975:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20975:45:10"
															},
															"nodeType": "YulIf",
															"src": "20972:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21039:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21054:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21060:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21050:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21050:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "21043:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21076:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "21096:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21090:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21090:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21080:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21127:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21129:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21115:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "21123:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21112:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21112:14:10"
															},
															"nodeType": "YulIf",
															"src": "21109:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21218:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21220:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "21159:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "21164:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21155:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21155:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21173:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21151:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "21188:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "21194:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21194:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21184:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21184:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "21213:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21180:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21180:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21148:69:10"
															},
															"nodeType": "YulIf",
															"src": "21145:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21256:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21270:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "21278:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21266:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21266:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21287:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21262:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21262:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "21236:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21236:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21236:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21302:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "21309:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21302:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20686:3:10",
														"type": ""
													}
												],
												"src": "20647:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21369:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21434:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21443:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21446:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21436:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21436:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21436:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21392:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21403:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21414:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21419:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "21410:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21410:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "21399:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21399:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21389:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21389:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21382:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21382:51:10"
															},
															"nodeType": "YulIf",
															"src": "21379:2:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21358:5:10",
														"type": ""
													}
												],
												"src": "21323:133:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_t_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_t_array$_t_address_$dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        array := abi_decode_available_length_t_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(value3, value3) }\n        value3 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_t_array$_t_address_$dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, mul(_3, _4)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        value0 := abi_decode_available_length_t_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_t_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_t_array$_t_address_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71AC14E6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xAD974F4C EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x229 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F1 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x176 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x85E JUMP JUMPDEST PUSH2 0x21C PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x156 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x318 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x327 JUMPI POP PUSH2 0x327 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x348 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x377 DUP2 PUSH2 0xAF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x382 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3A8 JUMPI POP PUSH2 0x3A8 DUP4 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x3CF DUP4 DUP4 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x3DE SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3F6 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x422 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x46F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x444 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x46F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x452 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x483 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x494 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x4C6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC17 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x50C JUMPI POP PUSH2 0x50C DUP6 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x535 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD98 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x653 JUMPI PUSH2 0x618 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x60B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x290 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x64C DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x663 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x674 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x6A4 PUSH1 0x0 PUSH2 0xF69 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6BF PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x70D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x736 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x78A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x79F SWAP1 DUP6 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x82C JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x80F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x824 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP PUSH2 0x848 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x89C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x919 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x928 DUP7 DUP7 PUSH2 0x1FB3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP1 DUP4 PUSH2 0x93B DUP9 DUP4 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x959 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x971 DUP9 DUP5 PUSH2 0x1FCB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x98F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9A4 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91E JUMP JUMPDEST POP PUSH2 0x535 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x9D4 PUSH2 0xAF1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA41 JUMPI POP PUSH2 0xA41 DUP6 PUSH2 0x265 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH2 0x535 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xA72 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA83 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0x377 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x9DB SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB38 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB68 DUP2 DUP6 PUSH1 0x0 PUSH2 0xB4A DUP8 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xB53 DUP8 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP7 SUB SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP6 AND SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 PUSH2 0xC08 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC79 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD28 DUP2 PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC7C JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD81 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x535 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11FA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEE0 SWAP1 DUP5 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEF4 SWAP1 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP PUSH2 0xDFC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP3 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF61 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11FA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x1051 SWAP1 DUP6 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1084 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108E PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x10AE DUP2 DUP8 DUP8 PUSH2 0x109F DUP9 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0x10A8 DUP9 PUSH2 0x11A1 JUMP JUMPDEST DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x112C SWAP1 DUP5 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1182 SWAP3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1198 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 JUMP JUMPDEST ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1245 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x128F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x128C SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12EF JUMPI PUSH2 0x129B PUSH2 0x20A7 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x12D5 JUMPI POP PUSH2 0x12B0 PUSH2 0x20BE JUMP JUMPDEST DUP1 PUSH2 0x12BB JUMPI POP PUSH2 0x12D7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x1331 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 JUMP JUMPDEST ISZERO PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x136A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13B4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13B1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13C0 JUMPI PUSH2 0x129B PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1402 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1424 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x146A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x143D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x146A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x146A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x146A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x144F JUMP JUMPDEST POP PUSH2 0x1476 SWAP3 SWAP2 POP PUSH2 0x147A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x147B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A8 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14BF PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1513 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1520 DUP3 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152D DUP3 DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x154A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1568 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x154C JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1585 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1594 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x148F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1594 DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15D0 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x15DE PUSH1 0x20 DUP5 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15FE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1607 DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP PUSH2 0x1615 PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1630 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x163C DUP10 DUP4 DUP11 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1651 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x165D DUP10 DUP4 DUP11 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1672 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x167F DUP9 DUP3 DUP10 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x16AC DUP7 PUSH2 0x14EC JUMP JUMPDEST SWAP5 POP PUSH2 0x16BA PUSH1 0x20 DUP8 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16E2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x167F DUP9 DUP3 DUP10 ADD PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1703 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x170C DUP6 PUSH2 0x14EC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1727 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1733 DUP9 DUP4 DUP10 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1748 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1754 DUP9 DUP4 DUP10 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1769 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1776 DUP8 DUP3 DUP9 ADD PUSH2 0x1575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1794 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x179D DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17B1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x17D7 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17F9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1802 DUP5 PUSH2 0x14EC JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1829 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x183F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1852 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x185F DUP3 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186C DUP3 DUP3 PUSH2 0x2034 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1889 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x189E DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x188D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18C8 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x18D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1594 DUP2 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1594 DUP2 PUSH2 0x214F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x193D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x194D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x195C DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x148F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1990 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19A7 PUSH1 0x40 DUP6 ADD PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19C3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x19F3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1A20 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A75 SWAP1 DUP4 ADD DUP7 PUSH2 0x19B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A87 DUP2 DUP7 PUSH2 0x19B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A9B DUP2 DUP6 PUSH2 0x19EA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AE1 SWAP1 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x1B12 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B24 DUP2 DUP6 PUSH2 0x19B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1594 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1FA9 JUMPI PUSH2 0x1FA9 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x207B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDD PUSH2 0x207B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1FF1 JUMPI PUSH2 0x1FF1 PUSH2 0x207B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x200D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x202E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2059 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2074 JUMPI PUSH2 0x2074 PUSH2 0x207B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x871 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x20FF JUMPI POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2119 JUMPI POP POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2135 JUMPI POP POP POP POP POP POP PUSH2 0x871 JUMP JUMPDEST PUSH2 0x2144 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x2034 JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xDB STOP OR LOG0 SWAP8 DUP7 0xBA DUP1 0xB4 BYTE 0xE1 0xEC DUP14 0xAD CODECOPY PUSH24 0x47AABABF9200001A5C9EE13BAD5AC364736F6C6343000801 STOP CALLER ",
							"sourceMap": "184:1847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1250:88:0:-;;;;;;:::i;:::-;;:::i;:::-;;1695:333;;;;;;:::i;:::-;;:::i;1925:103:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1346:240:0:-;;;;;;:::i;:::-;;:::i;4045:430:2:-;;;;;;:::i;:::-;;:::i;2555:508::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1668:101:1:-;;;:::i;350:461:0:-;;;;;;:::i;:::-;;:::i;232:26::-;;;:::i;1036:85:1:-;;;:::i;:::-;;;;;;;:::i;819:421:0:-;;;;;;:::i;:::-;;:::i;3131:153:2:-;;;;;;:::i;:::-;;:::i;1594:93:0:-;;;:::i;3351:166:2:-;;;;;;:::i;:::-;;:::i;3584:389::-;;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;:::i;:::-;;:::i;2170:228:2:-;2256:7;-1:-1:-1;;;;;2283:21:2;;2275:77;;;;-1:-1:-1;;;2275:77:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2369:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:2;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:2;;-1:-1:-1;;;1358:41:2;;:109;;-1:-1:-1;;;;;;;1415:52:2;;-1:-1:-1;;;1415:52:2;1358:109;:161;;;;1483:36;1507:11;1483:23;:36::i;:::-;1339:180;;1221:305;;;;:::o;1250:88:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1315:15:0::1;1323:6;1315:7;:15::i;:::-;1250:88:::0;:::o;1695:333::-;1834:12;:10;:12::i;:::-;-1:-1:-1;;;;;1823:23:0;:7;-1:-1:-1;;;;;1823:23:0;;:66;;;;1850:39;1867:7;1876:12;:10;:12::i;1850:39::-;1801:157;;;;-1:-1:-1;;;1801:157:0;;;;;;;:::i;:::-;1971:25;1977:7;1986:2;1990:5;1971;:25::i;:::-;2009:11;;2007:13;;;;;:::i;:::-;;;;-1:-1:-1;;;;1695:333:0:o;1925:103:2:-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;1346:240:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1495:34:0::1;1506:2;1510:3;1515:7;1524:4;1495:10;:34::i;:::-;1568:3;:10;1554:11;;:24;;;;:::i;:::-;1540:11;:38:::0;-1:-1:-1;;;;1346:240:0:o;4045:430:2:-;4278:12;:10;:12::i;:::-;-1:-1:-1;;;;;4270:20:2;:4;-1:-1:-1;;;;;4270:20:2;;:60;;;;4294:36;4311:4;4317:12;:10;:12::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:2;;;;;;;:::i;:::-;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:2;;;;;;;:::i;:::-;2832:30;2879:8;:15;-1:-1:-1;;;;;2865:30:2;;;;;-1:-1:-1;;;2865:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:2;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;-1:-1:-1;;;2995:11:2;;;;;;;;;;;;;;;3008:3;3012:1;3008:6;;;;;;-1:-1:-1;;;3008:6:2;;;;;;;;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;-1:-1:-1;;;2966:16:2;;;;;;;;;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:2;2555:508;-1:-1:-1;;;2555:508:2:o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;350:461:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;425:20:0::1;462:9;-1:-1:-1::0;;;;;448:24:0::1;;;;;-1:-1:-1::0;;;448:24:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;448:24:0::1;;425:47;;483:24;524:9;-1:-1:-1::0;;;;;510:24:0::1;;;;;-1:-1:-1::0;;;510:24:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;510:24:0::1;-1:-1:-1::0;562:11:0::1;::::0;483:51;;-1:-1:-1;545:160:0::1;592:11;::::0;580:23:::1;::::0;:9;:23:::1;:::i;:::-;575:1;:29;545:160;;;649:1;626:3;634:11;;630:1;:15;;;;:::i;:::-;626:20;;;;;;-1:-1:-1::0;;;626:20:0::1;;;;;;;;;;;;;;:24;;;::::0;::::1;692:1;665:7;677:11;;673:1;:15;;;;:::i;:::-;665:24;;;;;;-1:-1:-1::0;;;665:24:0::1;;;;;;;;;;::::0;;::::1;::::0;;;;;:28;606:3;::::1;::::0;::::1;:::i;:::-;;;;545:160;;;;715:40;726:10;738:3;743:7;715:40;;;;;;;;;;;::::0;:10:::1;:40::i;:::-;794:9;780:11;;:23;;;;:::i;:::-;766:11;:37:::0;-1:-1:-1;;;350:461:0:o;232:26::-;;;;:::o;1036:85:1:-;1108:6;;-1:-1:-1;;;;;1108:6:1;1036:85;;:::o;819:421:0:-;911:20;948:9;-1:-1:-1;;;;;934:24:0;;;;;-1:-1:-1;;;934:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:24:0;;911:47;;969:24;1010:9;-1:-1:-1;;;;;996:24:0;;;;;-1:-1:-1;;;996:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;996:24:0;-1:-1:-1;969:51:0;-1:-1:-1;1048:5:0;1031:136;1060:17;1072:5;1060:9;:17;:::i;:::-;1055:1;:23;1031:136;;;1117:1;1100:3;1104:9;1108:5;1117:1;1104:9;:::i;:::-;1100:14;;;;;;-1:-1:-1;;;1100:14:0;;;;;;;;;;;;;;;;;;:18;1154:1;1133:7;1141:9;1145:5;1141:1;:9;:::i;:::-;1133:18;;;;;;-1:-1:-1;;;1133:18:0;;;;;;;;;;;;;;;;;;:22;1080:3;;;;:::i;:::-;;;;1031:136;;;;1177:55;1199:10;1211:2;1215:3;1220:7;1177:55;;;;;;;;;;;;:21;:55::i;3131:153:2:-;3225:52;3244:12;:10;:12::i;:::-;3258:8;3268;3225:18;:52::i;:::-;3131:153;;:::o;1594:93:0:-;1668:11;;1594:93;:::o;3351:166:2:-;-1:-1:-1;;;;;3473:27:2;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166::o;3584:389::-;3792:12;:10;:12::i;:::-;-1:-1:-1;;;;;3784:20:2;:4;-1:-1:-1;;;;;3784:20:2;;:60;;;;3808:36;3825:4;3831:12;:10;:12::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:2;;;;;;;:::i;:::-;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;829:155:8:-:0;-1:-1:-1;;;;;;937:40:8;;-1:-1:-1;;;937:40:8;829:155;;;:::o;640:96:7:-;719:10;640:96;:::o;7936:86:2:-;8002:13;;;;:4;;:13;;;;;:::i;10248:630::-;-1:-1:-1;;;;;10370:18:2;;10362:66;;;;-1:-1:-1;;;10362:66:2;;;;;;;:::i;:::-;10439:16;10458:12;:10;:12::i;:::-;10439:31;;10481:102;10502:8;10512:4;10526:1;10530:21;10548:2;10530:17;:21::i;:::-;10553:25;10571:6;10553:17;:25::i;:::-;10481:102;;;;;;;;;;;;:20;:102::i;:::-;10594:19;10616:13;;;;;;;;;;;-1:-1:-1;;;;;10616:19:2;;;;;;;;;;10653:21;;;;10645:70;;;;-1:-1:-1;;;10645:70:2;;;;;;;:::i;:::-;10749:9;:13;;;;;;;;;;;-1:-1:-1;;;;;10749:19:2;;;;;;;;;;;;;10771:20;;;10749:42;;10817:54;;10749:19;;10817:54;;;;;;;10759:2;;10785:6;;10817:54;:::i;:::-;;;;;;;;10248:630;;;;;:::o;9293:715::-;-1:-1:-1;;;;;9465:16:2;;9457:62;;;;-1:-1:-1;;;9457:62:2;;;;;;;:::i;:::-;9551:7;:14;9537:3;:10;:28;9529:81;;;;-1:-1:-1;;;9529:81:2;;;;;;;:::i;:::-;9621:16;9640:12;:10;:12::i;:::-;9621:31;;9663:66;9684:8;9702:1;9706:2;9710:3;9715:7;9724:4;9663:20;:66::i;:::-;9745:9;9740:101;9764:3;:10;9760:1;:14;9740:101;;;9820:7;9828:1;9820:10;;;;;;-1:-1:-1;;;9820:10:2;;;;;;;;;;;;;;;9795:9;:17;9805:3;9809:1;9805:6;;;;;;-1:-1:-1;;;9805:6:2;;;;;;;;;;;;;;;9795:17;;;;;;;;;;;:21;9813:2;-1:-1:-1;;;;;9795:21:2;-1:-1:-1;;;;;9795:21:2;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;9776:3:2;;-1:-1:-1;9776:3:2;;;:::i;:::-;;;;9740:101;;;;9892:2;-1:-1:-1;;;;;9856:53:2;9888:1;-1:-1:-1;;;;;9856:53:2;9870:8;-1:-1:-1;;;;;9856:53:2;;9896:3;9901:7;9856:53;;;;;;;:::i;:::-;;;;;;;;9920:81;9956:8;9974:1;9978:2;9982:3;9987:7;9996:4;9920:35;:81::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6365:16:2;;6357:66;;;;-1:-1:-1;;;6357:66:2;;;;;;;:::i;:::-;6434:16;6453:12;:10;:12::i;:::-;6434:31;;6476:60;6497:8;6507:4;6513:2;6517:3;6522:7;6531:4;6476:20;:60::i;:::-;6552:9;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;-1:-1:-1;;;6615:6:2;;;;;;;;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:2;;;;;;;;;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:2;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:2;;;;6732:76;;;;-1:-1:-1;;;6732:76:2;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:2;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6547:411;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:2;6997:4;-1:-1:-1;;;;;6973:47:2;6987:8;-1:-1:-1;;;;;6973:47:2;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6068:1045;;;;;;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;12074:323:2:-;12224:8;-1:-1:-1;;;;;12215:17:2;:5;-1:-1:-1;;;;;12215:17:2;;;12207:71;;;;-1:-1:-1;;;12207:71:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;12288:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:2;;;;;;;12349:41;;;;;12288:46;;12349:41;:::i;:::-;;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:2;;5098:66;;;;-1:-1:-1;;;5098:66:2;;;;;;;:::i;:::-;5175:16;5194:12;:10;:12::i;:::-;5175:31;;5217:96;5238:8;5248:4;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;:::-;5308:4;5217:20;:96::i;:::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:2;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:2;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:2;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;;;;;5621:2;-1:-1:-1;;;;;5590:46:2;5615:4;-1:-1:-1;;;;;5590:46:2;5605:8;-1:-1:-1;;;;;5590:46:2;;5625:2;5629:6;5590:46;;;;;;;:::i;:::-;;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;4925:797;;;;;;;:::o;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:2;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:2;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:2:o;14282:792::-;14514:15;:2;-1:-1:-1;;;;;14514:13:2;;:15::i;:::-;14510:558;;;14549:79;;-1:-1:-1;;;14549:79:2;;-1:-1:-1;;;;;14549:43:2;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:2;;;;;;;;-1:-1:-1;;14549:79:2;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:2;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:2;;;;;;;:::i;14545:513::-;-1:-1:-1;;;;;;14707:60:2;;-1:-1:-1;;;14707:60:2;14703:157;;14791:50;;-1:-1:-1;;;14791:50:2;;;;;;;:::i;13551:725::-;13758:15;:2;-1:-1:-1;;;;;13758:13:2;;:15::i;:::-;13754:516;;;13793:72;;-1:-1:-1;;;13793:72:2;;-1:-1:-1;;;;;13793:38:2;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:2;;;;;;;;-1:-1:-1;;13793:72:2;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:2;;-1:-1:-1;;;13914:55:2;13910:152;;13993:50;;-1:-1:-1;;;13993:50:2;;;;;;;:::i;771:377:6:-;1087:20;1133:8;;;771:377::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:470:10;;-1:-1:-1;;;;;106:6:10;103:30;100:2;;;136:18;;:::i;:::-;185:2;179:9;197:69;254:2;233:15;;-1:-1:-1;;229:29:10;260:4;225:40;179:9;197:69;:::i;:::-;284:6;275:15;;314:6;306;299:22;354:3;345:6;340:3;336:16;333:25;330:2;;;371:1;368;361:12;330:2;421:6;416:3;409:4;401:6;397:17;384:44;476:1;469:4;460:6;452;448:19;444:30;437:41;;90:394;;;;;:::o;489:175::-;559:20;;-1:-1:-1;;;;;608:31:10;;598:42;;588:2;;654:1;651;644:12;669:768;;782:3;775:4;767:6;763:17;759:27;749:2;;804:5;797;790:20;749:2;844:6;831:20;870:4;893:49;939:2;893:49;:::i;:::-;971:2;965:9;983:31;1011:2;1003:6;983:31;:::i;:::-;1049:18;;;1083:15;;;;-1:-1:-1;1118:15:10;;;1164:11;;;1152:24;;1148:33;;1145:42;-1:-1:-1;1142:2:10;;;1204:5;1197;1190:20;1142:2;1230:5;1244:163;1258:2;1255:1;1252:9;1244:163;;;1315:17;;1303:30;;1353:12;;;;1385;;;;1276:1;1269:9;1244:163;;;-1:-1:-1;1425:6:10;;739:698;-1:-1:-1;;;;;;;739:698:10:o;1442:232::-;;1539:3;1532:4;1524:6;1520:17;1516:27;1506:2;;1561:5;1554;1547:20;1506:2;1587:81;1664:3;1655:6;1642:20;1635:4;1627:6;1623:17;1587:81;:::i;:::-;1578:90;1496:178;-1:-1:-1;;;1496:178:10:o;1679:198::-;;1791:2;1779:9;1770:7;1766:23;1762:32;1759:2;;;1812:6;1804;1797:22;1759:2;1840:31;1861:9;1840:31;:::i;1882:274::-;;;2011:2;1999:9;1990:7;1986:23;1982:32;1979:2;;;2032:6;2024;2017:22;1979:2;2060:31;2081:9;2060:31;:::i;:::-;2050:41;;2110:40;2146:2;2135:9;2131:18;2110:40;:::i;:::-;2100:50;;1969:187;;;;;:::o;2161:1001::-;;;;;;2400:3;2388:9;2379:7;2375:23;2371:33;2368:2;;;2422:6;2414;2407:22;2368:2;2450:31;2471:9;2450:31;:::i;:::-;2440:41;;2500:40;2536:2;2525:9;2521:18;2500:40;:::i;:::-;2490:50;;2591:2;2580:9;2576:18;2563:32;-1:-1:-1;;;;;2655:2:10;2647:6;2644:14;2641:2;;;2676:6;2668;2661:22;2641:2;2704:67;2763:7;2754:6;2743:9;2739:22;2704:67;:::i;:::-;2694:77;;2824:2;2813:9;2809:18;2796:32;2780:48;;2853:2;2843:8;2840:16;2837:2;;;2874:6;2866;2859:22;2837:2;2902:69;2963:7;2952:8;2941:9;2937:24;2902:69;:::i;:::-;2892:79;;3024:3;3013:9;3009:19;2996:33;2980:49;;3054:2;3044:8;3041:16;3038:2;;;3075:6;3067;3060:22;3038:2;;3103:53;3148:7;3137:8;3126:9;3122:24;3103:53;:::i;:::-;3093:63;;;2358:804;;;;;;;;:::o;3167:632::-;;;;;;3356:3;3344:9;3335:7;3331:23;3327:33;3324:2;;;3378:6;3370;3363:22;3324:2;3406:31;3427:9;3406:31;:::i;:::-;3396:41;;3456:40;3492:2;3481:9;3477:18;3456:40;:::i;:::-;3446:50;;3543:2;3532:9;3528:18;3515:32;3505:42;;3594:2;3583:9;3579:18;3566:32;3556:42;;3649:3;3638:9;3634:19;3621:33;-1:-1:-1;;;;;3669:6:10;3666:30;3663:2;;;3714:6;3706;3699:22;3663:2;3742:51;3785:7;3776:6;3765:9;3761:22;3742:51;:::i;3804:924::-;;;;;4026:3;4014:9;4005:7;4001:23;3997:33;3994:2;;;4048:6;4040;4033:22;3994:2;4076:31;4097:9;4076:31;:::i;:::-;4066:41;;4158:2;4147:9;4143:18;4130:32;-1:-1:-1;;;;;4222:2:10;4214:6;4211:14;4208:2;;;4243:6;4235;4228:22;4208:2;4271:67;4330:7;4321:6;4310:9;4306:22;4271:67;:::i;:::-;4261:77;;4391:2;4380:9;4376:18;4363:32;4347:48;;4420:2;4410:8;4407:16;4404:2;;;4441:6;4433;4426:22;4404:2;4469:69;4530:7;4519:8;4508:9;4504:24;4469:69;:::i;:::-;4459:79;;4591:2;4580:9;4576:18;4563:32;4547:48;;4620:2;4610:8;4607:16;4604:2;;;4641:6;4633;4626:22;4604:2;;4669:53;4714:7;4703:8;4692:9;4688:24;4669:53;:::i;:::-;4659:63;;;3984:744;;;;;;;:::o;4733:369::-;;;4859:2;4847:9;4838:7;4834:23;4830:32;4827:2;;;4880:6;4872;4865:22;4827:2;4908:31;4929:9;4908:31;:::i;:::-;4898:41;;4989:2;4978:9;4974:18;4961:32;5036:5;5029:13;5022:21;5015:5;5012:32;5002:2;;5063:6;5055;5048:22;5002:2;5091:5;5081:15;;;4817:285;;;;;:::o;5107:266::-;;;5236:2;5224:9;5215:7;5211:23;5207:32;5204:2;;;5257:6;5249;5242:22;5204:2;5285:31;5306:9;5285:31;:::i;:::-;5275:41;5363:2;5348:18;;;;5335:32;;-1:-1:-1;;;5194:179:10:o;5378:334::-;;;;5524:2;5512:9;5503:7;5499:23;5495:32;5492:2;;;5545:6;5537;5530:22;5492:2;5573:31;5594:9;5573:31;:::i;:::-;5563:41;5651:2;5636:18;;5623:32;;-1:-1:-1;5702:2:10;5687:18;;;5674:32;;5482:230;-1:-1:-1;;;5482:230:10:o;5717:1289::-;;;5896:2;5884:9;5875:7;5871:23;5867:32;5864:2;;;5917:6;5909;5902:22;5864:2;5962:9;5949:23;-1:-1:-1;;;;;6032:2:10;6024:6;6021:14;6018:2;;;6053:6;6045;6038:22;6018:2;6096:6;6085:9;6081:22;6071:32;;6141:7;6134:4;6130:2;6126:13;6122:27;6112:2;;6168:6;6160;6153:22;6112:2;6209;6196:16;6231:4;6254:49;6300:2;6254:49;:::i;:::-;6332:2;6326:9;6344:31;6372:2;6364:6;6344:31;:::i;:::-;6410:18;;;6444:15;;;;-1:-1:-1;6479:11:10;;;6517;;;6509:20;;6505:29;;6502:42;-1:-1:-1;6499:2:10;;;6562:6;6554;6547:22;6499:2;6589:6;6580:15;;6604:171;6618:2;6615:1;6612:9;6604:171;;;6675:25;6696:3;6675:25;:::i;:::-;6663:38;;6636:1;6629:9;;;;;6721:12;;;;6753;;6604:171;;;-1:-1:-1;6794:6:10;-1:-1:-1;;6838:18:10;;6825:32;;-1:-1:-1;;6869:16:10;;;6866:2;;;6903:6;6895;6888:22;6866:2;;6931:69;6992:7;6981:8;6970:9;6966:24;6931:69;:::i;:::-;6921:79;;;5854:1152;;;;;:::o;7011:257::-;;7122:2;7110:9;7101:7;7097:23;7093:32;7090:2;;;7143:6;7135;7128:22;7090:2;7187:9;7174:23;7206:32;7232:5;7206:32;:::i;7273:261::-;;7395:2;7383:9;7374:7;7370:23;7366:32;7363:2;;;7416:6;7408;7401:22;7363:2;7453:9;7447:16;7472:32;7498:5;7472:32;:::i;7539:482::-;;7661:2;7649:9;7640:7;7636:23;7632:32;7629:2;;;7682:6;7674;7667:22;7629:2;7727:9;7714:23;-1:-1:-1;;;;;7752:6:10;7749:30;7746:2;;;7797:6;7789;7782:22;7746:2;7825:22;;7878:4;7870:13;;7866:27;-1:-1:-1;7856:2:10;;7912:6;7904;7897:22;7856:2;7940:75;8007:7;8002:2;7989:16;7984:2;7980;7976:11;7940:75;:::i;:::-;7930:85;7619:402;-1:-1:-1;;;;7619:402:10:o;8026:190::-;;8138:2;8126:9;8117:7;8113:23;8109:32;8106:2;;;8159:6;8151;8144:22;8106:2;-1:-1:-1;8187:23:10;;8096:120;-1:-1:-1;8096:120:10:o;8221:334::-;;;;8367:2;8355:9;8346:7;8342:23;8338:32;8335:2;;;8388:6;8380;8373:22;8335:2;8429:9;8416:23;8406:33;;8486:2;8475:9;8471:18;8458:32;8448:42;;8509:40;8545:2;8534:9;8530:18;8509:40;:::i;:::-;8499:50;;8325:230;;;;;:::o;8560:443::-;;8657:5;8651:12;8684:6;8679:3;8672:19;8710:4;8739:2;8734:3;8730:12;8723:19;;8776:2;8769:5;8765:14;8797:3;8809:169;8823:6;8820:1;8817:13;8809:169;;;8884:13;;8872:26;;8918:12;;;;8953:15;;;;8845:1;8838:9;8809:169;;;-1:-1:-1;8994:3:10;;8627:376;-1:-1:-1;;;;;8627:376:10:o;9008:477::-;;9089:5;9083:12;9116:6;9111:3;9104:19;9141:3;9153:162;9167:6;9164:1;9161:13;9153:162;;;9229:4;9285:13;;;9281:22;;9275:29;9257:11;;;9253:20;;9246:59;9182:12;9153:162;;;9333:6;9330:1;9327:13;9324:2;;;9399:3;9392:4;9383:6;9378:3;9374:16;9370:27;9363:40;9324:2;-1:-1:-1;9467:2:10;9446:15;-1:-1:-1;;9442:29:10;9433:39;;;;9474:4;9429:50;;9059:426;-1:-1:-1;;9059:426:10:o;9490:203::-;-1:-1:-1;;;;;9654:32:10;;;;9636:51;;9624:2;9609:18;;9591:102::o;9698:840::-;-1:-1:-1;;;;;10095:15:10;;;10077:34;;10147:15;;10142:2;10127:18;;10120:43;10057:3;10194:2;10179:18;;10172:31;;;9698:840;;10226:63;;10269:19;;10261:6;10226:63;:::i;:::-;10337:9;10329:6;10325:22;10320:2;10309:9;10305:18;10298:50;10371;10414:6;10406;10371:50;:::i;:::-;10357:64;;10470:9;10462:6;10458:22;10452:3;10441:9;10437:19;10430:51;10498:34;10525:6;10517;10498:34;:::i;:::-;10490:42;10029:509;-1:-1:-1;;;;;;;;10029:509:10:o;10543:562::-;-1:-1:-1;;;;;10840:15:10;;;10822:34;;10892:15;;10887:2;10872:18;;10865:43;10939:2;10924:18;;10917:34;;;10982:2;10967:18;;10960:34;;;10802:3;11025;11010:19;;11003:32;;;10543:562;;11052:47;;11079:19;;11071:6;11052:47;:::i;:::-;11044:55;10774:331;-1:-1:-1;;;;;;;10774:331:10:o;11110:267::-;;11289:2;11278:9;11271:21;11309:62;11367:2;11356:9;11352:18;11344:6;11309:62;:::i;11382:477::-;;11639:2;11628:9;11621:21;11665:62;11723:2;11712:9;11708:18;11700:6;11665:62;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803;11846:6;11838;11803:50;:::i;:::-;11795:58;11611:248;-1:-1:-1;;;;;11611:248:10:o;11864:187::-;12029:14;;12022:22;12004:41;;11992:2;11977:18;;11959:92::o;12056:221::-;;12205:2;12194:9;12187:21;12225:46;12267:2;12256:9;12252:18;12244:6;12225:46;:::i;12282:416::-;12484:2;12466:21;;;12523:2;12503:18;;;12496:30;12562:34;12557:2;12542:18;;12535:62;-1:-1:-1;;;12628:2:10;12613:18;;12606:50;12688:3;12673:19;;12456:242::o;12703:404::-;12905:2;12887:21;;;12944:2;12924:18;;;12917:30;12983:34;12978:2;12963:18;;12956:62;-1:-1:-1;;;13049:2:10;13034:18;;13027:38;13097:3;13082:19;;12877:230::o;13112:407::-;13314:2;13296:21;;;13353:2;13333:18;;;13326:30;13392:34;13387:2;13372:18;;13365:62;-1:-1:-1;;;13458:2:10;13443:18;;13436:41;13509:3;13494:19;;13286:233::o;13524:402::-;13726:2;13708:21;;;13765:2;13745:18;;;13738:30;13804:34;13799:2;13784:18;;13777:62;-1:-1:-1;;;13870:2:10;13855:18;;13848:36;13916:3;13901:19;;13698:228::o;13931:400::-;14133:2;14115:21;;;14172:2;14152:18;;;14145:30;14211:34;14206:2;14191:18;;14184:62;-1:-1:-1;;;14277:2:10;14262:18;;14255:34;14321:3;14306:19;;14105:226::o;14336:405::-;14538:2;14520:21;;;14577:2;14557:18;;;14550:30;14616:34;14611:2;14596:18;;14589:62;-1:-1:-1;;;14682:2:10;14667:18;;14660:39;14731:3;14716:19;;14510:231::o;14746:401::-;14948:2;14930:21;;;14987:2;14967:18;;;14960:30;15026:34;15021:2;15006:18;;14999:62;-1:-1:-1;;;15092:2:10;15077:18;;15070:35;15137:3;15122:19;;14920:227::o;15152:414::-;15354:2;15336:21;;;15393:2;15373:18;;;15366:30;15432:34;15427:2;15412:18;;15405:62;-1:-1:-1;;;15498:2:10;15483:18;;15476:48;15556:3;15541:19;;15326:240::o;15571:399::-;15773:2;15755:21;;;15812:2;15792:18;;;15785:30;15851:34;15846:2;15831:18;;15824:62;-1:-1:-1;;;15917:2:10;15902:18;;15895:33;15960:3;15945:19;;15745:225::o;15975:406::-;16177:2;16159:21;;;16216:2;16196:18;;;16189:30;16255:34;16250:2;16235:18;;16228:62;-1:-1:-1;;;16321:2:10;16306:18;;16299:40;16371:3;16356:19;;16149:232::o;16386:356::-;16588:2;16570:21;;;16607:18;;;16600:30;16666:34;16661:2;16646:18;;16639:62;16733:2;16718:18;;16560:182::o;16747:405::-;16949:2;16931:21;;;16988:2;16968:18;;;16961:30;17027:34;17022:2;17007:18;;17000:62;-1:-1:-1;;;17093:2:10;17078:18;;17071:39;17142:3;17127:19;;16921:231::o;17157:405::-;17359:2;17341:21;;;17398:2;17378:18;;;17371:30;17437:34;17432:2;17417:18;;17410:62;-1:-1:-1;;;17503:2:10;17488:18;;17481:39;17552:3;17537:19;;17331:231::o;17567:404::-;17769:2;17751:21;;;17808:2;17788:18;;;17781:30;17847:34;17842:2;17827:18;;17820:62;-1:-1:-1;;;17913:2:10;17898:18;;17891:38;17961:3;17946:19;;17741:230::o;17976:397::-;18178:2;18160:21;;;18217:2;18197:18;;;18190:30;18256:34;18251:2;18236:18;;18229:62;-1:-1:-1;;;18322:2:10;18307:18;;18300:31;18363:3;18348:19;;18150:223::o;18378:177::-;18524:25;;;18512:2;18497:18;;18479:76::o;18560:248::-;18734:25;;;18790:2;18775:18;;18768:34;18722:2;18707:18;;18689:119::o;18813:192::-;;-1:-1:-1;;;;;18904:6:10;18901:30;18898:2;;;18934:18;;:::i;:::-;-1:-1:-1;18994:4:10;18975:17;;;18971:28;;18888:117::o;19010:128::-;;19081:1;19077:6;19074:1;19071:13;19068:2;;;19087:18;;:::i;:::-;-1:-1:-1;19123:9:10;;19058:80::o;19143:125::-;;19211:1;19208;19205:8;19202:2;;;19216:18;;:::i;:::-;-1:-1:-1;19253:9:10;;19192:76::o;19273:136::-;;19340:5;19330:2;;19349:18;;:::i;:::-;-1:-1:-1;;;19385:18:10;;19320:89::o;19414:380::-;19499:1;19489:12;;19546:1;19536:12;;;19557:2;;19611:4;19603:6;19599:17;19589:27;;19557:2;19664;19656:6;19653:14;19633:18;19630:38;19627:2;;;19710:10;19705:3;19701:20;19698:1;19691:31;19745:4;19742:1;19735:15;19773:4;19770:1;19763:15;19627:2;;19469:325;;;:::o;19799:249::-;19909:2;19890:13;;-1:-1:-1;;19886:27:10;19874:40;;-1:-1:-1;;;;;19929:34:10;;19965:22;;;19926:62;19923:2;;;19991:18;;:::i;:::-;20027:2;20020:22;-1:-1:-1;;19846:202:10:o;20053:135::-;;-1:-1:-1;;20113:17:10;;20110:2;;;20133:18;;:::i;:::-;-1:-1:-1;20180:1:10;20169:13;;20100:88::o;20193:127::-;20254:10;20249:3;20245:20;20242:1;20235:31;20285:4;20282:1;20275:15;20309:4;20306:1;20299:15;20325:127;20386:10;20381:3;20377:20;20374:1;20367:31;20417:4;20414:1;20407:15;20441:4;20438:1;20431:15;20457:185;;20534:1;20516:16;20513:23;20510:2;;;20584:1;20579:3;20574;20559:27;20615:10;20610:3;20606:20;20500:142;:::o;20647:671::-;;20728:4;20710:16;20707:26;20704:2;;;20736:5;;20704:2;20770;20764:9;-1:-1:-1;;20835:16:10;20831:25;;20828:1;20764:9;20807:50;20886:4;20880:11;20910:16;-1:-1:-1;;;;;21016:2:10;21009:4;21001:6;20997:17;20994:25;20989:2;20981:6;20978:14;20975:45;20972:2;;;21023:5;;;;;;;20972:2;21060:6;21054:4;21050:17;21039:28;;21096:3;21090:10;21123:2;21115:6;21112:14;21109:2;;;21129:5;;;;;;;;21109:2;21213;21194:16;21188:4;21184:27;21180:36;21173:4;21164:6;21159:3;21155:16;21151:27;21148:69;21145:2;;;21220:5;;;;;;;;21145:2;21236:57;21287:4;21278:6;21270;21266:19;21262:30;21256:4;21236:57;:::i;:::-;-1:-1:-1;21309:3:10;;-1:-1:-1;;;;;20694:624:10;:::o;21323:133::-;-1:-1:-1;;;;;;21399:32:10;;21389:43;;21379:2;;21446:1;21443;21436:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1720600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "1427",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"brun(address,uint256,uint256)": "infinite",
								"getTokenSupply()": "1072",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"mintBatchWithNumber(uint256)": "infinite",
								"owner()": "1138",
								"renounceOwnership()": "23619",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23371",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "626",
								"tokenSupply()": "1073",
								"transferOwnership(address)": "23813",
								"transferWithNumber(uint256,uint256,address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH data",
									"source": 2,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 99,
									"end": 100,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 146,
									"end": 147,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 157,
									"end": 159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 159,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 157,
									"end": 159,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 227,
									"end": 229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 227,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 227,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 227,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 69,
									"end": 394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 69,
									"end": 394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 69,
									"end": 394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 69,
									"end": 394,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 69,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 69,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2031,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7db0017a09786ba80b41ae1ec8dad397747aababf9200001a5c9ee13bad5ac364736f6c63430008010033",
									".code": [
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "AD974F4C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "7824407F"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "9416308E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "92F2DBF"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1507,
											"end": 1518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1834,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1801,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1971,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4278,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 448,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 510,
											"end": 534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 630,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 673,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 545,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 726,
											"end": 736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 738,
											"end": 741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 715,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 780,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 766,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1199,
											"end": 1209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7936,
											"end": 8022,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7936,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8002,
											"end": 8015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10458,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10458,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10439,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10439,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10502,
											"end": 10510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10548,
											"end": 10550,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10571,
											"end": 10577,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10553,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10594,
											"end": 10613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10791,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10759,
											"end": 10761,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10759,
											"end": 10761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10791,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9551,
											"end": 9565,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9537,
											"end": 9547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9537,
											"end": 9565,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 9640,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9640,
											"end": 9652,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 9652,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 9640,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9621,
											"end": 9652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9663,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9684,
											"end": 9692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9702,
											"end": 9703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9710,
											"end": 9713,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9715,
											"end": 9722,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9724,
											"end": 9728,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 9663,
											"end": 9729,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9663,
											"end": 9729,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9663,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9764,
											"end": 9774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9828,
											"end": 9829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9894,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9870,
											"end": 9878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9901,
											"end": 9908,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 9956,
											"end": 9964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10000,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6497,
											"end": 6505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5238,
											"end": 5246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5619,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5605,
											"end": 5613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5629,
											"end": 5635,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 14514,
											"end": 14516,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 13758,
											"end": 13760,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "248"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "375"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "375"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "377"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "377"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "378"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "378"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "379"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "380"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "381"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "382"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "381"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "382"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "381"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 484,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 14,
											"end": 484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 103,
											"end": 133,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 100,
											"end": 102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 100,
											"end": 102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 100,
											"end": 102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 136,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 136,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 136,
											"end": 154,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 154,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 136,
											"end": 154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 185,
											"end": 187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 197,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 233,
											"end": 248,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 233,
											"end": 248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 229,
											"end": 258,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 260,
											"end": 264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 179,
											"end": 188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 197,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 197,
											"end": 266,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 197,
											"end": 266,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 197,
											"end": 266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 275,
											"end": 290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 275,
											"end": 290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 314,
											"end": 320,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 306,
											"end": 312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 299,
											"end": 321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 345,
											"end": 351,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 340,
											"end": 343,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 336,
											"end": 352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 333,
											"end": 358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 330,
											"end": 332,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 361,
											"end": 373,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 330,
											"end": 332,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 330,
											"end": 332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 421,
											"end": 427,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 416,
											"end": 419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 409,
											"end": 413,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 397,
											"end": 414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 384,
											"end": 428,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 476,
											"end": 477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 466,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 448,
											"end": 467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 444,
											"end": 474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 437,
											"end": 478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 437,
											"end": 478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 484,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 664,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 489,
											"end": 664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 559,
											"end": 579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 608,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 608,
											"end": 639,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 598,
											"end": 640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 598,
											"end": 640,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 588,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 588,
											"end": 590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 652,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 644,
											"end": 656,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 669,
											"end": 1437,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 669,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 669,
											"end": 1437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 775,
											"end": 779,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 763,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 759,
											"end": 786,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 749,
											"end": 751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 797,
											"end": 802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 790,
											"end": 810,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 749,
											"end": 751,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 749,
											"end": 751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 831,
											"end": 851,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 893,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 893,
											"end": 942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 942,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 893,
											"end": 942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 974,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1176,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1145,
											"end": 1187,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1202,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1210,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1261,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1332,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1332,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1397,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1244,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1437,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 739,
											"end": 1437,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1442,
											"end": 1674,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 1442,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1516,
											"end": 1543,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1567,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1587,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 1664,
											"end": 1667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1662,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1587,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 1587,
											"end": 1668,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1587,
											"end": 1668,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 1587,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1668,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1674,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1674,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 1877,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1679,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1789,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1794,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 1861,
											"end": 1870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 2156,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1882,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 2156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2039,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2060,
											"end": 2091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2060,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2110,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2156,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2398,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2404,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2450,
											"end": 2481,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2481,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2450,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2481,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2500,
											"end": 2540,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2500,
											"end": 2540,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2500,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2540,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2595,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2704,
											"end": 2771,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 2704,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2771,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2822,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2828,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2856,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2950,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2902,
											"end": 2971,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2971,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2902,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2892,
											"end": 2971,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2892,
											"end": 2971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3029,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3082,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 3162,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3359,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3354,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3360,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3456,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 3456,
											"end": 3496,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3496,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3456,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3652,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3638,
											"end": 3647,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3654,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3669,
											"end": 3675,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3785,
											"end": 3792,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3774,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 3783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3742,
											"end": 3793,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4029,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4012,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4024,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4055,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4076,
											"end": 4107,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4076,
											"end": 4107,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4076,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4107,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4228,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4271,
											"end": 4338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4271,
											"end": 4338,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 4271,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4395,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4423,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4448,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4530,
											"end": 4537,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4527,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4469,
											"end": 4538,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4469,
											"end": 4538,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4469,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4595,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 4595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 4595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4623,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4641,
											"end": 4647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4648,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4669,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4688,
											"end": 4712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4669,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 4669,
											"end": 4722,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4669,
											"end": 4722,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4669,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4728,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4733,
											"end": 5102,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4733,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 5102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 5102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4845,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4862,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4887,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4908,
											"end": 4939,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 4908,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4939,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4993,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5042,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5043,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5044,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5070,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 5102,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5107,
											"end": 5373,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5107,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5373,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5234,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5239,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5264,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5306,
											"end": 5315,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 5285,
											"end": 5316,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5285,
											"end": 5316,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5285,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5275,
											"end": 5316,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5373,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5378,
											"end": 5712,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 5378,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5526,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5495,
											"end": 5527,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5552,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5653,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5655,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5655,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5706,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5674,
											"end": 5706,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5712,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5712,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 7006,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5717,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 7006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 7006,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5884,
											"end": 5893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5882,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 5899,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5924,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5864,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5972,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6032,
											"end": 6034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6035,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6149,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6175,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6212,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6254,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6300,
											"end": 6302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 6254,
											"end": 6303,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6254,
											"end": 6303,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6254,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6344,
											"end": 6375,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6344,
											"end": 6375,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 6344,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6490,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6528,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6528,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6509,
											"end": 6529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6534,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6544,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6568,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6569,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6595,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6615,
											"end": 6616,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 6696,
											"end": 6699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 6675,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6663,
											"end": 6701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6663,
											"end": 6701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6765,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 6604,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6800,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 6857,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 6857,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6869,
											"end": 6885,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 6885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 6885,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6910,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6931,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6992,
											"end": 6999,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6966,
											"end": 6990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6931,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6931,
											"end": 7000,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7000,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6931,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 7000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 7000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 7000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 7006,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7011,
											"end": 7268,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7011,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7108,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7125,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7143,
											"end": 7149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7150,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7090,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7174,
											"end": 7197,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7273,
											"end": 7534,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7273,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7381,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7398,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7422,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7423,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7463,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7498,
											"end": 7503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7539,
											"end": 8021,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 7539,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 8021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7647,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7636,
											"end": 7659,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7664,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7682,
											"end": 7688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7689,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7737,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 7779,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7804,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7893,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7919,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8005,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7984,
											"end": 7986,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7980,
											"end": 7982,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7940,
											"end": 8015,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7940,
											"end": 8015,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 7940,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 8015,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7619,
											"end": 8021,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7619,
											"end": 8021,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8026,
											"end": 8216,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 8026,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8124,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8136,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8141,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8166,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8187,
											"end": 8210,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8096,
											"end": 8216,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8221,
											"end": 8555,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 8221,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8367,
											"end": 8369,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8353,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8342,
											"end": 8365,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8370,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8395,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8439,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8406,
											"end": 8439,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8406,
											"end": 8439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8458,
											"end": 8490,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8448,
											"end": 8490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8448,
											"end": 8490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8530,
											"end": 8548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8509,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8555,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8560,
											"end": 9003,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 8560,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 9003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8657,
											"end": 8662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8651,
											"end": 8663,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8690,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8734,
											"end": 8737,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8742,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8723,
											"end": 8742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8776,
											"end": 8778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8774,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8800,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8829,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8817,
											"end": 8830,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8897,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8898,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8930,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8846,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8838,
											"end": 8847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8809,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8994,
											"end": 8997,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8994,
											"end": 8997,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 9003,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8627,
											"end": 9003,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9008,
											"end": 9485,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9008,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9083,
											"end": 9095,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9116,
											"end": 9122,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9167,
											"end": 9173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9174,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9233,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9285,
											"end": 9298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9285,
											"end": 9298,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9285,
											"end": 9298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9304,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9268,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 9153,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9340,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9399,
											"end": 9402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9378,
											"end": 9381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9467,
											"end": 9469,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9446,
											"end": 9461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9442,
											"end": 9471,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9472,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9472,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9059,
											"end": 9485,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9490,
											"end": 9693,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 9490,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9686,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9591,
											"end": 9693,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9698,
											"end": 10538,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9698,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10110,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10110,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10144,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10060,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10194,
											"end": 10196,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10172,
											"end": 10203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10172,
											"end": 10203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10172,
											"end": 10203,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 10538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 10538,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10269,
											"end": 10288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10267,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10226,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10347,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10309,
											"end": 10318,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10348,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10414,
											"end": 10420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10480,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 10525,
											"end": 10531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10517,
											"end": 10523,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 10498,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10532,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10538,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10029,
											"end": 10538,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10543,
											"end": 11105,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10543,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10840,
											"end": 10855,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10855,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10822,
											"end": 10856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10822,
											"end": 10856,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10907,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10907,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10865,
											"end": 10908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10939,
											"end": 10941,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10951,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10951,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 10984,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 10994,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 10994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 10994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10805,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 11025,
											"end": 11028,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11010,
											"end": 11029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11010,
											"end": 11029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 11105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 11105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 11052,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11099,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 11105,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10774,
											"end": 11105,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11110,
											"end": 11377,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 11110,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 11367,
											"end": 11369,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11350,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 11309,
											"end": 11371,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11382,
											"end": 11859,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11382,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11382,
											"end": 11859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11641,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11628,
											"end": 11637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11621,
											"end": 11642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11712,
											"end": 11721,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11706,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11767,
											"end": 11773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11763,
											"end": 11785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 11846,
											"end": 11852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11838,
											"end": 11844,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 11803,
											"end": 11853,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11803,
											"end": 11853,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 11803,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11795,
											"end": 11853,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11611,
											"end": 11859,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11611,
											"end": 11859,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11864,
											"end": 12051,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 11864,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12044,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12004,
											"end": 12045,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11992,
											"end": 11994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11959,
											"end": 12051,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12056,
											"end": 12277,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 12056,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12056,
											"end": 12277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12207,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12194,
											"end": 12203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 12267,
											"end": 12269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 12225,
											"end": 12271,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12282,
											"end": 12698,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 12282,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12486,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12525,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12496,
											"end": 12526,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 12557,
											"end": 12559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12535,
											"end": 12597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12628,
											"end": 12630,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12613,
											"end": 12631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12606,
											"end": 12656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12691,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12673,
											"end": 12692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12673,
											"end": 12692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12456,
											"end": 12698,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12703,
											"end": 13107,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 12703,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 12907,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 12924,
											"end": 12942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12917,
											"end": 12947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12983,
											"end": 13017,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 12978,
											"end": 12980,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12956,
											"end": 13018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13034,
											"end": 13052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13034,
											"end": 13052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13100,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13082,
											"end": 13101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12877,
											"end": 13107,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13112,
											"end": 13519,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 13112,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13316,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13317,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13296,
											"end": 13317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13353,
											"end": 13355,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13356,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13392,
											"end": 13426,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 13387,
											"end": 13389,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13372,
											"end": 13390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13365,
											"end": 13427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13458,
											"end": 13460,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13436,
											"end": 13477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13509,
											"end": 13512,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13494,
											"end": 13513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13519,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13524,
											"end": 13926,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 13524,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13708,
											"end": 13729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13708,
											"end": 13729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13708,
											"end": 13729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13765,
											"end": 13767,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 13768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13804,
											"end": 13838,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13799,
											"end": 13801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13848,
											"end": 13884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13919,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13901,
											"end": 13920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 13920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13698,
											"end": 13926,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13931,
											"end": 14331,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 13931,
											"end": 14331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14115,
											"end": 14136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14115,
											"end": 14136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14115,
											"end": 14136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14174,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14145,
											"end": 14175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14245,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 14206,
											"end": 14208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14184,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14321,
											"end": 14324,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14306,
											"end": 14325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14331,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14336,
											"end": 14741,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 14336,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14520,
											"end": 14541,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14577,
											"end": 14579,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14550,
											"end": 14580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14616,
											"end": 14650,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 14611,
											"end": 14613,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14596,
											"end": 14614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14682,
											"end": 14684,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14660,
											"end": 14699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14731,
											"end": 14734,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14716,
											"end": 14735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14716,
											"end": 14735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14741,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14746,
											"end": 15147,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 14746,
											"end": 15147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14930,
											"end": 14951,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14951,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 14989,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14960,
											"end": 14990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15026,
											"end": 15060,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 15021,
											"end": 15023,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15006,
											"end": 15024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15006,
											"end": 15024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15077,
											"end": 15095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15077,
											"end": 15095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15070,
											"end": 15105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15140,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15122,
											"end": 15141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15122,
											"end": 15141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 15147,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15152,
											"end": 15566,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 15152,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15354,
											"end": 15356,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15336,
											"end": 15357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15357,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15393,
											"end": 15395,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15373,
											"end": 15391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15373,
											"end": 15391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15373,
											"end": 15391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15366,
											"end": 15396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15432,
											"end": 15466,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 15427,
											"end": 15429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15412,
											"end": 15430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15412,
											"end": 15430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15498,
											"end": 15500,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15483,
											"end": 15501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15483,
											"end": 15501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15476,
											"end": 15524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15559,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15541,
											"end": 15560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15541,
											"end": 15560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15326,
											"end": 15566,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15571,
											"end": 15970,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15571,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15773,
											"end": 15775,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15755,
											"end": 15776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15755,
											"end": 15776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15755,
											"end": 15776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15814,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 15792,
											"end": 15810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15792,
											"end": 15810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15792,
											"end": 15810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15785,
											"end": 15815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15851,
											"end": 15885,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 15846,
											"end": 15848,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15831,
											"end": 15849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15831,
											"end": 15849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15824,
											"end": 15886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15917,
											"end": 15919,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15902,
											"end": 15920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15902,
											"end": 15920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15895,
											"end": 15928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15960,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15945,
											"end": 15964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15945,
											"end": 15964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15745,
											"end": 15970,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15975,
											"end": 16381,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 15975,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16177,
											"end": 16179,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16180,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16180,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16216,
											"end": 16218,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 16196,
											"end": 16214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16189,
											"end": 16219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16255,
											"end": 16289,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 16250,
											"end": 16252,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16235,
											"end": 16253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16228,
											"end": 16290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16321,
											"end": 16323,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16306,
											"end": 16324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16306,
											"end": 16324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16374,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16356,
											"end": 16375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16356,
											"end": 16375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16381,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16386,
											"end": 16742,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 16386,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16570,
											"end": 16591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16666,
											"end": 16700,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16661,
											"end": 16663,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16639,
											"end": 16701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16733,
											"end": 16735,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16560,
											"end": 16742,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16747,
											"end": 17152,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 16747,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16949,
											"end": 16951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16931,
											"end": 16952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16931,
											"end": 16952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16931,
											"end": 16952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16961,
											"end": 16991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17027,
											"end": 17061,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 17022,
											"end": 17024,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17000,
											"end": 17062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17093,
											"end": 17095,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17078,
											"end": 17096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17078,
											"end": 17096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17142,
											"end": 17145,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17127,
											"end": 17146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17127,
											"end": 17146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16921,
											"end": 17152,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17157,
											"end": 17562,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 17157,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17359,
											"end": 17361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17341,
											"end": 17362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17341,
											"end": 17362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17341,
											"end": 17362,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17398,
											"end": 17400,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 17378,
											"end": 17396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17378,
											"end": 17396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17378,
											"end": 17396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17371,
											"end": 17401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17437,
											"end": 17471,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 17432,
											"end": 17434,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17410,
											"end": 17472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17503,
											"end": 17505,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17488,
											"end": 17506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17488,
											"end": 17506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17555,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17537,
											"end": 17556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17537,
											"end": 17556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17562,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17567,
											"end": 17971,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 17567,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17769,
											"end": 17771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17808,
											"end": 17810,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17781,
											"end": 17811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 17842,
											"end": 17844,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17820,
											"end": 17882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17913,
											"end": 17915,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17898,
											"end": 17916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17898,
											"end": 17916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17891,
											"end": 17929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 17964,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17946,
											"end": 17965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17946,
											"end": 17965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17741,
											"end": 17971,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17976,
											"end": 18373,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 17976,
											"end": 18373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18178,
											"end": 18180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18160,
											"end": 18181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18160,
											"end": 18181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18160,
											"end": 18181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18217,
											"end": 18219,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 18197,
											"end": 18215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18197,
											"end": 18215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18197,
											"end": 18215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18256,
											"end": 18290,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 18251,
											"end": 18253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18236,
											"end": 18254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18236,
											"end": 18254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18307,
											"end": 18325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18307,
											"end": 18325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18300,
											"end": 18331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18363,
											"end": 18366,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 18348,
											"end": 18367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18348,
											"end": 18367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18150,
											"end": 18373,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18378,
											"end": 18555,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 18378,
											"end": 18555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18524,
											"end": 18549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18524,
											"end": 18549,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18524,
											"end": 18549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18512,
											"end": 18514,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18497,
											"end": 18515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18479,
											"end": 18555,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18560,
											"end": 18808,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 18560,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18759,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18734,
											"end": 18759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18790,
											"end": 18792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18775,
											"end": 18793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18775,
											"end": 18793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18768,
											"end": 18802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18724,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18707,
											"end": 18725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18707,
											"end": 18725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18689,
											"end": 18808,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18813,
											"end": 19005,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 18813,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18904,
											"end": 18910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18901,
											"end": 18931,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18898,
											"end": 18900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18898,
											"end": 18900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18898,
											"end": 18900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18994,
											"end": 18998,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18975,
											"end": 18992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18975,
											"end": 18992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18975,
											"end": 18992,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 18971,
											"end": 18999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18971,
											"end": 18999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18888,
											"end": 19005,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19010,
											"end": 19138,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 19010,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19081,
											"end": 19082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19077,
											"end": 19083,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19074,
											"end": 19075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19071,
											"end": 19084,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 19068,
											"end": 19070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 19087,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 19087,
											"end": 19105,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19087,
											"end": 19105,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 19087,
											"end": 19105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19123,
											"end": 19132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19058,
											"end": 19138,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19143,
											"end": 19268,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 19143,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19211,
											"end": 19212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19208,
											"end": 19209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19205,
											"end": 19213,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 19216,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19253,
											"end": 19262,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19253,
											"end": 19262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19192,
											"end": 19268,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19273,
											"end": 19409,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 19273,
											"end": 19409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19273,
											"end": 19409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19340,
											"end": 19345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19330,
											"end": 19332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 19330,
											"end": 19332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19349,
											"end": 19367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 19349,
											"end": 19367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 19349,
											"end": 19367,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19349,
											"end": 19367,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 19349,
											"end": 19367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19385,
											"end": 19403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19385,
											"end": 19403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19320,
											"end": 19409,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19414,
											"end": 19794,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 19414,
											"end": 19794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 19500,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 19489,
											"end": 19501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19489,
											"end": 19501,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19546,
											"end": 19547,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19536,
											"end": 19548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19536,
											"end": 19548,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19536,
											"end": 19548,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19557,
											"end": 19559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 19557,
											"end": 19559,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19611,
											"end": 19615,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 19603,
											"end": 19609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19599,
											"end": 19616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19557,
											"end": 19559,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 19557,
											"end": 19559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19664,
											"end": 19666,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19656,
											"end": 19662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19653,
											"end": 19667,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19633,
											"end": 19651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19630,
											"end": 19668,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19710,
											"end": 19720,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19705,
											"end": 19708,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19698,
											"end": 19699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19745,
											"end": 19749,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 19742,
											"end": 19743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19735,
											"end": 19750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19777,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19770,
											"end": 19771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19763,
											"end": 19778,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19469,
											"end": 19794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19469,
											"end": 19794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19469,
											"end": 19794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19469,
											"end": 19794,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19799,
											"end": 20048,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 19799,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19909,
											"end": 19911,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19890,
											"end": 19903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19890,
											"end": 19903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19886,
											"end": 19913,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19874,
											"end": 19914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19874,
											"end": 19914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19929,
											"end": 19963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 19963,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19965,
											"end": 19987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19965,
											"end": 19987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19965,
											"end": 19987,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19926,
											"end": 19988,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19991,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19991,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 19991,
											"end": 20009,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19991,
											"end": 20009,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19991,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20027,
											"end": 20029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20020,
											"end": 20042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19846,
											"end": 20048,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20053,
											"end": 20188,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 20053,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20113,
											"end": 20130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20113,
											"end": 20130,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20110,
											"end": 20112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20110,
											"end": 20112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 20110,
											"end": 20112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 20133,
											"end": 20151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20180,
											"end": 20181,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20169,
											"end": 20182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20169,
											"end": 20182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20100,
											"end": 20188,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20193,
											"end": 20320,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 20193,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20254,
											"end": 20264,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 20249,
											"end": 20252,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20245,
											"end": 20265,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20242,
											"end": 20243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20285,
											"end": 20289,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 20282,
											"end": 20283,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20275,
											"end": 20290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20309,
											"end": 20313,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20306,
											"end": 20307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20299,
											"end": 20314,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20325,
											"end": 20452,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 20325,
											"end": 20452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20386,
											"end": 20396,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 20381,
											"end": 20384,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20377,
											"end": 20397,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20374,
											"end": 20375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20367,
											"end": 20398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20417,
											"end": 20421,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 20414,
											"end": 20415,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20407,
											"end": 20422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20445,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20438,
											"end": 20439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20431,
											"end": 20446,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20642,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 20457,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20534,
											"end": 20535,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 20516,
											"end": 20532,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20513,
											"end": 20536,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20510,
											"end": 20512,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20510,
											"end": 20512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 20510,
											"end": 20512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20584,
											"end": 20585,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20579,
											"end": 20582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20559,
											"end": 20586,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 20615,
											"end": 20625,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20610,
											"end": 20613,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20606,
											"end": 20626,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 20500,
											"end": 20642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20500,
											"end": 20642,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20647,
											"end": 21318,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 20647,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20647,
											"end": 21318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20728,
											"end": 20732,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20710,
											"end": 20726,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20707,
											"end": 20733,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20704,
											"end": 20706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20704,
											"end": 20706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20704,
											"end": 20706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 20736,
											"end": 20741,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20704,
											"end": 20706,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 20704,
											"end": 20706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20770,
											"end": 20772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20764,
											"end": 20773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20835,
											"end": 20851,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 20831,
											"end": 20856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20831,
											"end": 20856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20828,
											"end": 20829,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20764,
											"end": 20773,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20807,
											"end": 20857,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 20886,
											"end": 20890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20880,
											"end": 20891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20910,
											"end": 20926,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21016,
											"end": 21018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21009,
											"end": 21013,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21001,
											"end": 21007,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20997,
											"end": 21014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20994,
											"end": 21019,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20989,
											"end": 20991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 20987,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20978,
											"end": 20992,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20975,
											"end": 21020,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 20972,
											"end": 20974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20972,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20972,
											"end": 20974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 21023,
											"end": 21028,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20972,
											"end": 20974,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20972,
											"end": 20974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21060,
											"end": 21066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21054,
											"end": 21058,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21050,
											"end": 21067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21039,
											"end": 21067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21039,
											"end": 21067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21096,
											"end": 21099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21090,
											"end": 21100,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21115,
											"end": 21121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21112,
											"end": 21126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21109,
											"end": 21111,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21109,
											"end": 21111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 21109,
											"end": 21111,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 21129,
											"end": 21134,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21109,
											"end": 21111,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 21109,
											"end": 21111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21213,
											"end": 21215,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21194,
											"end": 21210,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 21188,
											"end": 21192,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21184,
											"end": 21211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21180,
											"end": 21216,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21173,
											"end": 21177,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21164,
											"end": 21170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21159,
											"end": 21162,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21151,
											"end": 21178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21148,
											"end": 21217,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 21220,
											"end": 21225,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 21287,
											"end": 21291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21278,
											"end": 21284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21270,
											"end": 21276,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21266,
											"end": 21285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21262,
											"end": 21292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21256,
											"end": 21260,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 21236,
											"end": 21293,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21236,
											"end": 21293,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 21236,
											"end": 21293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21309,
											"end": 21312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21309,
											"end": 21312,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20694,
											"end": 21318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20694,
											"end": 21318,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21323,
											"end": 21456,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 21323,
											"end": 21456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21399,
											"end": 21431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21399,
											"end": 21431,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21389,
											"end": 21432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21389,
											"end": 21432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21379,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 21379,
											"end": 21381,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21446,
											"end": 21447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21443,
											"end": 21444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21448,
											"name": "REVERT",
											"source": 10
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"brun(address,uint256,uint256)": "092f2dbf",
							"getTokenSupply()": "ad974f4c",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"mintBatchWithNumber(uint256)": "71ac14e6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply()": "7824407f",
							"transferOwnership(address)": "f2fde38b",
							"transferWithNumber(uint256,uint256,address)": "9416308e",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"brun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"mintBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/ERC1155.sol\":\"BeeItems\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/ERC1155.sol\":{\"keccak256\":\"0x7117e45629c307c5521b7e9963b578acde768535f98bd567357be6d387fa7dc5\",\"urls\":[\"bzz-raw://57b60b585a5e4389a1adddd037b9150d71df1c180b80ff74f10201a80429575c\",\"dweb:/ipfs/QmdLyFkkW79gLSxkkC7y6mSC5hYWTWJZaFB3eTqWhFX5MR\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 255,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "nft/ERC1155.sol:BeeItems",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 255,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1151   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:138   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":189:195   */\n  dup2\n    /* \"#utility.yul\":181:187   */\n  dup3\n    /* \"#utility.yul\":174:196   */\n  revert\n    /* \"#utility.yul\":136:138   */\ntag_25:\n    /* \"#utility.yul\":221:237   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":286:300   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":283:285   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":318:324   */\n  dup4\n    /* \"#utility.yul\":310:316   */\n  dup5\n    /* \"#utility.yul\":303:325   */\n  revert\n    /* \"#utility.yul\":283:285   */\ntag_26:\n    /* \"#utility.yul\":361:367   */\n  dup2\n    /* \"#utility.yul\":350:359   */\n  dup6\n    /* \"#utility.yul\":346:368   */\n  add\n    /* \"#utility.yul\":336:368   */\n  swap2\n  pop\n    /* \"#utility.yul\":406:413   */\n  dup6\n    /* \"#utility.yul\":399:403   */\n  0x1f\n    /* \"#utility.yul\":395:397   */\n  dup4\n    /* \"#utility.yul\":391:404   */\n  add\n    /* \"#utility.yul\":387:414   */\n  slt\n    /* \"#utility.yul\":377:379   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":433:439   */\n  dup4\n    /* \"#utility.yul\":425:431   */\n  dup5\n    /* \"#utility.yul\":418:440   */\n  revert\n    /* \"#utility.yul\":377:379   */\ntag_27:\n    /* \"#utility.yul\":467:469   */\n  dup2\n    /* \"#utility.yul\":461:470   */\n  mload\n    /* \"#utility.yul\":489:491   */\n  dup2\n    /* \"#utility.yul\":485:487   */\n  dup2\n    /* \"#utility.yul\":482:492   */\n  gt\n    /* \"#utility.yul\":479:481   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":495:513   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":570:572   */\n  0x40\n    /* \"#utility.yul\":564:573   */\n  mload\n    /* \"#utility.yul\":538:540   */\n  0x1f\n    /* \"#utility.yul\":624:637   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":620:642   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":644:646   */\n  0x3f\n    /* \"#utility.yul\":616:647   */\n  add\n    /* \"#utility.yul\":612:652   */\n  and\n    /* \"#utility.yul\":600:653   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":668:686   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":688:710   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":665:711   */\n  or\n    /* \"#utility.yul\":662:664   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":714:732   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":754:764   */\n  dup2\n    /* \"#utility.yul\":750:752   */\n  0x40\n    /* \"#utility.yul\":743:765   */\n  mstore\n    /* \"#utility.yul\":789:791   */\n  dup3\n    /* \"#utility.yul\":781:787   */\n  dup2\n    /* \"#utility.yul\":774:792   */\n  mstore\n    /* \"#utility.yul\":829:836   */\n  dup9\n    /* \"#utility.yul\":824:826   */\n  dup7\n    /* \"#utility.yul\":819:821   */\n  dup5\n    /* \"#utility.yul\":815:817   */\n  dup8\n    /* \"#utility.yul\":811:822   */\n  add\n    /* \"#utility.yul\":807:827   */\n  add\n    /* \"#utility.yul\":804:837   */\n  gt\n    /* \"#utility.yul\":801:803   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":855:861   */\n  dup7\n    /* \"#utility.yul\":847:853   */\n  dup8\n    /* \"#utility.yul\":840:862   */\n  revert\n    /* \"#utility.yul\":801:803   */\ntag_33:\n    /* \"#utility.yul\":882:888   */\n  dup7\n    /* \"#utility.yul\":873:888   */\n  swap4\n  pop\n    /* \"#utility.yul\":897:1026   */\ntag_34:\n    /* \"#utility.yul\":911:913   */\n  dup3\n    /* \"#utility.yul\":908:909   */\n  dup5\n    /* \"#utility.yul\":905:914   */\n  lt\n    /* \"#utility.yul\":897:1026   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":999:1009   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":995:1014   */\n  dup7\n  add\n    /* \"#utility.yul\":989:1015   */\n  mload\n    /* \"#utility.yul\":968:982   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":964:987   */\n  dup8\n  add\n    /* \"#utility.yul\":957:1016   */\n  mstore\n    /* \"#utility.yul\":922:932   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":897:1026   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1044:1046   */\n  dup3\n    /* \"#utility.yul\":1041:1042   */\n  dup5\n    /* \"#utility.yul\":1038:1047   */\n  gt\n    /* \"#utility.yul\":1035:1037   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1103:1109   */\n  dup7\n    /* \"#utility.yul\":1098:1100   */\n  dup7\n    /* \"#utility.yul\":1093:1095   */\n  dup5\n    /* \"#utility.yul\":1085:1091   */\n  dup4\n    /* \"#utility.yul\":1081:1096   */\n  add\n    /* \"#utility.yul\":1077:1101   */\n  add\n    /* \"#utility.yul\":1070:1110   */\n  mstore\n    /* \"#utility.yul\":1035:1037   */\ntag_37:\n    /* \"#utility.yul\":1139:1145   */\n  swap9\n    /* \"#utility.yul\":105:1151   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1536   */\ntag_13:\n    /* \"#utility.yul\":1241:1242   */\n  0x02\n    /* \"#utility.yul\":1231:1243   */\n  dup2\n  div\n    /* \"#utility.yul\":1288:1289   */\n  0x01\n    /* \"#utility.yul\":1278:1290   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1299:1301   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1353:1357   */\n  0x7f\n    /* \"#utility.yul\":1345:1351   */\n  dup3\n    /* \"#utility.yul\":1341:1358   */\n  and\n    /* \"#utility.yul\":1331:1358   */\n  swap2\n  pop\n    /* \"#utility.yul\":1299:1301   */\ntag_39:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1398:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1409   */\n  lt\n    /* \"#utility.yul\":1375:1393   */\n  dup2\n    /* \"#utility.yul\":1372:1410   */\n  eq\n    /* \"#utility.yul\":1369:1371   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1452:1462   */\n  0x4e487b71\n    /* \"#utility.yul\":1447:1450   */\n  0xe0\n    /* \"#utility.yul\":1443:1463   */\n  shl\n    /* \"#utility.yul\":1440:1441   */\n  0x00\n    /* \"#utility.yul\":1433:1464   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1515:1519   */\n  0x24\n    /* \"#utility.yul\":1512:1513   */\n  0x00\n    /* \"#utility.yul\":1505:1520   */\n  revert\n    /* \"#utility.yul\":1369:1371   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1211:1536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1541:1668   */\ntag_30:\n    /* \"#utility.yul\":1602:1612   */\n  0x4e487b71\n    /* \"#utility.yul\":1597:1600   */\n  0xe0\n    /* \"#utility.yul\":1593:1613   */\n  shl\n    /* \"#utility.yul\":1590:1591   */\n  0x00\n    /* \"#utility.yul\":1583:1614   */\n  mstore\n    /* \"#utility.yul\":1633:1637   */\n  0x41\n    /* \"#utility.yul\":1630:1631   */\n  0x04\n    /* \"#utility.yul\":1623:1638   */\n  mstore\n    /* \"#utility.yul\":1657:1661   */\n  0x24\n    /* \"#utility.yul\":1654:1655   */\n  0x00\n    /* \"#utility.yul\":1647:1662   */\n  revert\n    /* \"#utility.yul\":1573:1668   */\ntag_23:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1507:1518  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1506  super.supportsInterface */\n      tag_61\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_57:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      tag_70\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4288  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4278:4290  _msgSender() */\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4274  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_73\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      tag_45\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4327  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4317:4329  _msgSender() */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_83\n      jump\t// in\n    tag_81:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_86:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_92:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_93\n      dup2\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      tag_97\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3254  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3244:3256  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_98\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      tag_101\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3802  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3804  _msgSender() */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3788  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_103\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      tag_45\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3841  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3831:3843  _msgSender() */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_103:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_107\n      jump\t// in\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup2\n      and\n      shl(0xe0, 0x01ffc9a7)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_115\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      tag_119\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6463  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6465  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6465  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_120\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6497:6505  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6507:6511  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6513:6515  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6517:6520  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6529  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6531:6535  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6496  _beforeTokenTransfer */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_120:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6552:6561  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_126:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_129\n      jump\t// in\n    tag_127:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_130\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_94\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_136\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_140\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap1\n      tag_141\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup6\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      tag_23\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_118\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5191  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      tag_145\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5204  _msgSender */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5194:5206  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5175:5206  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_146\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5238:5246  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_147\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_148\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_147:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_148\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n    tag_149:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5308:5312  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5237  _beforeTokenTransfer */\n      tag_135\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_129\n      jump\t// in\n    tag_150:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_152\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_131\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5621:5623  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5615:5619  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5605:5613  operator */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5625:5627  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5629:5635  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_155\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_136:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      tag_159\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14516  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      and\n      tag_160\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14529  to.isContract() */\n      jump\t// in\n    tag_159:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_162\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_163\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_166\n      swap2\n      dup2\n      add\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x01\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_168\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_171\n      jumpi\n      pop\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      tag_176\n      jumpi\n      pop\n      jump(tag_170)\n    tag_176:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_171:\n      pop\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_179\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_168:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_155\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_183\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      tag_189\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13760  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      and\n      tag_160\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n      jump\t// in\n    tag_189:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_191\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_195\n      swap2\n      dup2\n      add\n      swap1\n      tag_167\n      jump\t// in\n    tag_195:\n      0x01\n    tag_194:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_196\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_196:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_155\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_183\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_210:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":194:962   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":307:310   */\n      dup3\n        /* \"#utility.yul\":300:304   */\n      0x1f\n        /* \"#utility.yul\":292:298   */\n      dup4\n        /* \"#utility.yul\":288:305   */\n      add\n        /* \"#utility.yul\":284:311   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":329:334   */\n      dup1\n        /* \"#utility.yul\":322:327   */\n      dup2\n        /* \"#utility.yul\":315:335   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_215:\n        /* \"#utility.yul\":369:375   */\n      dup2\n        /* \"#utility.yul\":356:376   */\n      calldataload\n        /* \"#utility.yul\":395:399   */\n      0x20\n        /* \"#utility.yul\":418:467   */\n      tag_216\n        /* \"#utility.yul\":464:466   */\n      dup3\n        /* \"#utility.yul\":418:467   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":496:498   */\n      0x40\n        /* \"#utility.yul\":490:499   */\n      mload\n        /* \"#utility.yul\":508:539   */\n      tag_218\n        /* \"#utility.yul\":536:538   */\n      dup3\n        /* \"#utility.yul\":528:534   */\n      dup3\n        /* \"#utility.yul\":508:539   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":574:592   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":608:623   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":643:658   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":689:700   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":677:701   */\n      dup8\n      add\n        /* \"#utility.yul\":673:706   */\n      dup5\n      add\n        /* \"#utility.yul\":670:712   */\n      dup9\n      lt\n        /* \"#utility.yul\":667:669   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":729:734   */\n      dup6\n        /* \"#utility.yul\":722:727   */\n      dup7\n        /* \"#utility.yul\":715:735   */\n      revert\n        /* \"#utility.yul\":667:669   */\n    tag_220:\n        /* \"#utility.yul\":755:760   */\n      dup6\n        /* \"#utility.yul\":769:932   */\n    tag_221:\n        /* \"#utility.yul\":783:785   */\n      dup6\n        /* \"#utility.yul\":780:781   */\n      dup2\n        /* \"#utility.yul\":777:786   */\n      lt\n        /* \"#utility.yul\":769:932   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":840:857   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":828:858   */\n      dup5\n      mstore\n        /* \"#utility.yul\":878:890   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":910:922   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":801:802   */\n      0x01\n        /* \"#utility.yul\":794:803   */\n      add\n        /* \"#utility.yul\":769:932   */\n      jump(tag_221)\n    tag_223:\n      pop\n        /* \"#utility.yul\":950:956   */\n      swap1\n      swap8\n        /* \"#utility.yul\":264:962   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1544   */\n    tag_224:\n      0x00\n        /* \"#utility.yul\":1064:1067   */\n      dup3\n        /* \"#utility.yul\":1057:1061   */\n      0x1f\n        /* \"#utility.yul\":1049:1055   */\n      dup4\n        /* \"#utility.yul\":1045:1062   */\n      add\n        /* \"#utility.yul\":1041:1068   */\n      slt\n        /* \"#utility.yul\":1031:1033   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1086:1091   */\n      dup1\n        /* \"#utility.yul\":1079:1084   */\n      dup2\n        /* \"#utility.yul\":1072:1092   */\n      revert\n        /* \"#utility.yul\":1031:1033   */\n    tag_226:\n        /* \"#utility.yul\":1126:1132   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      calldataload\n        /* \"#utility.yul\":1152:1170   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1148:1150   */\n      dup2\n        /* \"#utility.yul\":1145:1171   */\n      gt\n        /* \"#utility.yul\":1142:1144   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1174:1192   */\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1223:1225   */\n      0x40\n        /* \"#utility.yul\":1217:1226   */\n      mload\n        /* \"#utility.yul\":1235:1302   */\n      tag_230\n        /* \"#utility.yul\":1290:1292   */\n      0x1f\n        /* \"#utility.yul\":1271:1284   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1267:1294   */\n      and\n        /* \"#utility.yul\":1296:1300   */\n      0x20\n        /* \"#utility.yul\":1263:1301   */\n      add\n        /* \"#utility.yul\":1217:1226   */\n      dup3\n        /* \"#utility.yul\":1235:1302   */\n      tag_219\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1326:1328   */\n      dup2\n        /* \"#utility.yul\":1318:1324   */\n      dup2\n        /* \"#utility.yul\":1311:1329   */\n      mstore\n        /* \"#utility.yul\":1372:1375   */\n      dup5\n        /* \"#utility.yul\":1365:1369   */\n      0x20\n        /* \"#utility.yul\":1360:1362   */\n      dup4\n        /* \"#utility.yul\":1352:1358   */\n      dup7\n        /* \"#utility.yul\":1348:1363   */\n      add\n        /* \"#utility.yul\":1344:1370   */\n      add\n        /* \"#utility.yul\":1341:1376   */\n      gt\n        /* \"#utility.yul\":1338:1340   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1393:1398   */\n      dup3\n        /* \"#utility.yul\":1386:1391   */\n      dup4\n        /* \"#utility.yul\":1379:1399   */\n      revert\n        /* \"#utility.yul\":1338:1340   */\n    tag_231:\n        /* \"#utility.yul\":1461:1463   */\n      dup2\n        /* \"#utility.yul\":1454:1458   */\n      0x20\n        /* \"#utility.yul\":1446:1452   */\n      dup6\n        /* \"#utility.yul\":1442:1459   */\n      add\n        /* \"#utility.yul\":1435:1439   */\n      0x20\n        /* \"#utility.yul\":1427:1433   */\n      dup4\n        /* \"#utility.yul\":1423:1440   */\n      add\n        /* \"#utility.yul\":1410:1464   */\n      calldatacopy\n        /* \"#utility.yul\":1484:1499   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1501:1505   */\n      0x20\n        /* \"#utility.yul\":1480:1506   */\n      add\n        /* \"#utility.yul\":1473:1514   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1488:1494   */\n      swap3\n        /* \"#utility.yul\":1021:1544   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1823   */\n    tag_46:\n      0x00\n      dup1\n        /* \"#utility.yul\":1678:1680   */\n      0x40\n        /* \"#utility.yul\":1666:1675   */\n      dup4\n        /* \"#utility.yul\":1657:1664   */\n      dup6\n        /* \"#utility.yul\":1653:1676   */\n      sub\n        /* \"#utility.yul\":1649:1681   */\n      slt\n        /* \"#utility.yul\":1646:1648   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1699:1705   */\n      dup2\n        /* \"#utility.yul\":1691:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1706   */\n      revert\n        /* \"#utility.yul\":1646:1648   */\n    tag_233:\n        /* \"#utility.yul\":1727:1758   */\n      tag_234\n        /* \"#utility.yul\":1748:1757   */\n      dup4\n        /* \"#utility.yul\":1727:1758   */\n      tag_210\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1717:1758   */\n      swap2\n      pop\n        /* \"#utility.yul\":1777:1817   */\n      tag_235\n        /* \"#utility.yul\":1813:1815   */\n      0x20\n        /* \"#utility.yul\":1802:1811   */\n      dup5\n        /* \"#utility.yul\":1798:1816   */\n      add\n        /* \"#utility.yul\":1777:1817   */\n      tag_210\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1767:1817   */\n      swap1\n      pop\n        /* \"#utility.yul\":1636:1823   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1828:2829   */\n    tag_32:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2067:2070   */\n      0xa0\n        /* \"#utility.yul\":2055:2064   */\n      dup7\n        /* \"#utility.yul\":2046:2053   */\n      dup9\n        /* \"#utility.yul\":2042:2065   */\n      sub\n        /* \"#utility.yul\":2038:2071   */\n      slt\n        /* \"#utility.yul\":2035:2037   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2089:2095   */\n      dup1\n        /* \"#utility.yul\":2081:2087   */\n      dup2\n        /* \"#utility.yul\":2074:2096   */\n      revert\n        /* \"#utility.yul\":2035:2037   */\n    tag_237:\n        /* \"#utility.yul\":2117:2148   */\n      tag_238\n        /* \"#utility.yul\":2138:2147   */\n      dup7\n        /* \"#utility.yul\":2117:2148   */\n      tag_210\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2107:2148   */\n      swap5\n      pop\n        /* \"#utility.yul\":2167:2207   */\n      tag_239\n        /* \"#utility.yul\":2203:2205   */\n      0x20\n        /* \"#utility.yul\":2192:2201   */\n      dup8\n        /* \"#utility.yul\":2188:2206   */\n      add\n        /* \"#utility.yul\":2167:2207   */\n      tag_210\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2157:2207   */\n      swap4\n      pop\n        /* \"#utility.yul\":2258:2260   */\n      0x40\n        /* \"#utility.yul\":2247:2256   */\n      dup7\n        /* \"#utility.yul\":2243:2261   */\n      add\n        /* \"#utility.yul\":2230:2262   */\n      calldataload\n        /* \"#utility.yul\":2281:2299   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2322:2324   */\n      dup1\n        /* \"#utility.yul\":2314:2320   */\n      dup3\n        /* \"#utility.yul\":2311:2325   */\n      gt\n        /* \"#utility.yul\":2308:2310   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2343:2349   */\n      dup3\n        /* \"#utility.yul\":2335:2341   */\n      dup4\n        /* \"#utility.yul\":2328:2350   */\n      revert\n        /* \"#utility.yul\":2308:2310   */\n    tag_240:\n        /* \"#utility.yul\":2371:2438   */\n      tag_241\n        /* \"#utility.yul\":2430:2437   */\n      dup10\n        /* \"#utility.yul\":2421:2427   */\n      dup4\n        /* \"#utility.yul\":2410:2419   */\n      dup11\n        /* \"#utility.yul\":2406:2428   */\n      add\n        /* \"#utility.yul\":2371:2438   */\n      tag_213\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2361:2438   */\n      swap5\n      pop\n        /* \"#utility.yul\":2491:2493   */\n      0x60\n        /* \"#utility.yul\":2480:2489   */\n      dup9\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2463:2495   */\n      calldataload\n        /* \"#utility.yul\":2447:2495   */\n      swap2\n      pop\n        /* \"#utility.yul\":2520:2522   */\n      dup1\n        /* \"#utility.yul\":2510:2518   */\n      dup3\n        /* \"#utility.yul\":2507:2523   */\n      gt\n        /* \"#utility.yul\":2504:2506   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2541:2547   */\n      dup3\n        /* \"#utility.yul\":2533:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2548   */\n      revert\n        /* \"#utility.yul\":2504:2506   */\n    tag_242:\n        /* \"#utility.yul\":2569:2638   */\n      tag_243\n        /* \"#utility.yul\":2630:2637   */\n      dup10\n        /* \"#utility.yul\":2619:2627   */\n      dup4\n        /* \"#utility.yul\":2608:2617   */\n      dup11\n        /* \"#utility.yul\":2604:2628   */\n      add\n        /* \"#utility.yul\":2569:2638   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2559:2638   */\n      swap4\n      pop\n        /* \"#utility.yul\":2691:2694   */\n      0x80\n        /* \"#utility.yul\":2680:2689   */\n      dup9\n        /* \"#utility.yul\":2676:2695   */\n      add\n        /* \"#utility.yul\":2663:2696   */\n      calldataload\n        /* \"#utility.yul\":2647:2696   */\n      swap2\n      pop\n        /* \"#utility.yul\":2721:2723   */\n      dup1\n        /* \"#utility.yul\":2711:2719   */\n      dup3\n        /* \"#utility.yul\":2708:2724   */\n      gt\n        /* \"#utility.yul\":2705:2707   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2742:2748   */\n      dup3\n        /* \"#utility.yul\":2734:2740   */\n      dup4\n        /* \"#utility.yul\":2727:2749   */\n      revert\n        /* \"#utility.yul\":2705:2707   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":2770:2823   */\n      tag_245\n        /* \"#utility.yul\":2815:2822   */\n      dup9\n        /* \"#utility.yul\":2804:2812   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      dup10\n        /* \"#utility.yul\":2789:2813   */\n      add\n        /* \"#utility.yul\":2770:2823   */\n      tag_224\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2760:2823   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2025:2829   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2834:3466   */\n    tag_51:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3023:3026   */\n      0xa0\n        /* \"#utility.yul\":3011:3020   */\n      dup7\n        /* \"#utility.yul\":3002:3009   */\n      dup9\n        /* \"#utility.yul\":2998:3021   */\n      sub\n        /* \"#utility.yul\":2994:3027   */\n      slt\n        /* \"#utility.yul\":2991:2993   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3045:3051   */\n      dup1\n        /* \"#utility.yul\":3037:3043   */\n      dup2\n        /* \"#utility.yul\":3030:3052   */\n      revert\n        /* \"#utility.yul\":2991:2993   */\n    tag_247:\n        /* \"#utility.yul\":3073:3104   */\n      tag_248\n        /* \"#utility.yul\":3094:3103   */\n      dup7\n        /* \"#utility.yul\":3073:3104   */\n      tag_210\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3063:3104   */\n      swap5\n      pop\n        /* \"#utility.yul\":3123:3163   */\n      tag_249\n        /* \"#utility.yul\":3159:3161   */\n      0x20\n        /* \"#utility.yul\":3148:3157   */\n      dup8\n        /* \"#utility.yul\":3144:3162   */\n      add\n        /* \"#utility.yul\":3123:3163   */\n      tag_210\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3113:3163   */\n      swap4\n      pop\n        /* \"#utility.yul\":3210:3212   */\n      0x40\n        /* \"#utility.yul\":3199:3208   */\n      dup7\n        /* \"#utility.yul\":3195:3213   */\n      add\n        /* \"#utility.yul\":3182:3214   */\n      calldataload\n        /* \"#utility.yul\":3172:3214   */\n      swap3\n      pop\n        /* \"#utility.yul\":3261:3263   */\n      0x60\n        /* \"#utility.yul\":3250:3259   */\n      dup7\n        /* \"#utility.yul\":3246:3264   */\n      add\n        /* \"#utility.yul\":3233:3265   */\n      calldataload\n        /* \"#utility.yul\":3223:3265   */\n      swap2\n      pop\n        /* \"#utility.yul\":3316:3319   */\n      0x80\n        /* \"#utility.yul\":3305:3314   */\n      dup7\n        /* \"#utility.yul\":3301:3320   */\n      add\n        /* \"#utility.yul\":3288:3321   */\n      calldataload\n        /* \"#utility.yul\":3344:3362   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3336:3342   */\n      dup2\n        /* \"#utility.yul\":3333:3363   */\n      gt\n        /* \"#utility.yul\":3330:3332   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3381:3387   */\n      dup2\n        /* \"#utility.yul\":3373:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3388   */\n      revert\n        /* \"#utility.yul\":3330:3332   */\n    tag_250:\n        /* \"#utility.yul\":3409:3460   */\n      tag_245\n        /* \"#utility.yul\":3452:3459   */\n      dup9\n        /* \"#utility.yul\":3443:3449   */\n      dup3\n        /* \"#utility.yul\":3432:3441   */\n      dup10\n        /* \"#utility.yul\":3428:3450   */\n      add\n        /* \"#utility.yul\":3409:3460   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":3471:3840   */\n    tag_42:\n      0x00\n      dup1\n        /* \"#utility.yul\":3597:3599   */\n      0x40\n        /* \"#utility.yul\":3585:3594   */\n      dup4\n        /* \"#utility.yul\":3576:3583   */\n      dup6\n        /* \"#utility.yul\":3572:3595   */\n      sub\n        /* \"#utility.yul\":3568:3600   */\n      slt\n        /* \"#utility.yul\":3565:3567   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3618:3624   */\n      dup2\n        /* \"#utility.yul\":3610:3616   */\n      dup3\n        /* \"#utility.yul\":3603:3625   */\n      revert\n        /* \"#utility.yul\":3565:3567   */\n    tag_253:\n        /* \"#utility.yul\":3646:3677   */\n      tag_254\n        /* \"#utility.yul\":3667:3676   */\n      dup4\n        /* \"#utility.yul\":3646:3677   */\n      tag_210\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3636:3677   */\n      swap2\n      pop\n        /* \"#utility.yul\":3727:3729   */\n      0x20\n        /* \"#utility.yul\":3716:3725   */\n      dup4\n        /* \"#utility.yul\":3712:3730   */\n      add\n        /* \"#utility.yul\":3699:3731   */\n      calldataload\n        /* \"#utility.yul\":3774:3779   */\n      dup1\n        /* \"#utility.yul\":3767:3780   */\n      iszero\n        /* \"#utility.yul\":3760:3781   */\n      iszero\n        /* \"#utility.yul\":3753:3758   */\n      dup2\n        /* \"#utility.yul\":3750:3782   */\n      eq\n        /* \"#utility.yul\":3740:3742   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3801:3807   */\n      dup2\n        /* \"#utility.yul\":3793:3799   */\n      dup3\n        /* \"#utility.yul\":3786:3808   */\n      revert\n        /* \"#utility.yul\":3740:3742   */\n    tag_255:\n        /* \"#utility.yul\":3829:3834   */\n      dup1\n        /* \"#utility.yul\":3819:3834   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3555:3840   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3845:4111   */\n    tag_14:\n      0x00\n      dup1\n        /* \"#utility.yul\":3974:3976   */\n      0x40\n        /* \"#utility.yul\":3962:3971   */\n      dup4\n        /* \"#utility.yul\":3953:3960   */\n      dup6\n        /* \"#utility.yul\":3949:3972   */\n      sub\n        /* \"#utility.yul\":3945:3977   */\n      slt\n        /* \"#utility.yul\":3942:3944   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3995:4001   */\n      dup2\n        /* \"#utility.yul\":3987:3993   */\n      dup3\n        /* \"#utility.yul\":3980:4002   */\n      revert\n        /* \"#utility.yul\":3942:3944   */\n    tag_257:\n        /* \"#utility.yul\":4023:4054   */\n      tag_258\n        /* \"#utility.yul\":4044:4053   */\n      dup4\n        /* \"#utility.yul\":4023:4054   */\n      tag_210\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4013:4054   */\n      swap5\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4086:4104   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4073:4105   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3932:4111   */\n      jump\t// out\n        /* \"#utility.yul\":4116:5405   */\n    tag_36:\n      0x00\n      dup1\n        /* \"#utility.yul\":4295:4297   */\n      0x40\n        /* \"#utility.yul\":4283:4292   */\n      dup4\n        /* \"#utility.yul\":4274:4281   */\n      dup6\n        /* \"#utility.yul\":4270:4293   */\n      sub\n        /* \"#utility.yul\":4266:4298   */\n      slt\n        /* \"#utility.yul\":4263:4265   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":4316:4322   */\n      dup2\n        /* \"#utility.yul\":4308:4314   */\n      dup3\n        /* \"#utility.yul\":4301:4323   */\n      revert\n        /* \"#utility.yul\":4263:4265   */\n    tag_260:\n        /* \"#utility.yul\":4361:4370   */\n      dup3\n        /* \"#utility.yul\":4348:4371   */\n      calldataload\n        /* \"#utility.yul\":4390:4408   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4431:4433   */\n      dup1\n        /* \"#utility.yul\":4423:4429   */\n      dup3\n        /* \"#utility.yul\":4420:4434   */\n      gt\n        /* \"#utility.yul\":4417:4419   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4452:4458   */\n      dup4\n        /* \"#utility.yul\":4444:4450   */\n      dup5\n        /* \"#utility.yul\":4437:4459   */\n      revert\n        /* \"#utility.yul\":4417:4419   */\n    tag_261:\n        /* \"#utility.yul\":4495:4501   */\n      dup2\n        /* \"#utility.yul\":4484:4493   */\n      dup6\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4470:4502   */\n      swap2\n      pop\n        /* \"#utility.yul\":4540:4547   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x1f\n        /* \"#utility.yul\":4529:4531   */\n      dup4\n        /* \"#utility.yul\":4525:4538   */\n      add\n        /* \"#utility.yul\":4521:4548   */\n      slt\n        /* \"#utility.yul\":4511:4513   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4567:4573   */\n      dup4\n        /* \"#utility.yul\":4559:4565   */\n      dup5\n        /* \"#utility.yul\":4552:4574   */\n      revert\n        /* \"#utility.yul\":4511:4513   */\n    tag_262:\n        /* \"#utility.yul\":4608:4610   */\n      dup2\n        /* \"#utility.yul\":4595:4611   */\n      calldataload\n        /* \"#utility.yul\":4630:4634   */\n      0x20\n        /* \"#utility.yul\":4653:4702   */\n      tag_263\n        /* \"#utility.yul\":4699:4701   */\n      dup3\n        /* \"#utility.yul\":4653:4702   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4731:4733   */\n      0x40\n        /* \"#utility.yul\":4725:4734   */\n      mload\n        /* \"#utility.yul\":4743:4774   */\n      tag_264\n        /* \"#utility.yul\":4771:4773   */\n      dup3\n        /* \"#utility.yul\":4763:4769   */\n      dup3\n        /* \"#utility.yul\":4743:4774   */\n      tag_219\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4809:4827   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4843:4858   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4878:4889   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4916:4927   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":4908:4928   */\n      dup8\n      add\n        /* \"#utility.yul\":4904:4933   */\n      dup5\n      add\n        /* \"#utility.yul\":4901:4943   */\n      dup12\n      lt\n        /* \"#utility.yul\":4898:4900   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4961:4967   */\n      dup9\n        /* \"#utility.yul\":4953:4959   */\n      dup10\n        /* \"#utility.yul\":4946:4968   */\n      revert\n        /* \"#utility.yul\":4898:4900   */\n    tag_265:\n        /* \"#utility.yul\":4988:4994   */\n      dup9\n        /* \"#utility.yul\":4979:4994   */\n      swap7\n      pop\n        /* \"#utility.yul\":5003:5174   */\n    tag_266:\n        /* \"#utility.yul\":5017:5019   */\n      dup5\n        /* \"#utility.yul\":5014:5015   */\n      dup8\n        /* \"#utility.yul\":5011:5020   */\n      lt\n        /* \"#utility.yul\":5003:5174   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5074:5099   */\n      tag_269\n        /* \"#utility.yul\":5095:5098   */\n      dup2\n        /* \"#utility.yul\":5074:5099   */\n      tag_210\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5062:5100   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5035:5036   */\n      0x01\n        /* \"#utility.yul\":5028:5037   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5120:5132   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5152:5164   */\n      dup4\n      add\n        /* \"#utility.yul\":5003:5174   */\n      jump(tag_266)\n    tag_268:\n      pop\n        /* \"#utility.yul\":5193:5199   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5237:5255   */\n      dup7\n      add\n        /* \"#utility.yul\":5224:5256   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5268:5284   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5265:5267   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5302:5308   */\n      dup3\n        /* \"#utility.yul\":5294:5300   */\n      dup4\n        /* \"#utility.yul\":5287:5309   */\n      revert\n        /* \"#utility.yul\":5265:5267   */\n    tag_270:\n      pop\n        /* \"#utility.yul\":5330:5399   */\n      tag_271\n        /* \"#utility.yul\":5391:5398   */\n      dup6\n        /* \"#utility.yul\":5380:5388   */\n      dup3\n        /* \"#utility.yul\":5369:5378   */\n      dup7\n        /* \"#utility.yul\":5365:5389   */\n      add\n        /* \"#utility.yul\":5330:5399   */\n      tag_213\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5320:5399   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4253:5405   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5410:5667   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":5521:5523   */\n      0x20\n        /* \"#utility.yul\":5509:5518   */\n      dup3\n        /* \"#utility.yul\":5500:5507   */\n      dup5\n        /* \"#utility.yul\":5496:5519   */\n      sub\n        /* \"#utility.yul\":5492:5524   */\n      slt\n        /* \"#utility.yul\":5489:5491   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5542:5548   */\n      dup1\n        /* \"#utility.yul\":5534:5540   */\n      dup2\n        /* \"#utility.yul\":5527:5549   */\n      revert\n        /* \"#utility.yul\":5489:5491   */\n    tag_273:\n        /* \"#utility.yul\":5586:5595   */\n      dup2\n        /* \"#utility.yul\":5573:5596   */\n      calldataload\n        /* \"#utility.yul\":5605:5637   */\n      tag_274\n        /* \"#utility.yul\":5631:5636   */\n      dup2\n        /* \"#utility.yul\":5605:5637   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5656:5661   */\n      swap4\n        /* \"#utility.yul\":5479:5667   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5672:5933   */\n    tag_167:\n      0x00\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"#utility.yul\":5782:5791   */\n      dup3\n        /* \"#utility.yul\":5773:5780   */\n      dup5\n        /* \"#utility.yul\":5769:5792   */\n      sub\n        /* \"#utility.yul\":5765:5797   */\n      slt\n        /* \"#utility.yul\":5762:5764   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5815:5821   */\n      dup1\n        /* \"#utility.yul\":5807:5813   */\n      dup2\n        /* \"#utility.yul\":5800:5822   */\n      revert\n        /* \"#utility.yul\":5762:5764   */\n    tag_277:\n        /* \"#utility.yul\":5852:5861   */\n      dup2\n        /* \"#utility.yul\":5846:5862   */\n      mload\n        /* \"#utility.yul\":5871:5903   */\n      tag_274\n        /* \"#utility.yul\":5897:5902   */\n      dup2\n        /* \"#utility.yul\":5871:5903   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":5938:6128   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":6050:6052   */\n      0x20\n        /* \"#utility.yul\":6038:6047   */\n      dup3\n        /* \"#utility.yul\":6029:6036   */\n      dup5\n        /* \"#utility.yul\":6025:6048   */\n      sub\n        /* \"#utility.yul\":6021:6053   */\n      slt\n        /* \"#utility.yul\":6018:6020   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6071:6077   */\n      dup1\n        /* \"#utility.yul\":6063:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6078   */\n      revert\n        /* \"#utility.yul\":6018:6020   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":6099:6122   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6008:6128   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6133:6576   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":6230:6235   */\n      dup2\n        /* \"#utility.yul\":6224:6236   */\n      mload\n        /* \"#utility.yul\":6257:6263   */\n      dup1\n        /* \"#utility.yul\":6252:6255   */\n      dup5\n        /* \"#utility.yul\":6245:6264   */\n      mstore\n        /* \"#utility.yul\":6283:6287   */\n      0x20\n        /* \"#utility.yul\":6312:6314   */\n      dup1\n        /* \"#utility.yul\":6307:6310   */\n      dup6\n        /* \"#utility.yul\":6303:6315   */\n      add\n        /* \"#utility.yul\":6296:6315   */\n      swap5\n      pop\n        /* \"#utility.yul\":6349:6351   */\n      dup1\n        /* \"#utility.yul\":6342:6347   */\n      dup5\n        /* \"#utility.yul\":6338:6352   */\n      add\n        /* \"#utility.yul\":6370:6373   */\n      dup4\n        /* \"#utility.yul\":6382:6551   */\n    tag_283:\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6393:6394   */\n      dup2\n        /* \"#utility.yul\":6390:6403   */\n      lt\n        /* \"#utility.yul\":6382:6551   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":6457:6470   */\n      dup2\n      mload\n        /* \"#utility.yul\":6445:6471   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6491:6503   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6526:6541   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6418:6419   */\n      0x01\n        /* \"#utility.yul\":6411:6420   */\n      add\n        /* \"#utility.yul\":6382:6551   */\n      jump(tag_283)\n    tag_285:\n      pop\n        /* \"#utility.yul\":6567:6570   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6200:6576   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6581:7058   */\n    tag_286:\n      0x00\n        /* \"#utility.yul\":6662:6667   */\n      dup2\n        /* \"#utility.yul\":6656:6668   */\n      mload\n        /* \"#utility.yul\":6689:6695   */\n      dup1\n        /* \"#utility.yul\":6684:6687   */\n      dup5\n        /* \"#utility.yul\":6677:6696   */\n      mstore\n        /* \"#utility.yul\":6714:6717   */\n      dup2\n        /* \"#utility.yul\":6726:6888   */\n    tag_288:\n        /* \"#utility.yul\":6740:6746   */\n      dup2\n        /* \"#utility.yul\":6737:6738   */\n      dup2\n        /* \"#utility.yul\":6734:6747   */\n      lt\n        /* \"#utility.yul\":6726:6888   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6802:6806   */\n      0x20\n        /* \"#utility.yul\":6858:6871   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6854:6876   */\n      dup2\n      add\n        /* \"#utility.yul\":6848:6877   */\n      mload\n        /* \"#utility.yul\":6830:6841   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6826:6846   */\n      dup3\n      add\n        /* \"#utility.yul\":6819:6878   */\n      mstore\n        /* \"#utility.yul\":6755:6767   */\n      add\n        /* \"#utility.yul\":6726:6888   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":6906:6912   */\n      dup2\n        /* \"#utility.yul\":6903:6904   */\n      dup2\n        /* \"#utility.yul\":6900:6913   */\n      gt\n        /* \"#utility.yul\":6897:6899   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6972:6975   */\n      dup3\n        /* \"#utility.yul\":6965:6969   */\n      0x20\n        /* \"#utility.yul\":6956:6962   */\n      dup4\n        /* \"#utility.yul\":6951:6954   */\n      dup8\n        /* \"#utility.yul\":6947:6963   */\n      add\n        /* \"#utility.yul\":6943:6970   */\n      add\n        /* \"#utility.yul\":6936:6976   */\n      mstore\n        /* \"#utility.yul\":6897:6899   */\n    tag_291:\n      pop\n        /* \"#utility.yul\":7040:7042   */\n      0x1f\n        /* \"#utility.yul\":7019:7034   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7015:7044   */\n      and\n        /* \"#utility.yul\":7006:7045   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7047:7051   */\n      0x20\n        /* \"#utility.yul\":7002:7052   */\n      add\n      swap3\n        /* \"#utility.yul\":6632:7058   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7063:7903   */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7460:7475   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7442:7476   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7512:7527   */\n      dup6\n      and\n        /* \"#utility.yul\":7507:7509   */\n      0x20\n        /* \"#utility.yul\":7492:7510   */\n      dup3\n      add\n        /* \"#utility.yul\":7485:7528   */\n      mstore\n        /* \"#utility.yul\":7422:7425   */\n      0xa0\n        /* \"#utility.yul\":7559:7561   */\n      0x40\n        /* \"#utility.yul\":7544:7562   */\n      dup3\n      add\n        /* \"#utility.yul\":7537:7568   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7063:7903   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7591:7654   */\n      tag_293\n      swap1\n        /* \"#utility.yul\":7634:7653   */\n      dup4\n      add\n        /* \"#utility.yul\":7626:7632   */\n      dup7\n        /* \"#utility.yul\":7591:7654   */\n      tag_281\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7702:7711   */\n      dup3\n        /* \"#utility.yul\":7694:7700   */\n      dup2\n        /* \"#utility.yul\":7690:7712   */\n      sub\n        /* \"#utility.yul\":7685:7687   */\n      0x60\n        /* \"#utility.yul\":7674:7683   */\n      dup5\n        /* \"#utility.yul\":7670:7688   */\n      add\n        /* \"#utility.yul\":7663:7713   */\n      mstore\n        /* \"#utility.yul\":7736:7786   */\n      tag_294\n        /* \"#utility.yul\":7779:7785   */\n      dup2\n        /* \"#utility.yul\":7771:7777   */\n      dup7\n        /* \"#utility.yul\":7736:7786   */\n      tag_281\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7722:7786   */\n      swap1\n      pop\n        /* \"#utility.yul\":7835:7844   */\n      dup3\n        /* \"#utility.yul\":7827:7833   */\n      dup2\n        /* \"#utility.yul\":7823:7845   */\n      sub\n        /* \"#utility.yul\":7817:7820   */\n      0x80\n        /* \"#utility.yul\":7806:7815   */\n      dup5\n        /* \"#utility.yul\":7802:7821   */\n      add\n        /* \"#utility.yul\":7795:7846   */\n      mstore\n        /* \"#utility.yul\":7863:7897   */\n      tag_295\n        /* \"#utility.yul\":7890:7896   */\n      dup2\n        /* \"#utility.yul\":7882:7888   */\n      dup6\n        /* \"#utility.yul\":7863:7897   */\n      tag_286\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7855:7897   */\n      swap9\n        /* \"#utility.yul\":7394:7903   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8470   */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8205:8220   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8187:8221   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8257:8272   */\n      dup6\n      and\n        /* \"#utility.yul\":8252:8254   */\n      0x20\n        /* \"#utility.yul\":8237:8255   */\n      dup3\n      add\n        /* \"#utility.yul\":8230:8273   */\n      mstore\n        /* \"#utility.yul\":8304:8306   */\n      0x40\n        /* \"#utility.yul\":8289:8307   */\n      dup2\n      add\n        /* \"#utility.yul\":8282:8316   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8347:8349   */\n      0x60\n        /* \"#utility.yul\":8332:8350   */\n      dup2\n      add\n        /* \"#utility.yul\":8325:8359   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8167:8170   */\n      0xa0\n        /* \"#utility.yul\":8390:8393   */\n      0x80\n        /* \"#utility.yul\":8375:8394   */\n      dup3\n      add\n        /* \"#utility.yul\":8368:8400   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7908:8470   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8417:8464   */\n      tag_297\n      swap1\n        /* \"#utility.yul\":8444:8463   */\n      dup4\n      add\n        /* \"#utility.yul\":8436:8442   */\n      dup5\n        /* \"#utility.yul\":8417:8464   */\n      tag_286\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8409:8464   */\n      swap8\n        /* \"#utility.yul\":8139:8470   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8475:8742   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":8654:8656   */\n      0x20\n        /* \"#utility.yul\":8643:8652   */\n      dup3\n        /* \"#utility.yul\":8636:8657   */\n      mstore\n        /* \"#utility.yul\":8674:8736   */\n      tag_274\n        /* \"#utility.yul\":8732:8734   */\n      0x20\n        /* \"#utility.yul\":8721:8730   */\n      dup4\n        /* \"#utility.yul\":8717:8735   */\n      add\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8674:8736   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":8747:9224   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":9004:9006   */\n      0x40\n        /* \"#utility.yul\":8993:9002   */\n      dup3\n        /* \"#utility.yul\":8986:9007   */\n      mstore\n        /* \"#utility.yul\":9030:9092   */\n      tag_301\n        /* \"#utility.yul\":9088:9090   */\n      0x40\n        /* \"#utility.yul\":9077:9086   */\n      dup4\n        /* \"#utility.yul\":9073:9091   */\n      add\n        /* \"#utility.yul\":9065:9071   */\n      dup6\n        /* \"#utility.yul\":9030:9092   */\n      tag_281\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9140:9149   */\n      dup3\n        /* \"#utility.yul\":9132:9138   */\n      dup2\n        /* \"#utility.yul\":9128:9150   */\n      sub\n        /* \"#utility.yul\":9123:9125   */\n      0x20\n        /* \"#utility.yul\":9112:9121   */\n      dup5\n        /* \"#utility.yul\":9108:9126   */\n      add\n        /* \"#utility.yul\":9101:9151   */\n      mstore\n        /* \"#utility.yul\":9168:9218   */\n      tag_302\n        /* \"#utility.yul\":9211:9217   */\n      dup2\n        /* \"#utility.yul\":9203:9209   */\n      dup6\n        /* \"#utility.yul\":9168:9218   */\n      tag_281\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9160:9218   */\n      swap6\n        /* \"#utility.yul\":8976:9224   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9229:9416   */\n    tag_23:\n        /* \"#utility.yul\":9394:9408   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9387:9409   */\n      iszero\n        /* \"#utility.yul\":9369:9410   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9357:9359   */\n      0x20\n        /* \"#utility.yul\":9342:9360   */\n      add\n      swap1\n        /* \"#utility.yul\":9324:9416   */\n      jump\t// out\n        /* \"#utility.yul\":9421:9642   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":9570:9572   */\n      0x20\n        /* \"#utility.yul\":9559:9568   */\n      dup3\n        /* \"#utility.yul\":9552:9573   */\n      mstore\n        /* \"#utility.yul\":9590:9636   */\n      tag_274\n        /* \"#utility.yul\":9632:9634   */\n      0x20\n        /* \"#utility.yul\":9621:9630   */\n      dup4\n        /* \"#utility.yul\":9617:9635   */\n      add\n        /* \"#utility.yul\":9609:9615   */\n      dup5\n        /* \"#utility.yul\":9590:9636   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":9647:10063   */\n    tag_179:\n        /* \"#utility.yul\":9849:9851   */\n      0x20\n        /* \"#utility.yul\":9831:9852   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9888:9890   */\n      0x34\n        /* \"#utility.yul\":9868:9886   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9861:9891   */\n      mstore\n        /* \"#utility.yul\":9927:9961   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9922:9924   */\n      0x40\n        /* \"#utility.yul\":9907:9925   */\n      dup3\n      add\n        /* \"#utility.yul\":9900:9962   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9993:9995   */\n      0x60\n        /* \"#utility.yul\":9978:9996   */\n      dup3\n      add\n        /* \"#utility.yul\":9971:10021   */\n      mstore\n        /* \"#utility.yul\":10053:10056   */\n      0x80\n        /* \"#utility.yul\":10038:10057   */\n      add\n      swap1\n        /* \"#utility.yul\":9821:10063   */\n      jump\t// out\n        /* \"#utility.yul\":10068:10472   */\n    tag_183:\n        /* \"#utility.yul\":10270:10272   */\n      0x20\n        /* \"#utility.yul\":10252:10273   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10309:10311   */\n      0x28\n        /* \"#utility.yul\":10289:10307   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10282:10312   */\n      mstore\n        /* \"#utility.yul\":10348:10382   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10343:10345   */\n      0x40\n        /* \"#utility.yul\":10328:10346   */\n      dup3\n      add\n        /* \"#utility.yul\":10321:10383   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10414:10416   */\n      0x60\n        /* \"#utility.yul\":10399:10417   */\n      dup3\n      add\n        /* \"#utility.yul\":10392:10430   */\n      mstore\n        /* \"#utility.yul\":10462:10465   */\n      0x80\n        /* \"#utility.yul\":10447:10466   */\n      add\n      swap1\n        /* \"#utility.yul\":10242:10472   */\n      jump\t// out\n        /* \"#utility.yul\":10477:10884   */\n    tag_56:\n        /* \"#utility.yul\":10679:10681   */\n      0x20\n        /* \"#utility.yul\":10661:10682   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10718:10720   */\n      0x2b\n        /* \"#utility.yul\":10698:10716   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10691:10721   */\n      mstore\n        /* \"#utility.yul\":10757:10791   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10752:10754   */\n      0x40\n        /* \"#utility.yul\":10737:10755   */\n      dup3\n      add\n        /* \"#utility.yul\":10730:10792   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10823:10825   */\n      0x60\n        /* \"#utility.yul\":10808:10826   */\n      dup3\n      add\n        /* \"#utility.yul\":10801:10842   */\n      mstore\n        /* \"#utility.yul\":10874:10877   */\n      0x80\n        /* \"#utility.yul\":10859:10878   */\n      add\n      swap1\n        /* \"#utility.yul\":10651:10884   */\n      jump\t// out\n        /* \"#utility.yul\":10889:11294   */\n    tag_107:\n        /* \"#utility.yul\":11091:11093   */\n      0x20\n        /* \"#utility.yul\":11073:11094   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11130:11132   */\n      0x29\n        /* \"#utility.yul\":11110:11128   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11103:11133   */\n      mstore\n        /* \"#utility.yul\":11169:11203   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11164:11166   */\n      0x40\n        /* \"#utility.yul\":11149:11167   */\n      dup3\n      add\n        /* \"#utility.yul\":11142:11204   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11235:11237   */\n      0x60\n        /* \"#utility.yul\":11220:11238   */\n      dup3\n      add\n        /* \"#utility.yul\":11213:11252   */\n      mstore\n        /* \"#utility.yul\":11284:11287   */\n      0x80\n        /* \"#utility.yul\":11269:11288   */\n      add\n      swap1\n        /* \"#utility.yul\":11063:11294   */\n      jump\t// out\n        /* \"#utility.yul\":11299:11700   */\n    tag_118:\n        /* \"#utility.yul\":11501:11503   */\n      0x20\n        /* \"#utility.yul\":11483:11504   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11540:11542   */\n      0x25\n        /* \"#utility.yul\":11520:11538   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11513:11543   */\n      mstore\n        /* \"#utility.yul\":11579:11613   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11574:11576   */\n      0x40\n        /* \"#utility.yul\":11559:11577   */\n      dup3\n      add\n        /* \"#utility.yul\":11552:11614   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11645:11647   */\n      0x60\n        /* \"#utility.yul\":11630:11648   */\n      dup3\n      add\n        /* \"#utility.yul\":11623:11658   */\n      mstore\n        /* \"#utility.yul\":11690:11693   */\n      0x80\n        /* \"#utility.yul\":11675:11694   */\n      add\n      swap1\n        /* \"#utility.yul\":11473:11700   */\n      jump\t// out\n        /* \"#utility.yul\":11705:12119   */\n    tag_77:\n        /* \"#utility.yul\":11907:11909   */\n      0x20\n        /* \"#utility.yul\":11889:11910   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11946:11948   */\n      0x32\n        /* \"#utility.yul\":11926:11944   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11919:11949   */\n      mstore\n        /* \"#utility.yul\":11985:12019   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11980:11982   */\n      0x40\n        /* \"#utility.yul\":11965:11983   */\n      dup3\n      add\n        /* \"#utility.yul\":11958:12020   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12051:12053   */\n      0x60\n        /* \"#utility.yul\":12036:12054   */\n      dup3\n      add\n        /* \"#utility.yul\":12029:12077   */\n      mstore\n        /* \"#utility.yul\":12109:12112   */\n      0x80\n        /* \"#utility.yul\":12094:12113   */\n      add\n      swap1\n        /* \"#utility.yul\":11879:12119   */\n      jump\t// out\n        /* \"#utility.yul\":12124:12530   */\n    tag_129:\n        /* \"#utility.yul\":12326:12328   */\n      0x20\n        /* \"#utility.yul\":12308:12329   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12365:12367   */\n      0x2a\n        /* \"#utility.yul\":12345:12363   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12338:12368   */\n      mstore\n        /* \"#utility.yul\":12404:12438   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12399:12401   */\n      0x40\n        /* \"#utility.yul\":12384:12402   */\n      dup3\n      add\n        /* \"#utility.yul\":12377:12439   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12470:12472   */\n      0x60\n        /* \"#utility.yul\":12455:12473   */\n      dup3\n      add\n        /* \"#utility.yul\":12448:12488   */\n      mstore\n        /* \"#utility.yul\":12520:12523   */\n      0x80\n        /* \"#utility.yul\":12505:12524   */\n      add\n      swap1\n        /* \"#utility.yul\":12298:12530   */\n      jump\t// out\n        /* \"#utility.yul\":12535:12940   */\n    tag_140:\n        /* \"#utility.yul\":12737:12739   */\n      0x20\n        /* \"#utility.yul\":12719:12740   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12776:12778   */\n      0x29\n        /* \"#utility.yul\":12756:12774   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12749:12779   */\n      mstore\n        /* \"#utility.yul\":12815:12849   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12810:12812   */\n      0x40\n        /* \"#utility.yul\":12795:12813   */\n      dup3\n      add\n        /* \"#utility.yul\":12788:12850   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12881:12883   */\n      0x60\n        /* \"#utility.yul\":12866:12884   */\n      dup3\n      add\n        /* \"#utility.yul\":12859:12898   */\n      mstore\n        /* \"#utility.yul\":12930:12933   */\n      0x80\n        /* \"#utility.yul\":12915:12934   */\n      add\n      swap1\n        /* \"#utility.yul\":12709:12940   */\n      jump\t// out\n        /* \"#utility.yul\":12945:13350   */\n    tag_83:\n        /* \"#utility.yul\":13147:13149   */\n      0x20\n        /* \"#utility.yul\":13129:13150   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13186:13188   */\n      0x29\n        /* \"#utility.yul\":13166:13184   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13159:13189   */\n      mstore\n        /* \"#utility.yul\":13225:13259   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13220:13222   */\n      0x40\n        /* \"#utility.yul\":13205:13223   */\n      dup3\n      add\n        /* \"#utility.yul\":13198:13260   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13291:13293   */\n      0x60\n        /* \"#utility.yul\":13276:13294   */\n      dup3\n      add\n        /* \"#utility.yul\":13269:13308   */\n      mstore\n        /* \"#utility.yul\":13340:13343   */\n      0x80\n        /* \"#utility.yul\":13325:13344   */\n      add\n      swap1\n        /* \"#utility.yul\":13119:13350   */\n      jump\t// out\n        /* \"#utility.yul\":13355:13759   */\n    tag_115:\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"#utility.yul\":13539:13560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13596:13598   */\n      0x28\n        /* \"#utility.yul\":13576:13594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13569:13599   */\n      mstore\n        /* \"#utility.yul\":13635:13669   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13630:13632   */\n      0x40\n        /* \"#utility.yul\":13615:13633   */\n      dup3\n      add\n        /* \"#utility.yul\":13608:13670   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13701:13703   */\n      0x60\n        /* \"#utility.yul\":13686:13704   */\n      dup3\n      add\n        /* \"#utility.yul\":13679:13717   */\n      mstore\n        /* \"#utility.yul\":13749:13752   */\n      0x80\n        /* \"#utility.yul\":13734:13753   */\n      add\n      swap1\n        /* \"#utility.yul\":13529:13759   */\n      jump\t// out\n        /* \"#utility.yul\":13764:13941   */\n    tag_17:\n        /* \"#utility.yul\":13910:13935   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13898:13900   */\n      0x20\n        /* \"#utility.yul\":13883:13901   */\n      add\n      swap1\n        /* \"#utility.yul\":13865:13941   */\n      jump\t// out\n        /* \"#utility.yul\":13946:14194   */\n    tag_154:\n        /* \"#utility.yul\":14120:14145   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14176:14178   */\n      0x20\n        /* \"#utility.yul\":14161:14179   */\n      dup3\n      add\n        /* \"#utility.yul\":14154:14188   */\n      mstore\n        /* \"#utility.yul\":14108:14110   */\n      0x40\n        /* \"#utility.yul\":14093:14111   */\n      add\n      swap1\n        /* \"#utility.yul\":14075:14194   */\n      jump\t// out\n        /* \"#utility.yul\":14199:14391   */\n    tag_217:\n      0x00\n        /* \"#utility.yul\":14298:14316   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14290:14296   */\n      dup3\n        /* \"#utility.yul\":14287:14317   */\n      gt\n        /* \"#utility.yul\":14284:14286   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":14320:14338   */\n      tag_320\n      tag_229\n      jump\t// in\n    tag_320:\n      pop\n        /* \"#utility.yul\":14380:14384   */\n      0x20\n        /* \"#utility.yul\":14361:14378   */\n      swap1\n      dup2\n      mul\n        /* \"#utility.yul\":14357:14385   */\n      add\n      swap1\n        /* \"#utility.yul\":14274:14391   */\n      jump\t// out\n        /* \"#utility.yul\":14396:14524   */\n    tag_131:\n      0x00\n        /* \"#utility.yul\":14467:14468   */\n      dup3\n        /* \"#utility.yul\":14463:14469   */\n      not\n        /* \"#utility.yul\":14460:14461   */\n      dup3\n        /* \"#utility.yul\":14457:14470   */\n      gt\n        /* \"#utility.yul\":14454:14456   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":14473:14491   */\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n      pop\n        /* \"#utility.yul\":14509:14518   */\n      add\n      swap1\n        /* \"#utility.yul\":14444:14524   */\n      jump\t// out\n        /* \"#utility.yul\":14529:14909   */\n    tag_64:\n        /* \"#utility.yul\":14614:14615   */\n      0x02\n        /* \"#utility.yul\":14604:14616   */\n      dup2\n      div\n        /* \"#utility.yul\":14661:14662   */\n      0x01\n        /* \"#utility.yul\":14651:14663   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14672:14674   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":14726:14730   */\n      0x7f\n        /* \"#utility.yul\":14718:14724   */\n      dup3\n        /* \"#utility.yul\":14714:14731   */\n      and\n        /* \"#utility.yul\":14704:14731   */\n      swap2\n      pop\n        /* \"#utility.yul\":14672:14674   */\n    tag_326:\n        /* \"#utility.yul\":14779:14781   */\n      0x20\n        /* \"#utility.yul\":14771:14777   */\n      dup3\n        /* \"#utility.yul\":14768:14782   */\n      lt\n        /* \"#utility.yul\":14748:14766   */\n      dup2\n        /* \"#utility.yul\":14745:14783   */\n      eq\n        /* \"#utility.yul\":14742:14744   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":14825:14835   */\n      0x4e487b71\n        /* \"#utility.yul\":14820:14823   */\n      0xe0\n        /* \"#utility.yul\":14816:14836   */\n      shl\n        /* \"#utility.yul\":14813:14814   */\n      0x00\n        /* \"#utility.yul\":14806:14837   */\n      mstore\n        /* \"#utility.yul\":14860:14864   */\n      0x22\n        /* \"#utility.yul\":14857:14858   */\n      0x04\n        /* \"#utility.yul\":14850:14865   */\n      mstore\n        /* \"#utility.yul\":14888:14892   */\n      0x24\n        /* \"#utility.yul\":14885:14886   */\n      0x00\n        /* \"#utility.yul\":14878:14893   */\n      revert\n        /* \"#utility.yul\":14742:14744   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":14584:14909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14914:15163   */\n    tag_219:\n        /* \"#utility.yul\":15024:15026   */\n      0x1f\n        /* \"#utility.yul\":15005:15018   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15001:15028   */\n      and\n        /* \"#utility.yul\":14989:15029   */\n      dup2\n      add\n        /* \"#utility.yul\":15059:15077   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15044:15078   */\n      dup2\n      gt\n        /* \"#utility.yul\":15080:15102   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":15041:15103   */\n      or\n        /* \"#utility.yul\":15038:15040   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":15106:15124   */\n      tag_330\n      tag_229\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":15142:15144   */\n      0x40\n        /* \"#utility.yul\":15135:15157   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14961:15163   */\n      jump\t// out\n        /* \"#utility.yul\":15168:15303   */\n    tag_94:\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15228:15245   */\n      dup3\n      eq\n        /* \"#utility.yul\":15225:15227   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":15248:15266   */\n      tag_333\n      tag_324\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":15295:15296   */\n      0x01\n        /* \"#utility.yul\":15284:15297   */\n      add\n      swap1\n        /* \"#utility.yul\":15215:15303   */\n      jump\t// out\n        /* \"#utility.yul\":15308:15435   */\n    tag_324:\n        /* \"#utility.yul\":15369:15379   */\n      0x4e487b71\n        /* \"#utility.yul\":15364:15367   */\n      0xe0\n        /* \"#utility.yul\":15360:15380   */\n      shl\n        /* \"#utility.yul\":15357:15358   */\n      0x00\n        /* \"#utility.yul\":15350:15381   */\n      mstore\n        /* \"#utility.yul\":15400:15404   */\n      0x11\n        /* \"#utility.yul\":15397:15398   */\n      0x04\n        /* \"#utility.yul\":15390:15405   */\n      mstore\n        /* \"#utility.yul\":15424:15428   */\n      0x24\n        /* \"#utility.yul\":15421:15422   */\n      0x00\n        /* \"#utility.yul\":15414:15429   */\n      revert\n        /* \"#utility.yul\":15440:15567   */\n    tag_229:\n        /* \"#utility.yul\":15501:15511   */\n      0x4e487b71\n        /* \"#utility.yul\":15496:15499   */\n      0xe0\n        /* \"#utility.yul\":15492:15512   */\n      shl\n        /* \"#utility.yul\":15489:15490   */\n      0x00\n        /* \"#utility.yul\":15482:15513   */\n      mstore\n        /* \"#utility.yul\":15532:15536   */\n      0x41\n        /* \"#utility.yul\":15529:15530   */\n      0x04\n        /* \"#utility.yul\":15522:15537   */\n      mstore\n        /* \"#utility.yul\":15556:15560   */\n      0x24\n        /* \"#utility.yul\":15553:15554   */\n      0x00\n        /* \"#utility.yul\":15546:15561   */\n      revert\n        /* \"#utility.yul\":15572:15757   */\n    tag_173:\n      0x00\n        /* \"#utility.yul\":15649:15650   */\n      0x03\n        /* \"#utility.yul\":15631:15647   */\n      returndatasize\n        /* \"#utility.yul\":15628:15651   */\n      gt\n        /* \"#utility.yul\":15625:15627   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":15699:15700   */\n      0x04\n        /* \"#utility.yul\":15694:15697   */\n      dup2\n        /* \"#utility.yul\":15689:15692   */\n      dup3\n        /* \"#utility.yul\":15674:15701   */\n      returndatacopy\n        /* \"#utility.yul\":15730:15740   */\n      mload\n        /* \"#utility.yul\":15725:15728   */\n      0xe0\n        /* \"#utility.yul\":15721:15741   */\n      shr\n        /* \"#utility.yul\":15615:15757   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15762:16433   */\n    tag_175:\n      0x00\n        /* \"#utility.yul\":15843:15847   */\n      0x44\n        /* \"#utility.yul\":15825:15841   */\n      returndatasize\n        /* \"#utility.yul\":15822:15848   */\n      lt\n        /* \"#utility.yul\":15819:15821   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":15851:15856   */\n      jump(tag_111)\n        /* \"#utility.yul\":15819:15821   */\n    tag_339:\n        /* \"#utility.yul\":15885:15887   */\n      0x40\n        /* \"#utility.yul\":15879:15888   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15950:15966   */\n      returndatasize\n        /* \"#utility.yul\":15946:15971   */\n      dup2\n      add\n        /* \"#utility.yul\":15943:15944   */\n      0x04\n        /* \"#utility.yul\":15879:15888   */\n      dup4\n        /* \"#utility.yul\":15922:15972   */\n      returndatacopy\n        /* \"#utility.yul\":16001:16005   */\n      dup2\n        /* \"#utility.yul\":15995:16006   */\n      mload\n        /* \"#utility.yul\":16025:16041   */\n      returndatasize\n        /* \"#utility.yul\":16060:16078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16131:16133   */\n      dup2\n        /* \"#utility.yul\":16124:16128   */\n      0x24\n        /* \"#utility.yul\":16116:16122   */\n      dup5\n        /* \"#utility.yul\":16112:16129   */\n      add\n        /* \"#utility.yul\":16109:16134   */\n      gt\n        /* \"#utility.yul\":16104:16106   */\n      dup2\n        /* \"#utility.yul\":16096:16102   */\n      dup5\n        /* \"#utility.yul\":16093:16107   */\n      gt\n        /* \"#utility.yul\":16090:16135   */\n      or\n        /* \"#utility.yul\":16087:16089   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":16138:16143   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_111)\n        /* \"#utility.yul\":16087:16089   */\n    tag_340:\n        /* \"#utility.yul\":16175:16181   */\n      dup3\n        /* \"#utility.yul\":16169:16173   */\n      dup6\n        /* \"#utility.yul\":16165:16182   */\n      add\n        /* \"#utility.yul\":16154:16182   */\n      swap2\n      pop\n        /* \"#utility.yul\":16211:16214   */\n      dup2\n        /* \"#utility.yul\":16205:16215   */\n      mload\n        /* \"#utility.yul\":16238:16240   */\n      dup2\n        /* \"#utility.yul\":16230:16236   */\n      dup2\n        /* \"#utility.yul\":16227:16241   */\n      gt\n        /* \"#utility.yul\":16224:16226   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":16244:16249   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_111)\n        /* \"#utility.yul\":16224:16226   */\n    tag_341:\n        /* \"#utility.yul\":16328:16330   */\n      dup5\n        /* \"#utility.yul\":16309:16325   */\n      returndatasize\n        /* \"#utility.yul\":16303:16307   */\n      dup8\n        /* \"#utility.yul\":16299:16326   */\n      add\n        /* \"#utility.yul\":16295:16331   */\n      add\n        /* \"#utility.yul\":16288:16292   */\n      0x20\n        /* \"#utility.yul\":16279:16285   */\n      dup3\n        /* \"#utility.yul\":16274:16277   */\n      dup6\n        /* \"#utility.yul\":16270:16286   */\n      add\n        /* \"#utility.yul\":16266:16293   */\n      add\n        /* \"#utility.yul\":16263:16332   */\n      gt\n        /* \"#utility.yul\":16260:16262   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":16335:16340   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_111)\n        /* \"#utility.yul\":16260:16262   */\n    tag_342:\n        /* \"#utility.yul\":16351:16408   */\n      tag_343\n        /* \"#utility.yul\":16402:16406   */\n      0x20\n        /* \"#utility.yul\":16393:16399   */\n      dup3\n        /* \"#utility.yul\":16385:16391   */\n      dup7\n        /* \"#utility.yul\":16381:16400   */\n      add\n        /* \"#utility.yul\":16377:16407   */\n      add\n        /* \"#utility.yul\":16371:16375   */\n      dup8\n        /* \"#utility.yul\":16351:16408   */\n      tag_219\n      jump\t// in\n    tag_343:\n      pop\n        /* \"#utility.yul\":16424:16427   */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15809:16433   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16438:16571   */\n    tag_275:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16514:16546   */\n      dup2\n      and\n        /* \"#utility.yul\":16504:16547   */\n      dup2\n      eq\n        /* \"#utility.yul\":16494:16496   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":16561:16562   */\n      0x00\n        /* \"#utility.yul\":16558:16559   */\n      dup1\n        /* \"#utility.yul\":16551:16563   */\n      revert\n        /* \"#utility.yul\":16494:16496   */\n    tag_345:\n        /* \"#utility.yul\":16484:16571   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207fbbb96f83e61ff925ba6586515bebcd4c2a06a5117a76393076c3ae055c900d64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1670:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:1046:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "181:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "189:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:10"
															},
															"nodeType": "YulIf",
															"src": "136:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "207:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "227:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "221:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "211:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "268:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "272:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "250:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "310:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "318:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "289:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "297:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "286:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "286:14:10"
															},
															"nodeType": "YulIf",
															"src": "283:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "340:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "425:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "433:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "395:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "399:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:35:10"
															},
															"nodeType": "YulIf",
															"src": "377:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "451:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "467:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "461:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "455:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "493:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "495:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "485:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "489:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "482:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:10:10"
															},
															"nodeType": "YulIf",
															"src": "479:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "524:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "528:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "550:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "554:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "604:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "628:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "632:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "624:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "624:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "639:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "620:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "644:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "616:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "616:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "649:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "586:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "712:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "714:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "714:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "714:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "671:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "683:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "691:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "688:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "665:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:46:10"
															},
															"nodeType": "YulIf",
															"src": "662:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "754:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "838:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "847:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "855:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "840:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "840:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "815:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "819:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "811:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "811:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "824:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "829:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "804:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:33:10"
															},
															"nodeType": "YulIf",
															"src": "801:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "873:15:10",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "882:6:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "877:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "943:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "972:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "980:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "968:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "968:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "964:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "964:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1003:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1007:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "999:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "999:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1011:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "995:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "995:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "989:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "989:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "908:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "911:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "905:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "915:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "917:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "926:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "929:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "922:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "917:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "901:3:10",
																"statements": []
															},
															"src": "897:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1056:64:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1085:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1093:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1081:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1081:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1098:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:24:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1103:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:40:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1041:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1044:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:10"
															},
															"nodeType": "YulIf",
															"src": "1035:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1129:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1139:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:10",
														"type": ""
													}
												],
												"src": "14:1137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1235:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1282:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1256:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1329:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1331:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1345:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1353:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1341:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1341:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1309:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:26:10"
															},
															"nodeType": "YulIf",
															"src": "1299:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1419:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1447:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1452:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1443:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1443:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1487:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1477:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1515:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1505:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1505:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1375:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1372:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:38:10"
															},
															"nodeType": "YulIf",
															"src": "1369:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1191:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1200:6:10",
														"type": ""
													}
												],
												"src": "1156:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1597:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1654:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1541:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200173938038062001739833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600281046001821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6114fb806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461015057610087565b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d46565b610163565b6040516100ac9190611301565b60405180910390f35b6100c86100c3366004610e38565b6101ba565b6040516100ac9190610ff8565b6100e86100e3366004610e77565b610202565b6040516100ac9190611003565b610108610103366004610c03565b610296565b005b61011d610118366004610d6f565b6102f4565b6040516100ac9190610fb7565b610108610138366004610d0c565b610414565b6100c861014b366004610bd1565b61042a565b61010861015e366004610ca9565b610458565b60006001600160a01b0383166101945760405162461bcd60e51b815260040161018b906110b2565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806101eb57506001600160e01b031982166303a24d0760e21b145b806101fa57506101fa826104af565b90505b919050565b60606002805461021190611354565b80601f016020809104026020016040519081016040528092919081815260200182805461023d90611354565b801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b50505050509050919050565b61029e6104c8565b6001600160a01b0316856001600160a01b031614806102c457506102c48561014b6104c8565b6102e05760405162461bcd60e51b815260040161018b9061118b565b6102ed85858585856104cd565b5050505050565b606081518351146103175760405162461bcd60e51b815260040161018b90611270565b6000835167ffffffffffffffff81111561034157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561036a578160200160208202803683370190505b50905060005b845181101561040c576103d185828151811061039c57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106103c457634e487b7160e01b600052603260045260246000fd5b6020026020010151610163565b8282815181106103f157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610405816113bc565b9050610370565b509392505050565b61042661041f6104c8565b838361069e565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6104606104c8565b6001600160a01b0316856001600160a01b0316148061048657506104868561014b6104c8565b6104a25760405162461bcd60e51b815260040161018b906110fd565b6102ed8585858585610741565b6001600160e01b031981166301ffc9a760e01b14919050565b335b90565b81518351146104ee5760405162461bcd60e51b815260040161018b906112b9565b6001600160a01b0384166105145760405162461bcd60e51b815260040161018b90611146565b600061051e6104c8565b905061052e818787878787610696565b60005b845181101561063057600085828151811061055c57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061058857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105d85760405162461bcd60e51b815260040161018b906111dd565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061061590849061133c565b9250508190555050505080610629906113bc565b9050610531565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610680929190610fca565b60405180910390a4610696818787878787610884565b505050505050565b816001600160a01b0316836001600160a01b031614156106d05760405162461bcd60e51b815260040161018b90611227565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610734908590610ff8565b60405180910390a3505050565b6001600160a01b0384166107675760405162461bcd60e51b815260040161018b90611146565b60006107716104c8565b9050610791818787610782886109a9565b61078b886109a9565b87610696565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156107d25760405162461bcd60e51b815260040161018b906111dd565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061080f90849061133c565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62888860405161086592919061130a565b60405180910390a461087b828888888888610a02565b50505050505050565b610896846001600160a01b0316610ad3565b156106965760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108cf9089908990889088908890600401610f14565b602060405180830381600087803b1580156108e957600080fd5b505af1925050508015610919575060408051601f3d908101601f1916820190925261091691810190610e5b565b60015b61097957610925611403565b806308c379a0141561095f575061093a61141a565b806109455750610961565b8060405162461bcd60e51b815260040161018b9190611003565b505b60405162461bcd60e51b815260040161018b90611016565b6001600160e01b0319811663bc197c8160e01b1461087b5760405162461bcd60e51b815260040161018b9061106a565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106109f157634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610a14846001600160a01b0316610ad3565b156106965760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a4d9089908990889088908890600401610f72565b602060405180830381600087803b158015610a6757600080fd5b505af1925050508015610a97575060408051601f3d908101601f19168201909252610a9491810190610e5b565b60015b610aa357610925611403565b6001600160e01b0319811663f23a6e6160e01b1461087b5760405162461bcd60e51b815260040161018b9061106a565b3b151590565b80356001600160a01b03811681146101fd57600080fd5b600082601f830112610b00578081fd5b81356020610b0d82611318565b604051610b1a828261138f565b838152828101915085830183850287018401881015610b37578586fd5b855b85811015610b5557813584529284019290840190600101610b39565b5090979650505050505050565b600082601f830112610b72578081fd5b813567ffffffffffffffff811115610b8c57610b8c6113ed565b604051610ba3601f8301601f19166020018261138f565b818152846020838601011115610bb7578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610be3578182fd5b610bec83610ad9565b9150610bfa60208401610ad9565b90509250929050565b600080600080600060a08688031215610c1a578081fd5b610c2386610ad9565b9450610c3160208701610ad9565b9350604086013567ffffffffffffffff80821115610c4d578283fd5b610c5989838a01610af0565b94506060880135915080821115610c6e578283fd5b610c7a89838a01610af0565b93506080880135915080821115610c8f578283fd5b50610c9c88828901610b62565b9150509295509295909350565b600080600080600060a08688031215610cc0578081fd5b610cc986610ad9565b9450610cd760208701610ad9565b93506040860135925060608601359150608086013567ffffffffffffffff811115610d00578182fd5b610c9c88828901610b62565b60008060408385031215610d1e578182fd5b610d2783610ad9565b915060208301358015158114610d3b578182fd5b809150509250929050565b60008060408385031215610d58578182fd5b610d6183610ad9565b946020939093013593505050565b60008060408385031215610d81578182fd5b823567ffffffffffffffff80821115610d98578384fd5b818501915085601f830112610dab578384fd5b81356020610db882611318565b604051610dc5828261138f565b8381528281019150858301838502870184018b1015610de2578889fd5b8896505b84871015610e0b57610df781610ad9565b835260019690960195918301918301610de6565b5096505086013592505080821115610e21578283fd5b50610e2e85828601610af0565b9150509250929050565b600060208284031215610e49578081fd5b8135610e54816114ac565b9392505050565b600060208284031215610e6c578081fd5b8151610e54816114ac565b600060208284031215610e88578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610ebe57815187529582019590820190600101610ea2565b509495945050505050565b60008151808452815b81811015610eee57602081850181015186830182015201610ed2565b81811115610eff5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090610f4090830186610e8f565b8281036060840152610f528186610e8f565b90508281036080840152610f668185610ec9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090610fac90830184610ec9565b979650505050505050565b600060208252610e546020830184610e8f565b600060408252610fdd6040830185610e8f565b8281036020840152610fef8185610e8f565b95945050505050565b901515815260200190565b600060208252610e546020830184610ec9565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206040820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604082015268103337b91039b2b63360b91b606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604082015268040dad2e6dac2e8c6d60bb1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff821115611332576113326113ed565b5060209081020190565b6000821982111561134f5761134f6113d7565b500190565b60028104600182168061136857607f821691505b6020821081141561138957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156113b5576113b56113ed565b6040525050565b60006000198214156113d0576113d06113d7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156104ca57600481823e5160e01c90565b600060443d101561142a576104ca565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561145c5750505050506104ca565b8285019150815181811115611476575050505050506104ca565b843d8701016020828501011115611492575050505050506104ca565b6114a16020828601018761138f565b509094505050505090565b6001600160e01b0319811681146114c257600080fd5b5056fea26469706673582212207fbbb96f83e61ff925ba6586515bebcd4c2a06a5117a76393076c3ae055c900d64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1739 CODESIZE SUB DUP1 PUSH3 0x1739 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x22E JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x118 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x158 JUMPI PUSH3 0x158 PUSH3 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x183 JUMPI PUSH3 0x183 PUSH3 0x218 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1BE JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x19F JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1CF JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x212 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14FB DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x150 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1EB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1FA JUMPI POP PUSH2 0x1FA DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0x1354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2C4 JUMPI POP PUSH2 0x2C4 DUP6 PUSH2 0x14B PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x2ED DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x341 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH2 0x3D1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x405 DUP2 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP PUSH2 0x370 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x426 PUSH2 0x41F PUSH2 0x4C8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x69E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x460 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x486 JUMPI POP PUSH2 0x486 DUP6 PUSH2 0x14B PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x2ED DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x588 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x615 SWAP1 DUP5 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x629 SWAP1 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP PUSH2 0x531 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x680 SWAP3 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x696 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x884 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x734 SWAP1 DUP6 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x791 DUP2 DUP8 DUP8 PUSH2 0x782 DUP9 PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x78B DUP9 PUSH2 0x9A9 JUMP JUMPDEST DUP8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x80F SWAP1 DUP5 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x865 SWAP3 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x87B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xA02 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x896 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD3 JUMP JUMPDEST ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8CF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x919 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x916 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x979 JUMPI PUSH2 0x925 PUSH2 0x1403 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x95F JUMPI POP PUSH2 0x93A PUSH2 0x141A JUMP JUMPDEST DUP1 PUSH2 0x945 JUMPI POP PUSH2 0x961 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA14 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD3 JUMP JUMPDEST ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xA4D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA94 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAA3 JUMPI PUSH2 0x925 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x106A JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB0D DUP3 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1A DUP3 DUP3 PUSH2 0x138F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xB37 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB55 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xB39 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB72 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x138F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xBB7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xBEC DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFA PUSH1 0x20 DUP5 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC1A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC23 DUP7 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 POP PUSH2 0xC31 PUSH1 0x20 DUP8 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC4D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC59 DUP10 DUP4 DUP11 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC6E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC7A DUP10 DUP4 DUP11 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC8F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xC9C DUP9 DUP3 DUP10 ADD PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCC0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCC9 DUP7 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 POP PUSH2 0xCD7 PUSH1 0x20 DUP8 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD00 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC9C DUP9 DUP3 DUP10 ADD PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD27 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD3B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD58 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD61 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD81 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD98 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDAB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDB8 DUP3 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC5 DUP3 DUP3 PUSH2 0x138F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xDE2 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xDF7 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDE6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE21 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xE2E DUP6 DUP3 DUP7 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE49 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE54 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE54 DUP2 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE88 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEBE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEA2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xED2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEFF JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF40 SWAP1 DUP4 ADD DUP7 PUSH2 0xE8F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xF52 DUP2 DUP7 PUSH2 0xE8F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xF66 DUP2 DUP6 PUSH2 0xEC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xFAC SWAP1 DUP4 ADD DUP5 PUSH2 0xEC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xFDD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE8F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xFEF DUP2 DUP6 PUSH2 0xE8F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1332 JUMPI PUSH2 0x1332 PUSH2 0x13ED JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x134F JUMPI PUSH2 0x134F PUSH2 0x13D7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1368 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1389 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13D0 PUSH2 0x13D7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x142A JUMPI PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x145C JUMPI POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1476 JUMPI POP POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1492 JUMPI POP POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x14A1 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x138F JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xBBB96F83E61FF925BA6586515BEBCD4C2A06A5117A76393076C3AE055C900D64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "555:14720:2:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:2;;;-1:-1:-1;555:14720:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:10;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:10;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:10;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:10:o;1156:380::-;1241:1;1231:12;;1288:1;1278:12;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;555:14720:2;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16573:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:10"
															},
															"nodeType": "YulIf",
															"src": "113:2:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:10",
														"type": ""
													}
												],
												"src": "14:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:698:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "322:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "329:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "292:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "300:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "288:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "288:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "307:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:35:10"
															},
															"nodeType": "YulIf",
															"src": "274:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "369:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "356:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "350:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "385:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "395:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "389:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "408:59:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "464:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "418:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:49:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "412:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "490:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "480:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "536:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "508:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "508:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "548:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "559:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "552:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "589:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "574:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "612:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "620:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "608:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "601:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "632:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "647:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "655:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "636:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "722:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "729:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "715:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "715:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "681:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "693:2:10"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "697:2:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "689:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "689:11:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "677:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "677:24:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "703:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:33:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "670:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "670:42:10"
															},
															"nodeType": "YulIf",
															"src": "667:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "746:14:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "755:5:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "750:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "835:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "840:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "840:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "871:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "887:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "878:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "878:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "871:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "903:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "914:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "919:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "910:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "910:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "903:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "780:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "777:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "787:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "789:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "798:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "794:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "789:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "773:3:10",
																"statements": []
															},
															"src": "769:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "941:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "950:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "941:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "238:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "246:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "254:5:10",
														"type": ""
													}
												],
												"src": "194:768:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1021:523:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1070:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1079:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1086:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1072:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1072:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1072:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1049:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1057:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1045:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1045:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1064:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1041:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:35:10"
															},
															"nodeType": "YulIf",
															"src": "1031:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1103:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1126:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1107:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1172:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1174:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1148:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1145:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:26:10"
															},
															"nodeType": "YulIf",
															"src": "1142:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1203:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1217:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1207:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1255:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1275:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1279:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1271:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1271:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1290:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1286:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1286:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1235:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1326:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1311:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1377:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1386:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1393:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1379:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1379:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1379:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1352:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1360:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1348:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1348:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1344:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1372:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1341:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:35:10"
															},
															"nodeType": "YulIf",
															"src": "1338:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1435:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1442:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1461:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1410:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1496:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1484:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1484:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:26:10"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1508:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1473:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1523:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1532:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1523:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "995:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1003:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1011:5:10",
														"type": ""
													}
												],
												"src": "967:577:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:187:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1682:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1691:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1699:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1684:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1684:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1684:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1666:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1649:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:32:10"
															},
															"nodeType": "YulIf",
															"src": "1646:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1717:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1748:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1727:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1767:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1777:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1594:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1617:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:10",
														"type": ""
													}
												],
												"src": "1549:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2025:804:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2072:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2081:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2089:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2074:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2074:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2074:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2046:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2055:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2067:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2038:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:33:10"
															},
															"nodeType": "YulIf",
															"src": "2035:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2138:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2117:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2157:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2167:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2216:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2247:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2243:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2230:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2220:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2271:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2281:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2275:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2335:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2343:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2328:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2328:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2328:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2314:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2322:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2311:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:14:10"
															},
															"nodeType": "YulIf",
															"src": "2308:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:77:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2410:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2421:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2406:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2430:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2371:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:67:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2447:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2451:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2524:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2533:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2541:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2526:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2526:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2526:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2510:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2520:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2507:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:16:10"
															},
															"nodeType": "YulIf",
															"src": "2504:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2559:79:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2608:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2619:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2630:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2569:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:69:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2647:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2680:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2691:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2676:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2676:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2663:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2651:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2725:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2734:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2742:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2727:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2727:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2711:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2721:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2708:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:16:10"
															},
															"nodeType": "YulIf",
															"src": "2705:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2760:63:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2804:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2815:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2770:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:53:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1998:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2006:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2014:6:10",
														"type": ""
													}
												],
												"src": "1828:1001:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:485:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3028:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3037:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3045:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3030:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3030:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3030:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3002:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3011:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2998:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2994:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:33:10"
															},
															"nodeType": "YulIf",
															"src": "2991:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3073:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3123:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3172:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3182:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3223:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3250:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3261:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3233:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3274:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3305:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3316:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3288:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3278:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3364:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3373:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3381:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3366:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3366:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3336:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3333:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3333:30:10"
															},
															"nodeType": "YulIf",
															"src": "3330:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3432:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3443:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3452:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3409:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2915:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2926:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2938:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2946:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2954:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2962:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2970:6:10",
														"type": ""
													}
												],
												"src": "2834:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3555:285:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3601:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3610:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3618:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3603:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3603:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3576:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3585:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3572:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3572:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3597:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:32:10"
															},
															"nodeType": "YulIf",
															"src": "3565:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3636:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3667:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3646:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3686:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3727:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3699:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3690:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3784:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3793:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3801:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3786:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3786:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3753:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3774:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3767:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3767:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3760:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3760:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3750:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:40:10"
															},
															"nodeType": "YulIf",
															"src": "3740:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3819:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3829:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3819:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3513:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3524:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3536:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3544:6:10",
														"type": ""
													}
												],
												"src": "3471:369:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:179:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3978:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3987:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3995:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3980:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3980:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3980:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3953:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3962:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3949:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:32:10"
															},
															"nodeType": "YulIf",
															"src": "3942:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4013:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4023:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4023:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4063:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4073:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3890:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3901:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3913:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3921:6:10",
														"type": ""
													}
												],
												"src": "3845:266:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:1152:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4299:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4308:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4316:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4301:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4301:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4301:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4274:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4270:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:32:10"
															},
															"nodeType": "YulIf",
															"src": "4263:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4334:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4361:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4348:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4338:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4380:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4390:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4384:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4435:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4444:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4452:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4437:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4437:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4437:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4431:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4420:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:14:10"
															},
															"nodeType": "YulIf",
															"src": "4417:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4470:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4484:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4474:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4550:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4559:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4567:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4552:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4552:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4529:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4533:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4525:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4525:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4540:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:35:10"
															},
															"nodeType": "YulIf",
															"src": "4511:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4585:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4608:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4595:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4589:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4620:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4630:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4624:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4643:59:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4699:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_t_array$_t_address_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4653:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:49:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4647:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4711:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4731:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4725:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4715:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4763:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4771:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4743:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4743:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4743:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4783:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4794:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4787:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4816:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4824:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4809:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4809:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4847:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4855:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4882:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4886:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4871:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4953:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4961:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4946:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4946:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4912:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4920:2:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4924:2:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "4916:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4916:11:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4908:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4908:20:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4930:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:29:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4935:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4901:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:42:10"
															},
															"nodeType": "YulIf",
															"src": "4898:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4979:15:10",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "4988:6:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4983:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5048:126:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5069:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5095:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "5074:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5074:25:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5062:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5062:38:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5113:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5124:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5129:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5120:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5113:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5145:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5156:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5161:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5152:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5152:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5145:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5014:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5017:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5011:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5021:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5023:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5032:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5035:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5028:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5028:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5023:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5007:3:10",
																"statements": []
															},
															"src": "5003:171:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5183:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5193:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5208:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5241:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5252:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5224:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5224:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5212:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5285:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5294:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5302:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5287:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5287:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5287:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5271:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5281:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5268:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:16:10"
															},
															"nodeType": "YulIf",
															"src": "5265:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5320:79:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5369:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5380:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5365:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5391:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5330:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5330:69:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4211:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4222:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4234:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4242:6:10",
														"type": ""
													}
												],
												"src": "4116:1289:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5479:188:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5525:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5534:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5542:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5527:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5527:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5527:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5500:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5521:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5492:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:32:10"
															},
															"nodeType": "YulIf",
															"src": "5489:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5560:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5573:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5564:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5631:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5605:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5605:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5646:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5656:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5445:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5456:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5468:6:10",
														"type": ""
													}
												],
												"src": "5410:257:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:181:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5798:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5807:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5815:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5800:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5800:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5800:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5773:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5782:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5769:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:32:10"
															},
															"nodeType": "YulIf",
															"src": "5762:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5833:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5852:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5846:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5846:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5837:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5897:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5871:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5871:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5871:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5912:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5922:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5718:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5729:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5741:6:10",
														"type": ""
													}
												],
												"src": "5672:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6008:120:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6054:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6063:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6071:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6056:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6056:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6056:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6029:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6038:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6050:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6021:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:32:10"
															},
															"nodeType": "YulIf",
															"src": "6018:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6089:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6112:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6099:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5974:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5985:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5997:6:10",
														"type": ""
													}
												],
												"src": "5938:190:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6200:376:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6210:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6230:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6224:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6214:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6252:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6257:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6245:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6273:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6283:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6277:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6296:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6307:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6312:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6296:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6324:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6342:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6349:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6338:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6328:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6361:12:10",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6370:3:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6365:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6431:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6452:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6463:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6457:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6457:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6445:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6445:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6484:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6495:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6500:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6491:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6484:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6516:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6530:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6538:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6526:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6526:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6516:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6393:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6390:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6404:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6406:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6415:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6418:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6411:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6411:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6406:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6386:3:10",
																"statements": []
															},
															"src": "6382:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6560:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6567:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6177:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6184:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6192:3:10",
														"type": ""
													}
												],
												"src": "6133:443:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6632:426:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6642:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6662:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6656:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6656:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6646:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6684:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6689:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6677:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6705:12:10",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6714:3:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6709:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6778:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6792:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6802:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6796:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6834:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6839:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6830:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6830:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6843:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6826:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6826:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6862:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6869:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6858:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6858:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6873:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6854:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6854:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6848:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6848:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6819:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6819:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6819:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6737:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6740:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6734:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6748:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6750:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6759:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6762:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6755:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6755:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6750:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6730:3:10",
																"statements": []
															},
															"src": "6726:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6922:64:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6951:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6956:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6947:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6947:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6965:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6943:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6943:27:10"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "6972:3:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6936:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6936:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6936:40:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6903:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6906:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6900:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6900:13:10"
															},
															"nodeType": "YulIf",
															"src": "6897:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6995:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7010:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7023:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7031:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7019:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7019:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7040:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7036:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7036:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7015:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7015:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7002:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6609:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6616:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6624:3:10",
														"type": ""
													}
												],
												"src": "6581:477:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7394:509:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7404:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7422:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7418:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7431:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7408:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7449:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7464:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7472:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7460:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7442:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7442:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7442:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7496:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7507:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7492:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7516:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7524:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7485:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7485:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7544:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7564:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7537:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7577:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7638:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7649:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7634:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7591:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:63:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7581:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7685:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7670:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7694:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7702:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7690:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7690:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7663:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7722:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7771:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7779:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7736:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:50:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7726:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7806:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7817:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7802:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7802:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7827:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7795:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7855:42:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7882:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7890:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7863:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:34:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7331:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7342:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7350:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7358:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7366:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7374:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7385:4:10",
														"type": ""
													}
												],
												"src": "7063:840:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8139:331:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8149:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8167:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8172:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8163:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8159:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8153:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8194:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8209:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8217:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8205:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8187:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8241:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8252:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8237:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8261:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8269:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8257:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8257:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8230:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8230:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8293:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8304:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8309:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8282:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8282:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8282:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8336:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8347:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8352:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8325:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8325:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8325:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8390:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8375:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8396:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8368:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8409:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8436:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8448:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8459:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8417:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8417:47:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8409:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8076:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8087:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8095:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8103:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8111:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8119:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8130:4:10",
														"type": ""
													}
												],
												"src": "7908:562:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8626:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8643:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8654:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8636:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8666:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8732:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8717:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8674:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8674:62:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8666:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8595:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8606:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8617:4:10",
														"type": ""
													}
												],
												"src": "8475:267:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8976:248:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8993:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9004:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8986:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9016:76:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9065:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9077:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9088:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9073:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9073:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9030:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9030:62:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9020:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9112:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9123:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9108:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9132:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9140:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9128:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9128:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9101:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9101:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9101:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9160:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9211:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9168:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:50:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9160:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8937:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8948:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8956:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8967:4:10",
														"type": ""
													}
												],
												"src": "8747:477:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9324:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9346:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9357:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9342:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9342:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9334:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9376:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9401:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9394:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9394:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9387:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9387:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9369:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9293:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9304:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9315:4:10",
														"type": ""
													}
												],
												"src": "9229:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9542:100:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9559:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9552:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9582:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9609:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9621:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9632:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9617:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9617:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9590:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9590:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9582:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9511:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9533:4:10",
														"type": ""
													}
												],
												"src": "9421:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9821:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9838:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9849:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9831:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9872:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9883:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9868:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9888:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9861:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9911:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9922:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9907:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9927:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9900:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9900:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9900:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9982:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9993:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9978:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9998:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9971:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9971:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10030:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10053:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9798:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9812:4:10",
														"type": ""
													}
												],
												"src": "9647:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10242:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10259:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10252:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10304:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10289:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10289:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10309:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10282:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10282:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10282:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10343:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10328:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10348:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10321:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10403:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10414:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10399:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10399:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10419:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10392:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10392:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10439:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10451:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10462:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10447:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10447:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10439:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10219:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10233:4:10",
														"type": ""
													}
												],
												"src": "10068:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10651:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10668:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10679:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10661:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10661:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10702:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10713:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10698:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10698:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10718:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10691:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10741:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10752:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10737:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10737:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10757:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10730:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10812:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10823:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10808:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10828:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10851:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10863:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10874:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10859:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10851:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10628:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10642:4:10",
														"type": ""
													}
												],
												"src": "10477:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11080:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11091:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11073:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11130:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11153:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11164:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11169:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11224:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11235:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11220:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11220:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11240:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11213:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11213:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11213:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11261:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11273:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11284:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11269:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11269:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11261:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11040:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11054:4:10",
														"type": ""
													}
												],
												"src": "10889:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11473:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11490:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11501:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11524:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11535:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11520:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11520:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11540:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11513:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11513:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11574:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11559:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11579:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11552:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11634:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11645:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11630:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11630:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11650:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11623:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11623:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11623:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11667:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11679:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11690:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11675:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11675:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11667:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11450:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11464:4:10",
														"type": ""
													}
												],
												"src": "11299:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11879:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11896:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11907:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11889:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11889:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11930:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11941:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11926:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11926:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11946:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11919:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11969:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11980:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11965:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11985:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11958:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11958:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11958:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12040:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12051:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12036:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12036:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12056:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12029:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12086:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12098:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12109:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12086:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11856:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11870:4:10",
														"type": ""
													}
												],
												"src": "11705:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12298:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12315:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12308:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12308:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12308:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12349:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12360:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12345:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12338:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12338:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12388:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12399:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12384:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12404:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12377:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12377:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12459:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12470:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12455:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12475:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12448:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12448:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12448:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12497:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12509:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12520:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12497:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12275:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12289:4:10",
														"type": ""
													}
												],
												"src": "12124:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12709:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12726:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12737:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12719:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12719:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12771:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12756:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12776:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12749:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12749:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12799:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12795:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12795:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12815:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12788:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12788:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12788:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12870:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12881:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12886:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12859:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12907:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12919:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12930:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12915:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12915:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12907:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12686:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12700:4:10",
														"type": ""
													}
												],
												"src": "12535:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13119:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13129:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13170:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13181:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13166:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13186:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13159:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13159:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13209:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13220:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13205:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13225:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13198:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13198:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13198:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13280:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13291:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13276:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13296:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13269:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13269:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13317:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13329:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13340:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13325:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13317:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13096:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13110:4:10",
														"type": ""
													}
												],
												"src": "12945:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13529:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13591:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13576:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13596:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13569:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13569:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13635:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13701:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13686:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13706:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13679:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13679:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13726:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13738:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13749:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13734:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13726:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13506:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13520:4:10",
														"type": ""
													}
												],
												"src": "13355:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13865:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13875:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13887:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13898:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13883:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13875:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13917:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13928:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13910:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13910:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13910:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13834:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13845:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13856:4:10",
														"type": ""
													}
												],
												"src": "13764:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14075:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14085:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14108:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14085:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14127:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14138:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14120:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14120:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14165:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14176:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14161:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14181:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14154:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14036:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14047:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14055:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14066:4:10",
														"type": ""
													}
												],
												"src": "13946:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14274:117:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14318:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14320:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14320:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14320:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14290:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14298:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14287:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14287:30:10"
															},
															"nodeType": "YulIf",
															"src": "14284:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14349:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14365:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14373:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "14361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14361:17:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14380:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14357:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14357:28:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14349:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14265:4:10",
														"type": ""
													}
												],
												"src": "14199:192:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14444:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14471:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14473:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14473:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14473:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14460:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14467:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14463:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14457:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14457:13:10"
															},
															"nodeType": "YulIf",
															"src": "14454:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14502:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14513:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14516:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14502:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14427:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14430:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14436:3:10",
														"type": ""
													}
												],
												"src": "14396:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14584:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14594:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14608:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14614:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14604:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14604:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14594:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14625:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14655:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14661:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14651:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14629:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14702:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14704:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14718:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14726:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14714:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14714:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14704:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14682:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14675:26:10"
															},
															"nodeType": "YulIf",
															"src": "14672:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14792:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14813:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14820:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14825:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14816:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14816:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14806:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14806:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14806:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14857:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14860:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14850:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14850:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14850:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14885:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14888:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14878:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14878:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14878:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14748:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14771:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14779:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14768:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14768:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14745:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14745:38:10"
															},
															"nodeType": "YulIf",
															"src": "14742:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14564:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14573:6:10",
														"type": ""
													}
												],
												"src": "14529:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14961:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14971:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14993:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "15009:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15015:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15005:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15005:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15024:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15020:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15020:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15001:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14989:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14989:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14975:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15104:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15106:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15106:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15106:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15047:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15059:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15044:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15044:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15083:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15095:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15080:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15080:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15041:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15041:62:10"
															},
															"nodeType": "YulIf",
															"src": "15038:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15142:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "15146:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15135:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15135:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14943:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14951:4:10",
														"type": ""
													}
												],
												"src": "14914:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15215:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15246:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15248:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15248:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15248:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15231:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15242:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15238:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15238:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15228:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15228:17:10"
															},
															"nodeType": "YulIf",
															"src": "15225:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15277:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15288:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15295:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15284:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15284:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15277:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15197:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15207:3:10",
														"type": ""
													}
												],
												"src": "15168:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15340:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15357:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15364:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15369:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15360:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15360:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15350:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15350:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15397:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15400:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15390:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15390:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15390:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15421:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15424:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15414:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15414:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15308:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15472:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15489:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15496:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15501:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15492:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15482:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15482:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15482:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15529:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15532:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15522:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15522:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15522:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15553:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15556:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15546:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15546:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15440:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15615:142:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15660:91:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15689:3:10"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15694:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15699:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15674:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15674:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15674:27:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15714:27:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15725:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "15736:3:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15730:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15730:10:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15721:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15721:20:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15714:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15631:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15631:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15649:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15628:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15628:23:10"
															},
															"nodeType": "YulIf",
															"src": "15625:2:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15607:3:10",
														"type": ""
													}
												],
												"src": "15572:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15809:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15849:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15851:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15825:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15825:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15843:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15822:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:26:10"
															},
															"nodeType": "YulIf",
															"src": "15819:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15867:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15885:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15879:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15879:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15871:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15897:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15911:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15907:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15907:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15901:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15937:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15943:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15950:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15950:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15968:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15946:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15922:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15922:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15922:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15981:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16001:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15995:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15995:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15985:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16015:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "16025:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16025:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "16019:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16050:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16060:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "16054:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16136:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16138:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16096:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "16104:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16093:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16116:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16124:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16112:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16112:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16131:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16109:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16109:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16090:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16090:45:10"
															},
															"nodeType": "YulIf",
															"src": "16087:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16154:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16169:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16175:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16165:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16165:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "16158:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16191:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "16211:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16205:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16205:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16195:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16242:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16244:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16230:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16238:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16227:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16227:14:10"
															},
															"nodeType": "YulIf",
															"src": "16224:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16333:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16335:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16274:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16279:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16270:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16270:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16288:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16266:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16266:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16303:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16309:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16309:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16299:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16299:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16328:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16295:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16295:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16263:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16263:69:10"
															},
															"nodeType": "YulIf",
															"src": "16260:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16371:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16385:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16393:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16381:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16381:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16402:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16377:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16351:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16351:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16351:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16417:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16424:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16417:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15801:3:10",
														"type": ""
													}
												],
												"src": "15762:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16484:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16549:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16558:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16561:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16551:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16551:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16551:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16507:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16518:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16529:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16534:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16525:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16525:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16514:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16514:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16504:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16504:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16497:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16497:51:10"
															},
															"nodeType": "YulIf",
															"src": "16494:2:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16473:5:10",
														"type": ""
													}
												],
												"src": "16438:133:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_t_array$_t_address_$dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_t_array$_t_address_$dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, mul(_3, _4)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_t_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_t_array$_t_address_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461015057610087565b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d46565b610163565b6040516100ac9190611301565b60405180910390f35b6100c86100c3366004610e38565b6101ba565b6040516100ac9190610ff8565b6100e86100e3366004610e77565b610202565b6040516100ac9190611003565b610108610103366004610c03565b610296565b005b61011d610118366004610d6f565b6102f4565b6040516100ac9190610fb7565b610108610138366004610d0c565b610414565b6100c861014b366004610bd1565b61042a565b61010861015e366004610ca9565b610458565b60006001600160a01b0383166101945760405162461bcd60e51b815260040161018b906110b2565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806101eb57506001600160e01b031982166303a24d0760e21b145b806101fa57506101fa826104af565b90505b919050565b60606002805461021190611354565b80601f016020809104026020016040519081016040528092919081815260200182805461023d90611354565b801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b50505050509050919050565b61029e6104c8565b6001600160a01b0316856001600160a01b031614806102c457506102c48561014b6104c8565b6102e05760405162461bcd60e51b815260040161018b9061118b565b6102ed85858585856104cd565b5050505050565b606081518351146103175760405162461bcd60e51b815260040161018b90611270565b6000835167ffffffffffffffff81111561034157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561036a578160200160208202803683370190505b50905060005b845181101561040c576103d185828151811061039c57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106103c457634e487b7160e01b600052603260045260246000fd5b6020026020010151610163565b8282815181106103f157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610405816113bc565b9050610370565b509392505050565b61042661041f6104c8565b838361069e565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6104606104c8565b6001600160a01b0316856001600160a01b0316148061048657506104868561014b6104c8565b6104a25760405162461bcd60e51b815260040161018b906110fd565b6102ed8585858585610741565b6001600160e01b031981166301ffc9a760e01b14919050565b335b90565b81518351146104ee5760405162461bcd60e51b815260040161018b906112b9565b6001600160a01b0384166105145760405162461bcd60e51b815260040161018b90611146565b600061051e6104c8565b905061052e818787878787610696565b60005b845181101561063057600085828151811061055c57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061058857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105d85760405162461bcd60e51b815260040161018b906111dd565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061061590849061133c565b9250508190555050505080610629906113bc565b9050610531565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610680929190610fca565b60405180910390a4610696818787878787610884565b505050505050565b816001600160a01b0316836001600160a01b031614156106d05760405162461bcd60e51b815260040161018b90611227565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610734908590610ff8565b60405180910390a3505050565b6001600160a01b0384166107675760405162461bcd60e51b815260040161018b90611146565b60006107716104c8565b9050610791818787610782886109a9565b61078b886109a9565b87610696565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156107d25760405162461bcd60e51b815260040161018b906111dd565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061080f90849061133c565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62888860405161086592919061130a565b60405180910390a461087b828888888888610a02565b50505050505050565b610896846001600160a01b0316610ad3565b156106965760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108cf9089908990889088908890600401610f14565b602060405180830381600087803b1580156108e957600080fd5b505af1925050508015610919575060408051601f3d908101601f1916820190925261091691810190610e5b565b60015b61097957610925611403565b806308c379a0141561095f575061093a61141a565b806109455750610961565b8060405162461bcd60e51b815260040161018b9190611003565b505b60405162461bcd60e51b815260040161018b90611016565b6001600160e01b0319811663bc197c8160e01b1461087b5760405162461bcd60e51b815260040161018b9061106a565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106109f157634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610a14846001600160a01b0316610ad3565b156106965760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a4d9089908990889088908890600401610f72565b602060405180830381600087803b158015610a6757600080fd5b505af1925050508015610a97575060408051601f3d908101601f19168201909252610a9491810190610e5b565b60015b610aa357610925611403565b6001600160e01b0319811663f23a6e6160e01b1461087b5760405162461bcd60e51b815260040161018b9061106a565b3b151590565b80356001600160a01b03811681146101fd57600080fd5b600082601f830112610b00578081fd5b81356020610b0d82611318565b604051610b1a828261138f565b838152828101915085830183850287018401881015610b37578586fd5b855b85811015610b5557813584529284019290840190600101610b39565b5090979650505050505050565b600082601f830112610b72578081fd5b813567ffffffffffffffff811115610b8c57610b8c6113ed565b604051610ba3601f8301601f19166020018261138f565b818152846020838601011115610bb7578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610be3578182fd5b610bec83610ad9565b9150610bfa60208401610ad9565b90509250929050565b600080600080600060a08688031215610c1a578081fd5b610c2386610ad9565b9450610c3160208701610ad9565b9350604086013567ffffffffffffffff80821115610c4d578283fd5b610c5989838a01610af0565b94506060880135915080821115610c6e578283fd5b610c7a89838a01610af0565b93506080880135915080821115610c8f578283fd5b50610c9c88828901610b62565b9150509295509295909350565b600080600080600060a08688031215610cc0578081fd5b610cc986610ad9565b9450610cd760208701610ad9565b93506040860135925060608601359150608086013567ffffffffffffffff811115610d00578182fd5b610c9c88828901610b62565b60008060408385031215610d1e578182fd5b610d2783610ad9565b915060208301358015158114610d3b578182fd5b809150509250929050565b60008060408385031215610d58578182fd5b610d6183610ad9565b946020939093013593505050565b60008060408385031215610d81578182fd5b823567ffffffffffffffff80821115610d98578384fd5b818501915085601f830112610dab578384fd5b81356020610db882611318565b604051610dc5828261138f565b8381528281019150858301838502870184018b1015610de2578889fd5b8896505b84871015610e0b57610df781610ad9565b835260019690960195918301918301610de6565b5096505086013592505080821115610e21578283fd5b50610e2e85828601610af0565b9150509250929050565b600060208284031215610e49578081fd5b8135610e54816114ac565b9392505050565b600060208284031215610e6c578081fd5b8151610e54816114ac565b600060208284031215610e88578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610ebe57815187529582019590820190600101610ea2565b509495945050505050565b60008151808452815b81811015610eee57602081850181015186830182015201610ed2565b81811115610eff5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090610f4090830186610e8f565b8281036060840152610f528186610e8f565b90508281036080840152610f668185610ec9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090610fac90830184610ec9565b979650505050505050565b600060208252610e546020830184610e8f565b600060408252610fdd6040830185610e8f565b8281036020840152610fef8185610e8f565b95945050505050565b901515815260200190565b600060208252610e546020830184610ec9565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206040820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604082015268103337b91039b2b63360b91b606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604082015268040dad2e6dac2e8c6d60bb1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff821115611332576113326113ed565b5060209081020190565b6000821982111561134f5761134f6113d7565b500190565b60028104600182168061136857607f821691505b6020821081141561138957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156113b5576113b56113ed565b6040525050565b60006000198214156113d0576113d06113d7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156104ca57600481823e5160e01c90565b600060443d101561142a576104ca565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561145c5750505050506104ca565b8285019150815181811115611476575050505050506104ca565b843d8701016020828501011115611492575050505050506104ca565b6114a16020828601018761138f565b509094505050505090565b6001600160e01b0319811681146114c257600080fd5b5056fea26469706673582212207fbbb96f83e61ff925ba6586515bebcd4c2a06a5117a76393076c3ae055c900d64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x150 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1EB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1FA JUMPI POP PUSH2 0x1FA DUP3 PUSH2 0x4AF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x1354 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0x1354 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2C4 JUMPI POP PUSH2 0x2C4 DUP6 PUSH2 0x14B PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x2ED DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x341 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH2 0x3D1 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x405 DUP2 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP PUSH2 0x370 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x426 PUSH2 0x41F PUSH2 0x4C8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x69E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x460 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x486 JUMPI POP PUSH2 0x486 DUP6 PUSH2 0x14B PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x2ED DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x52E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x55C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x588 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x615 SWAP1 DUP5 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x629 SWAP1 PUSH2 0x13BC JUMP JUMPDEST SWAP1 POP PUSH2 0x531 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x680 SWAP3 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x696 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x884 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x734 SWAP1 DUP6 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x791 DUP2 DUP8 DUP8 PUSH2 0x782 DUP9 PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x78B DUP9 PUSH2 0x9A9 JUMP JUMPDEST DUP8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x80F SWAP1 DUP5 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x865 SWAP3 SWAP2 SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x87B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xA02 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x896 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD3 JUMP JUMPDEST ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8CF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x919 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x916 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x979 JUMPI PUSH2 0x925 PUSH2 0x1403 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x95F JUMPI POP PUSH2 0x93A PUSH2 0x141A JUMP JUMPDEST DUP1 PUSH2 0x945 JUMPI POP PUSH2 0x961 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA14 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD3 JUMP JUMPDEST ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xA4D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA94 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAA3 JUMPI PUSH2 0x925 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x106A JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB0D DUP3 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1A DUP3 DUP3 PUSH2 0x138F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xB37 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xB55 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xB39 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB72 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA3 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x138F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xBB7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xBEC DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFA PUSH1 0x20 DUP5 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC1A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC23 DUP7 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 POP PUSH2 0xC31 PUSH1 0x20 DUP8 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC4D JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC59 DUP10 DUP4 DUP11 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC6E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xC7A DUP10 DUP4 DUP11 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC8F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xC9C DUP9 DUP3 DUP10 ADD PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCC0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xCC9 DUP7 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 POP PUSH2 0xCD7 PUSH1 0x20 DUP8 ADD PUSH2 0xAD9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD00 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC9C DUP9 DUP3 DUP10 ADD PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD27 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD3B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD58 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD61 DUP4 PUSH2 0xAD9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD81 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD98 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDAB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xDB8 DUP3 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC5 DUP3 DUP3 PUSH2 0x138F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xDE2 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xDF7 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xDE6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE21 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xE2E DUP6 DUP3 DUP7 ADD PUSH2 0xAF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE49 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE54 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE54 DUP2 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE88 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEBE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEA2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xED2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEFF JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF40 SWAP1 DUP4 ADD DUP7 PUSH2 0xE8F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xF52 DUP2 DUP7 PUSH2 0xE8F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xF66 DUP2 DUP6 PUSH2 0xEC9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xFAC SWAP1 DUP4 ADD DUP5 PUSH2 0xEC9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xFDD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE8F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xFEF DUP2 DUP6 PUSH2 0xE8F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xE54 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1332 JUMPI PUSH2 0x1332 PUSH2 0x13ED JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x134F JUMPI PUSH2 0x134F PUSH2 0x13D7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1368 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1389 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13D0 PUSH2 0x13D7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x142A JUMPI PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x145C JUMPI POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1476 JUMPI POP POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1492 JUMPI POP POP POP POP POP POP PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x14A1 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x138F JUMP JUMPDEST POP SWAP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xBBB96F83E61FF925BA6586515BEBCD4C2A06A5117A76393076C3AE055C900D64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "555:14720:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1925:103::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;;:::i;3584:389::-;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:2;;2275:77;;;;-1:-1:-1;;;2275:77:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2369:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:2;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:2;;-1:-1:-1;;;1358:41:2;;:109;;-1:-1:-1;;;;;;;1415:52:2;;-1:-1:-1;;;1415:52:2;1358:109;:161;;;;1483:36;1507:11;1483:23;:36::i;:::-;1339:180;;1221:305;;;;:::o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;4278:12;:10;:12::i;:::-;-1:-1:-1;;;;;4270:20:2;:4;-1:-1:-1;;;;;4270:20:2;;:60;;;;4294:36;4311:4;4317:12;:10;:12::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:2;;;;;;;:::i;:::-;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:2;;;;;;;:::i;:::-;2832:30;2879:8;:15;2865:30;;;;;;-1:-1:-1;;;2865:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:2;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;-1:-1:-1;;;2995:11:2;;;;;;;;;;;;;;;3008:3;3012:1;3008:6;;;;;;-1:-1:-1;;;3008:6:2;;;;;;;;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;-1:-1:-1;;;2966:16:2;;;;;;;;;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:2;2555:508;-1:-1:-1;;;2555:508:2:o;3131:153::-;3225:52;3244:12;:10;:12::i;:::-;3258:8;3268;3225:18;:52::i;:::-;3131:153;;:::o;3351:166::-;-1:-1:-1;;;;;3473:27:2;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166::o;3584:389::-;3792:12;:10;:12::i;:::-;-1:-1:-1;;;;;3784:20:2;:4;-1:-1:-1;;;;;3784:20:2;;:60;;;;3808:36;3825:4;3831:12;:10;:12::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:2;;;;;;;:::i;:::-;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;829:155:8:-;-1:-1:-1;;;;;;937:40:8;;-1:-1:-1;;;937:40:8;829:155;;;:::o;640:96:7:-;719:10;640:96;;:::o;6068:1045:2:-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6365:16:2;;6357:66;;;;-1:-1:-1;;;6357:66:2;;;;;;;:::i;:::-;6434:16;6453:12;:10;:12::i;:::-;6434:31;;6476:60;6497:8;6507:4;6513:2;6517:3;6522:7;6531:4;6476:20;:60::i;:::-;6552:9;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;-1:-1:-1;;;6615:6:2;;;;;;;;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:2;;;;;;;;;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:2;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:2;;;;6732:76;;;;-1:-1:-1;;;6732:76:2;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:2;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6547:411;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:2;6997:4;-1:-1:-1;;;;;6973:47:2;6987:8;-1:-1:-1;;;;;6973:47:2;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6068:1045;;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:2;:5;-1:-1:-1;;;;;12215:17:2;;;12207:71;;;;-1:-1:-1;;;12207:71:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;12288:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:2;;;;;;;12349:41;;;;;12288:46;;12349:41;:::i;:::-;;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:2;;5098:66;;;;-1:-1:-1;;;5098:66:2;;;;;;;:::i;:::-;5175:16;5194:12;:10;:12::i;:::-;5175:31;;5217:96;5238:8;5248:4;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;:::-;5308:4;5217:20;:96::i;:::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:2;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:2;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:2;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;;;;;5621:2;-1:-1:-1;;;;;5590:46:2;5615:4;-1:-1:-1;;;;;5590:46:2;5605:8;-1:-1:-1;;;;;5590:46:2;;5625:2;5629:6;5590:46;;;;;;;:::i;:::-;;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;4925:797;;;;;;;:::o;14282:792::-;14514:15;:2;-1:-1:-1;;;;;14514:13:2;;:15::i;:::-;14510:558;;;14549:79;;-1:-1:-1;;;14549:79:2;;-1:-1:-1;;;;;14549:43:2;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:2;;;;;;;;-1:-1:-1;;14549:79:2;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:2;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:2;;;;;;;:::i;14545:513::-;-1:-1:-1;;;;;;14707:60:2;;-1:-1:-1;;;14707:60:2;14703:157;;14791:50;;-1:-1:-1;;;14791:50:2;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:2;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:2;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:2:o;13551:725::-;13758:15;:2;-1:-1:-1;;;;;13758:13:2;;:15::i;:::-;13754:516;;;13793:72;;-1:-1:-1;;;13793:72:2;;-1:-1:-1;;;;;13793:38:2;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:2;;;;;;;;-1:-1:-1;;13793:72:2;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:2;;-1:-1:-1;;;13914:55:2;13910:152;;13993:50;;-1:-1:-1;;;13993:50:2;;;;;;;:::i;771:377:6:-;1087:20;1133:8;;;771:377::o;14:175:10:-;84:20;;-1:-1:-1;;;;;133:31:10;;123:42;;113:2;;179:1;176;169:12;194:768;;307:3;300:4;292:6;288:17;284:27;274:2;;329:5;322;315:20;274:2;369:6;356:20;395:4;418:49;464:2;418:49;:::i;:::-;496:2;490:9;508:31;536:2;528:6;508:31;:::i;:::-;574:18;;;608:15;;;;-1:-1:-1;643:15:10;;;689:11;;;677:24;;673:33;;670:42;-1:-1:-1;667:2:10;;;729:5;722;715:20;667:2;755:5;769:163;783:2;780:1;777:9;769:163;;;840:17;;828:30;;878:12;;;;910;;;;801:1;794:9;769:163;;;-1:-1:-1;950:6:10;;264:698;-1:-1:-1;;;;;;;264:698:10:o;967:577::-;;1064:3;1057:4;1049:6;1045:17;1041:27;1031:2;;1086:5;1079;1072:20;1031:2;1126:6;1113:20;1152:18;1148:2;1145:26;1142:2;;;1174:18;;:::i;:::-;1223:2;1217:9;1235:67;1290:2;1271:13;;-1:-1:-1;;1267:27:10;1296:4;1263:38;1217:9;1235:67;:::i;:::-;1326:2;1318:6;1311:18;1372:3;1365:4;1360:2;1352:6;1348:15;1344:26;1341:35;1338:2;;;1393:5;1386;1379:20;1338:2;1461;1454:4;1446:6;1442:17;1435:4;1427:6;1423:17;1410:54;1484:15;;;1501:4;1480:26;1473:41;;;;1488:6;1021:523;-1:-1:-1;;1021:523:10:o;1549:274::-;;;1678:2;1666:9;1657:7;1653:23;1649:32;1646:2;;;1699:6;1691;1684:22;1646:2;1727:31;1748:9;1727:31;:::i;:::-;1717:41;;1777:40;1813:2;1802:9;1798:18;1777:40;:::i;:::-;1767:50;;1636:187;;;;;:::o;1828:1001::-;;;;;;2067:3;2055:9;2046:7;2042:23;2038:33;2035:2;;;2089:6;2081;2074:22;2035:2;2117:31;2138:9;2117:31;:::i;:::-;2107:41;;2167:40;2203:2;2192:9;2188:18;2167:40;:::i;:::-;2157:50;;2258:2;2247:9;2243:18;2230:32;2281:18;2322:2;2314:6;2311:14;2308:2;;;2343:6;2335;2328:22;2308:2;2371:67;2430:7;2421:6;2410:9;2406:22;2371:67;:::i;:::-;2361:77;;2491:2;2480:9;2476:18;2463:32;2447:48;;2520:2;2510:8;2507:16;2504:2;;;2541:6;2533;2526:22;2504:2;2569:69;2630:7;2619:8;2608:9;2604:24;2569:69;:::i;:::-;2559:79;;2691:3;2680:9;2676:19;2663:33;2647:49;;2721:2;2711:8;2708:16;2705:2;;;2742:6;2734;2727:22;2705:2;;2770:53;2815:7;2804:8;2793:9;2789:24;2770:53;:::i;:::-;2760:63;;;2025:804;;;;;;;;:::o;2834:632::-;;;;;;3023:3;3011:9;3002:7;2998:23;2994:33;2991:2;;;3045:6;3037;3030:22;2991:2;3073:31;3094:9;3073:31;:::i;:::-;3063:41;;3123:40;3159:2;3148:9;3144:18;3123:40;:::i;:::-;3113:50;;3210:2;3199:9;3195:18;3182:32;3172:42;;3261:2;3250:9;3246:18;3233:32;3223:42;;3316:3;3305:9;3301:19;3288:33;3344:18;3336:6;3333:30;3330:2;;;3381:6;3373;3366:22;3330:2;3409:51;3452:7;3443:6;3432:9;3428:22;3409:51;:::i;3471:369::-;;;3597:2;3585:9;3576:7;3572:23;3568:32;3565:2;;;3618:6;3610;3603:22;3565:2;3646:31;3667:9;3646:31;:::i;:::-;3636:41;;3727:2;3716:9;3712:18;3699:32;3774:5;3767:13;3760:21;3753:5;3750:32;3740:2;;3801:6;3793;3786:22;3740:2;3829:5;3819:15;;;3555:285;;;;;:::o;3845:266::-;;;3974:2;3962:9;3953:7;3949:23;3945:32;3942:2;;;3995:6;3987;3980:22;3942:2;4023:31;4044:9;4023:31;:::i;:::-;4013:41;4101:2;4086:18;;;;4073:32;;-1:-1:-1;;;3932:179:10:o;4116:1289::-;;;4295:2;4283:9;4274:7;4270:23;4266:32;4263:2;;;4316:6;4308;4301:22;4263:2;4361:9;4348:23;4390:18;4431:2;4423:6;4420:14;4417:2;;;4452:6;4444;4437:22;4417:2;4495:6;4484:9;4480:22;4470:32;;4540:7;4533:4;4529:2;4525:13;4521:27;4511:2;;4567:6;4559;4552:22;4511:2;4608;4595:16;4630:4;4653:49;4699:2;4653:49;:::i;:::-;4731:2;4725:9;4743:31;4771:2;4763:6;4743:31;:::i;:::-;4809:18;;;4843:15;;;;-1:-1:-1;4878:11:10;;;4916;;;4908:20;;4904:29;;4901:42;-1:-1:-1;4898:2:10;;;4961:6;4953;4946:22;4898:2;4988:6;4979:15;;5003:171;5017:2;5014:1;5011:9;5003:171;;;5074:25;5095:3;5074:25;:::i;:::-;5062:38;;5035:1;5028:9;;;;;5120:12;;;;5152;;5003:171;;;-1:-1:-1;5193:6:10;-1:-1:-1;;5237:18:10;;5224:32;;-1:-1:-1;;5268:16:10;;;5265:2;;;5302:6;5294;5287:22;5265:2;;5330:69;5391:7;5380:8;5369:9;5365:24;5330:69;:::i;:::-;5320:79;;;4253:1152;;;;;:::o;5410:257::-;;5521:2;5509:9;5500:7;5496:23;5492:32;5489:2;;;5542:6;5534;5527:22;5489:2;5586:9;5573:23;5605:32;5631:5;5605:32;:::i;:::-;5656:5;5479:188;-1:-1:-1;;;5479:188:10:o;5672:261::-;;5794:2;5782:9;5773:7;5769:23;5765:32;5762:2;;;5815:6;5807;5800:22;5762:2;5852:9;5846:16;5871:32;5897:5;5871:32;:::i;5938:190::-;;6050:2;6038:9;6029:7;6025:23;6021:32;6018:2;;;6071:6;6063;6056:22;6018:2;-1:-1:-1;6099:23:10;;6008:120;-1:-1:-1;6008:120:10:o;6133:443::-;;6230:5;6224:12;6257:6;6252:3;6245:19;6283:4;6312:2;6307:3;6303:12;6296:19;;6349:2;6342:5;6338:14;6370:3;6382:169;6396:6;6393:1;6390:13;6382:169;;;6457:13;;6445:26;;6491:12;;;;6526:15;;;;6418:1;6411:9;6382:169;;;-1:-1:-1;6567:3:10;;6200:376;-1:-1:-1;;;;;6200:376:10:o;6581:477::-;;6662:5;6656:12;6689:6;6684:3;6677:19;6714:3;6726:162;6740:6;6737:1;6734:13;6726:162;;;6802:4;6858:13;;;6854:22;;6848:29;6830:11;;;6826:20;;6819:59;6755:12;6726:162;;;6906:6;6903:1;6900:13;6897:2;;;6972:3;6965:4;6956:6;6951:3;6947:16;6943:27;6936:40;6897:2;-1:-1:-1;7040:2:10;7019:15;-1:-1:-1;;7015:29:10;7006:39;;;;7047:4;7002:50;;6632:426;-1:-1:-1;;6632:426:10:o;7063:840::-;-1:-1:-1;;;;;7460:15:10;;;7442:34;;7512:15;;7507:2;7492:18;;7485:43;7422:3;7559:2;7544:18;;7537:31;;;7063:840;;7591:63;;7634:19;;7626:6;7591:63;:::i;:::-;7702:9;7694:6;7690:22;7685:2;7674:9;7670:18;7663:50;7736;7779:6;7771;7736:50;:::i;:::-;7722:64;;7835:9;7827:6;7823:22;7817:3;7806:9;7802:19;7795:51;7863:34;7890:6;7882;7863:34;:::i;:::-;7855:42;7394:509;-1:-1:-1;;;;;;;;7394:509:10:o;7908:562::-;-1:-1:-1;;;;;8205:15:10;;;8187:34;;8257:15;;8252:2;8237:18;;8230:43;8304:2;8289:18;;8282:34;;;8347:2;8332:18;;8325:34;;;8167:3;8390;8375:19;;8368:32;;;7908:562;;8417:47;;8444:19;;8436:6;8417:47;:::i;:::-;8409:55;8139:331;-1:-1:-1;;;;;;;8139:331:10:o;8475:267::-;;8654:2;8643:9;8636:21;8674:62;8732:2;8721:9;8717:18;8709:6;8674:62;:::i;8747:477::-;;9004:2;8993:9;8986:21;9030:62;9088:2;9077:9;9073:18;9065:6;9030:62;:::i;:::-;9140:9;9132:6;9128:22;9123:2;9112:9;9108:18;9101:50;9168;9211:6;9203;9168:50;:::i;:::-;9160:58;8976:248;-1:-1:-1;;;;;8976:248:10:o;9229:187::-;9394:14;;9387:22;9369:41;;9357:2;9342:18;;9324:92::o;9421:221::-;;9570:2;9559:9;9552:21;9590:46;9632:2;9621:9;9617:18;9609:6;9590:46;:::i;9647:416::-;9849:2;9831:21;;;9888:2;9868:18;;;9861:30;9927:34;9922:2;9907:18;;9900:62;-1:-1:-1;;;9993:2:10;9978:18;;9971:50;10053:3;10038:19;;9821:242::o;10068:404::-;10270:2;10252:21;;;10309:2;10289:18;;;10282:30;10348:34;10343:2;10328:18;;10321:62;-1:-1:-1;;;10414:2:10;10399:18;;10392:38;10462:3;10447:19;;10242:230::o;10477:407::-;10679:2;10661:21;;;10718:2;10698:18;;;10691:30;10757:34;10752:2;10737:18;;10730:62;-1:-1:-1;;;10823:2:10;10808:18;;10801:41;10874:3;10859:19;;10651:233::o;10889:405::-;11091:2;11073:21;;;11130:2;11110:18;;;11103:30;11169:34;11164:2;11149:18;;11142:62;-1:-1:-1;;;11235:2:10;11220:18;;11213:39;11284:3;11269:19;;11063:231::o;11299:401::-;11501:2;11483:21;;;11540:2;11520:18;;;11513:30;11579:34;11574:2;11559:18;;11552:62;-1:-1:-1;;;11645:2:10;11630:18;;11623:35;11690:3;11675:19;;11473:227::o;11705:414::-;11907:2;11889:21;;;11946:2;11926:18;;;11919:30;11985:34;11980:2;11965:18;;11958:62;-1:-1:-1;;;12051:2:10;12036:18;;12029:48;12109:3;12094:19;;11879:240::o;12124:406::-;12326:2;12308:21;;;12365:2;12345:18;;;12338:30;12404:34;12399:2;12384:18;;12377:62;-1:-1:-1;;;12470:2:10;12455:18;;12448:40;12520:3;12505:19;;12298:232::o;12535:405::-;12737:2;12719:21;;;12776:2;12756:18;;;12749:30;12815:34;12810:2;12795:18;;12788:62;-1:-1:-1;;;12881:2:10;12866:18;;12859:39;12930:3;12915:19;;12709:231::o;12945:405::-;13147:2;13129:21;;;13186:2;13166:18;;;13159:30;13225:34;13220:2;13205:18;;13198:62;-1:-1:-1;;;13291:2:10;13276:18;;13269:39;13340:3;13325:19;;13119:231::o;13355:404::-;13557:2;13539:21;;;13596:2;13576:18;;;13569:30;13635:34;13630:2;13615:18;;13608:62;-1:-1:-1;;;13701:2:10;13686:18;;13679:38;13749:3;13734:19;;13529:230::o;13764:177::-;13910:25;;;13898:2;13883:18;;13865:76::o;13946:248::-;14120:25;;;14176:2;14161:18;;14154:34;14108:2;14093:18;;14075:119::o;14199:192::-;;14298:18;14290:6;14287:30;14284:2;;;14320:18;;:::i;:::-;-1:-1:-1;14380:4:10;14361:17;;;14357:28;;14274:117::o;14396:128::-;;14467:1;14463:6;14460:1;14457:13;14454:2;;;14473:18;;:::i;:::-;-1:-1:-1;14509:9:10;;14444:80::o;14529:380::-;14614:1;14604:12;;14661:1;14651:12;;;14672:2;;14726:4;14718:6;14714:17;14704:27;;14672:2;14779;14771:6;14768:14;14748:18;14745:38;14742:2;;;14825:10;14820:3;14816:20;14813:1;14806:31;14860:4;14857:1;14850:15;14888:4;14885:1;14878:15;14742:2;;14584:325;;;:::o;14914:249::-;15024:2;15005:13;;-1:-1:-1;;15001:27:10;14989:40;;15059:18;15044:34;;15080:22;;;15041:62;15038:2;;;15106:18;;:::i;:::-;15142:2;15135:22;-1:-1:-1;;14961:202:10:o;15168:135::-;;-1:-1:-1;;15228:17:10;;15225:2;;;15248:18;;:::i;:::-;-1:-1:-1;15295:1:10;15284:13;;15215:88::o;15308:127::-;15369:10;15364:3;15360:20;15357:1;15350:31;15400:4;15397:1;15390:15;15424:4;15421:1;15414:15;15440:127;15501:10;15496:3;15492:20;15489:1;15482:31;15532:4;15529:1;15522:15;15556:4;15553:1;15546:15;15572:185;;15649:1;15631:16;15628:23;15625:2;;;15699:1;15694:3;15689;15674:27;15730:10;15725:3;15721:20;15615:142;:::o;15762:671::-;;15843:4;15825:16;15822:26;15819:2;;;15851:5;;15819:2;15885;15879:9;-1:-1:-1;;15950:16:10;15946:25;;15943:1;15879:9;15922:50;16001:4;15995:11;16025:16;16060:18;16131:2;16124:4;16116:6;16112:17;16109:25;16104:2;16096:6;16093:14;16090:45;16087:2;;;16138:5;;;;;;;16087:2;16175:6;16169:4;16165:17;16154:28;;16211:3;16205:10;16238:2;16230:6;16227:14;16224:2;;;16244:5;;;;;;;;16224:2;16328;16309:16;16303:4;16299:27;16295:36;16288:4;16279:6;16274:3;16270:16;16266:27;16263:69;16260:2;;;16335:5;;;;;;;;16260:2;16351:57;16402:4;16393:6;16385;16381:19;16377:30;16371:4;16351:57;:::i;:::-;-1:-1:-1;16424:3:10;;-1:-1:-1;;;;;15809:624:10;:::o;16438:133::-;-1:-1:-1;;;;;;16514:32:10;;16504:43;;16494:2;;16561:1;16558;16551:12;16494:2;16484:87;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1074200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "1404",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23372",
								"supportsInterface(bytes4)": "603",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 138,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 136,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 189,
									"end": 195,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 181,
									"end": 187,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 174,
									"end": 196,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 138,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 221,
									"end": 237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 221,
									"end": 237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 286,
									"end": 300,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 283,
									"end": 285,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 283,
									"end": 285,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 318,
									"end": 324,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 303,
									"end": 325,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 283,
									"end": 285,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 361,
									"end": 367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 350,
									"end": 359,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 346,
									"end": 368,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 336,
									"end": 368,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 336,
									"end": 368,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 406,
									"end": 413,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 399,
									"end": 403,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 395,
									"end": 397,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 391,
									"end": 404,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 377,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 433,
									"end": 439,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 425,
									"end": 431,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 418,
									"end": 440,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 377,
									"end": 379,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 467,
									"end": 469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 461,
									"end": 470,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 489,
									"end": 491,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 485,
									"end": 487,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 492,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 479,
									"end": 481,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 570,
									"end": 572,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 573,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 538,
									"end": 540,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 624,
									"end": 637,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 620,
									"end": 642,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 644,
									"end": 646,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 616,
									"end": 647,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 612,
									"end": 652,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 600,
									"end": 653,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 600,
									"end": 653,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 600,
									"end": 653,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 668,
									"end": 686,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 688,
									"end": 710,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 665,
									"end": 711,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 662,
									"end": 664,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 662,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 662,
									"end": 664,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 754,
									"end": 764,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 765,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 824,
									"end": 826,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 819,
									"end": 821,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 815,
									"end": 817,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 811,
									"end": 822,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 807,
									"end": 827,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 804,
									"end": 837,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 801,
									"end": 803,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 801,
									"end": 803,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 855,
									"end": 861,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 847,
									"end": 853,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 840,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 801,
									"end": 803,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 873,
									"end": 888,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 873,
									"end": 888,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 911,
									"end": 913,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 908,
									"end": 909,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 905,
									"end": 914,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 989,
									"end": 1015,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 968,
									"end": 982,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 964,
									"end": 987,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 964,
									"end": 987,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1016,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 922,
									"end": 932,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 922,
									"end": 932,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1038,
									"end": 1047,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1085,
									"end": 1091,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1081,
									"end": 1096,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1077,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1070,
									"end": 1110,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1353,
									"end": 1357,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1341,
									"end": 1358,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1395,
									"end": 1409,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1410,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1452,
									"end": 1462,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1447,
									"end": 1450,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1443,
									"end": 1463,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1440,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1464,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1515,
									"end": 1519,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1520,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1602,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1597,
									"end": 1600,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1593,
									"end": 1613,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1590,
									"end": 1591,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1614,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1630,
									"end": 1631,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1623,
									"end": 1638,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1654,
									"end": 1655,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1662,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fbbb96f83e61ff925ba6586515bebcd4c2a06a5117a76393076c3ae055c900d64736f6c63430008010033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1507,
											"end": 1518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4278,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6434,
											"end": 6465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6497,
											"end": 6505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5194,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5238,
											"end": 5246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5619,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5605,
											"end": 5613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5629,
											"end": 5635,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 14514,
											"end": 14516,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 14514,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 13758,
											"end": 13760,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 13758,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 194,
											"end": 962,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 194,
											"end": 962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 298,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 288,
											"end": 305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 284,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 329,
											"end": 334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 315,
											"end": 335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 356,
											"end": 376,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 464,
											"end": 466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 418,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 418,
											"end": 467,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 467,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 418,
											"end": 467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 499,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 536,
											"end": 538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 508,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 574,
											"end": 592,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 574,
											"end": 592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 608,
											"end": 623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 608,
											"end": 623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 608,
											"end": 623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 608,
											"end": 623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 658,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 643,
											"end": 658,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 643,
											"end": 658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 689,
											"end": 700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 689,
											"end": 700,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 689,
											"end": 700,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 677,
											"end": 701,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 677,
											"end": 701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 673,
											"end": 706,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 673,
											"end": 706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 670,
											"end": 712,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 667,
											"end": 669,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 722,
											"end": 727,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 715,
											"end": 735,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 667,
											"end": 669,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 755,
											"end": 760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 769,
											"end": 932,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 769,
											"end": 932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 783,
											"end": 785,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 777,
											"end": 786,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 932,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 769,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 769,
											"end": 932,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 840,
											"end": 857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 840,
											"end": 857,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 828,
											"end": 858,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 828,
											"end": 858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 878,
											"end": 890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 878,
											"end": 890,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 878,
											"end": 890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 878,
											"end": 890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 910,
											"end": 922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 910,
											"end": 922,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 910,
											"end": 922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 910,
											"end": 922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 794,
											"end": 803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 769,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 769,
											"end": 932,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 932,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 769,
											"end": 932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 950,
											"end": 956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 950,
											"end": 956,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 264,
											"end": 962,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 962,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1544,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 967,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 967,
											"end": 1544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1061,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1068,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1092,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1145,
											"end": 1171,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1226,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1235,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1267,
											"end": 1294,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1235,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1235,
											"end": 1302,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1302,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1235,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1375,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1399,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1458,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1410,
											"end": 1464,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1499,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1484,
											"end": 1499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1514,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1514,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1544,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1549,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1676,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1727,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1813,
											"end": 1815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1777,
											"end": 1817,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1817,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1777,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1823,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2070,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2096,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2117,
											"end": 2148,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2148,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2117,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2148,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2167,
											"end": 2207,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2207,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2167,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2207,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2325,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2350,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2419,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2371,
											"end": 2438,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2371,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2495,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2523,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2548,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2569,
											"end": 2638,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 2638,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2569,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2638,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2694,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2680,
											"end": 2689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2696,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2696,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2724,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2727,
											"end": 2749,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2770,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2829,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3009,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3021,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3027,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3052,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2991,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3094,
											"end": 3103,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3104,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3159,
											"end": 3161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3163,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3265,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3319,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3321,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3363,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3366,
											"end": 3388,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3452,
											"end": 3459,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3409,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3409,
											"end": 3460,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3840,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3471,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3599,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3583,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3595,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3600,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3646,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3731,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3780,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3760,
											"end": 3781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3782,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3840,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3845,
											"end": 4111,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3845,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 4111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 4111,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 3972,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3977,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4002,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4054,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4105,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4105,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4111,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4116,
											"end": 5405,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4116,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 5405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 5405,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4274,
											"end": 4281,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4293,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 4298,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4323,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4371,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4390,
											"end": 4408,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4420,
											"end": 4434,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4547,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4529,
											"end": 4531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4525,
											"end": 4538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4548,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4574,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4611,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4699,
											"end": 4701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4653,
											"end": 4702,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4653,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4733,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4771,
											"end": 4773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4743,
											"end": 4774,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4743,
											"end": 4774,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4743,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 4943,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4968,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 4994,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 4994,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 4994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5015,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5095,
											"end": 5098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5074,
											"end": 5099,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5099,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5074,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5003,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5256,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5256,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5391,
											"end": 5398,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5378,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 5405,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5410,
											"end": 5667,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5519,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5524,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5548,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5549,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5596,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5631,
											"end": 5636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5661,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5479,
											"end": 5667,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5672,
											"end": 5933,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5672,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5797,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 5862,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5897,
											"end": 5902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5871,
											"end": 5903,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5938,
											"end": 6128,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5938,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6048,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6053,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6078,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6099,
											"end": 6122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6128,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6133,
											"end": 6576,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6133,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6236,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6245,
											"end": 6264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6315,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6347,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6338,
											"end": 6352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6370,
											"end": 6373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6403,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6470,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6503,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 6382,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6576,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6200,
											"end": 6576,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6581,
											"end": 7058,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6581,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 7058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6684,
											"end": 6687,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6747,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6802,
											"end": 6806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6858,
											"end": 6871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6871,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6877,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6841,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 6846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6826,
											"end": 6846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6755,
											"end": 6767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6726,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6913,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 6975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6951,
											"end": 6954,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6943,
											"end": 6970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 6976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7019,
											"end": 7034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7044,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 7058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6632,
											"end": 7058,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7063,
											"end": 7903,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7063,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7475,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7527,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7485,
											"end": 7528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7537,
											"end": 7568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7537,
											"end": 7568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7537,
											"end": 7568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7591,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7712,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7685,
											"end": 7687,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7713,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7736,
											"end": 7786,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7736,
											"end": 7786,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7736,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7823,
											"end": 7845,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7806,
											"end": 7815,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7890,
											"end": 7896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7863,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7863,
											"end": 7897,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7863,
											"end": 7897,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7863,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7897,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7903,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7394,
											"end": 7903,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7908,
											"end": 8470,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7908,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8220,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8272,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8349,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8359,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8170,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8375,
											"end": 8394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 8470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8417,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8464,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8470,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8139,
											"end": 8470,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8475,
											"end": 8742,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8475,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8656,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8636,
											"end": 8657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 8732,
											"end": 8734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8674,
											"end": 8736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8747,
											"end": 9224,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 8747,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 9224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8993,
											"end": 9002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8986,
											"end": 9007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9088,
											"end": 9090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9071,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9150,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9123,
											"end": 9125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9168,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9211,
											"end": 9217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9168,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9168,
											"end": 9218,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9168,
											"end": 9218,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9168,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9218,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9224,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 9224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9229,
											"end": 9416,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 9229,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9408,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9369,
											"end": 9410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9369,
											"end": 9410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9357,
											"end": 9359,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9416,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9421,
											"end": 9642,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9421,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9609,
											"end": 9615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 9590,
											"end": 9636,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9647,
											"end": 10063,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 9647,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9849,
											"end": 9851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9831,
											"end": 9852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9831,
											"end": 9852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9831,
											"end": 9852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9890,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9868,
											"end": 9886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9861,
											"end": 9891,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9961,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9971,
											"end": 10021,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10056,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10038,
											"end": 10057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9821,
											"end": 10063,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10068,
											"end": 10472,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 10068,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10282,
											"end": 10312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10382,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10343,
											"end": 10345,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10383,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10430,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10465,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10472,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10477,
											"end": 10884,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 10477,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10679,
											"end": 10681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10682,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10720,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10691,
											"end": 10721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10791,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10752,
											"end": 10754,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10755,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10730,
											"end": 10792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10823,
											"end": 10825,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10842,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10877,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10859,
											"end": 10878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10859,
											"end": 10878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10884,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10889,
											"end": 11294,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 10889,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11132,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11103,
											"end": 11133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11169,
											"end": 11203,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11164,
											"end": 11166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11142,
											"end": 11204,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11237,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11213,
											"end": 11252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11287,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11269,
											"end": 11288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11063,
											"end": 11294,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11299,
											"end": 11700,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 11299,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11501,
											"end": 11503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11483,
											"end": 11504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11540,
											"end": 11542,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11613,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11574,
											"end": 11576,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11614,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11647,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11630,
											"end": 11648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11630,
											"end": 11648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11623,
											"end": 11658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11690,
											"end": 11693,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11705,
											"end": 12119,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 11705,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11907,
											"end": 11909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11889,
											"end": 11910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11946,
											"end": 11948,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11926,
											"end": 11944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11926,
											"end": 11944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11926,
											"end": 11944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11919,
											"end": 11949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12019,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11980,
											"end": 11982,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12051,
											"end": 12053,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11879,
											"end": 12119,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12124,
											"end": 12530,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 12124,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12326,
											"end": 12328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12308,
											"end": 12329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12438,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12399,
											"end": 12401,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12384,
											"end": 12402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12377,
											"end": 12439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12470,
											"end": 12472,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12455,
											"end": 12473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12455,
											"end": 12473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12448,
											"end": 12488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12520,
											"end": 12523,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12298,
											"end": 12530,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12535,
											"end": 12940,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 12535,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12719,
											"end": 12740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12719,
											"end": 12740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12719,
											"end": 12740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12815,
											"end": 12849,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12810,
											"end": 12812,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 12850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12881,
											"end": 12883,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12930,
											"end": 12933,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12915,
											"end": 12934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12915,
											"end": 12934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12940,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12945,
											"end": 13350,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 12945,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13147,
											"end": 13149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13129,
											"end": 13150,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13129,
											"end": 13150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13129,
											"end": 13150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13186,
											"end": 13188,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13166,
											"end": 13184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13159,
											"end": 13189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13225,
											"end": 13259,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13220,
											"end": 13222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13260,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13291,
											"end": 13293,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13276,
											"end": 13294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13276,
											"end": 13294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13269,
											"end": 13308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13340,
											"end": 13343,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13325,
											"end": 13344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13119,
											"end": 13350,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13355,
											"end": 13759,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 13355,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13598,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13569,
											"end": 13599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13635,
											"end": 13669,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13608,
											"end": 13670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13701,
											"end": 13703,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13679,
											"end": 13717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13749,
											"end": 13752,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13734,
											"end": 13753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13734,
											"end": 13753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13529,
											"end": 13759,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13764,
											"end": 13941,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13764,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13898,
											"end": 13900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13883,
											"end": 13901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13883,
											"end": 13901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 13941,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13946,
											"end": 14194,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 13946,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14120,
											"end": 14145,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14120,
											"end": 14145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14120,
											"end": 14145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14176,
											"end": 14178,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14154,
											"end": 14188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14110,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14093,
											"end": 14111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14093,
											"end": 14111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14194,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14199,
											"end": 14391,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14199,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14199,
											"end": 14391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14316,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14290,
											"end": 14296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14287,
											"end": 14317,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14286,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14284,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14284,
											"end": 14286,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14320,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 14320,
											"end": 14338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14320,
											"end": 14338,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 14320,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14380,
											"end": 14384,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14361,
											"end": 14378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14378,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14391,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14396,
											"end": 14524,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 14396,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14467,
											"end": 14468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14463,
											"end": 14469,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14457,
											"end": 14470,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14456,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14454,
											"end": 14456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14473,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 14473,
											"end": 14491,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14473,
											"end": 14491,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14473,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14509,
											"end": 14518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14444,
											"end": 14524,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14529,
											"end": 14909,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14529,
											"end": 14909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14614,
											"end": 14615,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 14604,
											"end": 14616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14604,
											"end": 14616,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14662,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14663,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14726,
											"end": 14730,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 14718,
											"end": 14724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14731,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14771,
											"end": 14777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14768,
											"end": 14782,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14748,
											"end": 14766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14745,
											"end": 14783,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14835,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14820,
											"end": 14823,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14816,
											"end": 14836,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14864,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14850,
											"end": 14865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14888,
											"end": 14892,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14885,
											"end": 14886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14878,
											"end": 14893,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14909,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14914,
											"end": 15163,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 14914,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15026,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15005,
											"end": 15018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15001,
											"end": 15028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14989,
											"end": 15029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15044,
											"end": 15078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15044,
											"end": 15078,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15041,
											"end": 15103,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15040,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15038,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15038,
											"end": 15040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15142,
											"end": 15144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15135,
											"end": 15157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 15163,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15168,
											"end": 15303,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 15168,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15168,
											"end": 15303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15228,
											"end": 15245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15228,
											"end": 15245,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15227,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 15225,
											"end": 15227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15295,
											"end": 15296,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15284,
											"end": 15297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15284,
											"end": 15297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15215,
											"end": 15303,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15308,
											"end": 15435,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 15308,
											"end": 15435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15369,
											"end": 15379,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15364,
											"end": 15367,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15357,
											"end": 15358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15350,
											"end": 15381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 15404,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15390,
											"end": 15405,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15424,
											"end": 15428,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15421,
											"end": 15422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15414,
											"end": 15429,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15567,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 15440,
											"end": 15567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15511,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15496,
											"end": 15499,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15492,
											"end": 15512,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15489,
											"end": 15490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15482,
											"end": 15513,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15532,
											"end": 15536,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 15529,
											"end": 15530,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15522,
											"end": 15537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15560,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15553,
											"end": 15554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15546,
											"end": 15561,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15757,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 15572,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15649,
											"end": 15650,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15631,
											"end": 15647,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15628,
											"end": 15651,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15625,
											"end": 15627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15625,
											"end": 15627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 15625,
											"end": 15627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15700,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15694,
											"end": 15697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15689,
											"end": 15692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15674,
											"end": 15701,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15730,
											"end": 15740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15728,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15721,
											"end": 15741,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15615,
											"end": 15757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15615,
											"end": 15757,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15762,
											"end": 16433,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 15762,
											"end": 16433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15762,
											"end": 16433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15843,
											"end": 15847,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15825,
											"end": 15841,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15822,
											"end": 15848,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15851,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 15851,
											"end": 15856,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15885,
											"end": 15887,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15879,
											"end": 15888,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15946,
											"end": 15971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15946,
											"end": 15971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15879,
											"end": 15888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 15972,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15995,
											"end": 16006,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16025,
											"end": 16041,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16078,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16131,
											"end": 16133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16124,
											"end": 16128,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16116,
											"end": 16122,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16134,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16104,
											"end": 16106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16096,
											"end": 16102,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16093,
											"end": 16107,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16090,
											"end": 16135,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 16138,
											"end": 16143,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 16087,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16175,
											"end": 16181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16173,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16165,
											"end": 16182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16154,
											"end": 16182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16154,
											"end": 16182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16211,
											"end": 16214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16205,
											"end": 16215,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16227,
											"end": 16241,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 16244,
											"end": 16249,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16309,
											"end": 16325,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 16303,
											"end": 16307,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16295,
											"end": 16331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16288,
											"end": 16292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16279,
											"end": 16285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16274,
											"end": 16277,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16270,
											"end": 16286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16263,
											"end": 16332,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 16335,
											"end": 16340,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 16260,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16351,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16393,
											"end": 16399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16385,
											"end": 16391,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16381,
											"end": 16400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16377,
											"end": 16407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16375,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16351,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 16351,
											"end": 16408,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16351,
											"end": 16408,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16351,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16424,
											"end": 16427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16424,
											"end": 16427,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15809,
											"end": 16433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15809,
											"end": 16433,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16438,
											"end": 16571,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 16438,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16514,
											"end": 16546,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16514,
											"end": 16546,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16504,
											"end": 16547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16504,
											"end": 16547,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16494,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 16494,
											"end": 16496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16561,
											"end": 16562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16558,
											"end": 16559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16551,
											"end": 16563,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16494,
											"end": 16496,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 16494,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16571,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e0abbc9d659af94706b3b8d46e404f0349c5c56aceed6d870fbfaca14856663364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e0abbc9d659af94706b3b8d46e404f0349c5c56aceed6d870fbfaca14856663364736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAB 0xBC SWAP14 PUSH6 0x9AF94706B3B8 0xD4 PUSH15 0x404F0349C5C56ACEED6D870FBFACA1 0x48 JUMP PUSH7 0x3364736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e0abbc9d659af94706b3b8d46e404f0349c5c56aceed6d870fbfaca14856663364736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAB 0xBC SWAP14 PUSH6 0x9AF94706B3B8 0xD4 PUSH15 0x404F0349C5C56ACEED6D870FBFACA1 0x48 JUMP PUSH7 0x3364736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0abbc9d659af94706b3b8d46e404f0349c5c56aceed6d870fbfaca14856663364736f6c63430008010033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> nft/ERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "nft/ERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/ERC1155.sol": {
				"ast": {
					"absolutePath": "nft/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"BeeItems": [
							247
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						],
						"Ownable": [
							352
						]
					},
					"id": 248,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1449,
							"src": "31:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 353,
							"src": "108:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1448,
										"src": "206:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "216:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:0"
								}
							],
							"contractDependencies": [
								352,
								1448,
								1570,
								1626,
								1945,
								1969,
								1981
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								352,
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "BeeItems",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7824407f",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nodeType": "VariableDeclaration",
									"scope": 247,
									"src": "232:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "334:8:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "291:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 13,
											"modifierName": {
												"id": 11,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1448,
												"src": "283:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "283:50:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 247,
									"src": "269:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "414:397:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "ids",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "425:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 25,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 26,
															"nodeType": "ArrayTypeName",
															"src": "425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"id": 31,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "462:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "448:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 28,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 29,
															"nodeType": "ArrayTypeName",
															"src": "452:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:47:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "483:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 36,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ArrayTypeName",
															"src": "483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"id": 42,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 39,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 40,
															"nodeType": "ArrayTypeName",
															"src": "514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "483:51:0"
											},
											{
												"body": {
													"id": 74,
													"nodeType": "Block",
													"src": "611:94:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 58,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 62,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 59,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 60,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "634:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "630:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "626:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 63,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "626:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "626:24:0"
														},
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 66,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 70,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 67,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 68,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "677:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "673:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "665:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "665:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "665:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "575:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 51,
																	"name": "tokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "592:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "580:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "579:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"initializationExpression": {
													"assignments": [
														46
													],
													"declarations": [
														{
															"constant": false,
															"id": 46,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 75,
															"src": "550:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 45,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 48,
													"initialValue": {
														"id": 47,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "550:23:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "606:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "606:3:0"
												},
												"nodeType": "ForStatement",
												"src": "545:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "738:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 80,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 76,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "715:40:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "780:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 86,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "794:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "780:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "766:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "766:37:0"
											}
										]
									},
									"functionSelector": "71ac14e6",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:0"
										}
									],
									"name": "mintBatchWithNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "idsNumber",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "379:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:19:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 247,
									"src": "350:461:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "900:340:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "ids",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "911:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 103,
															"nodeType": "ArrayTypeName",
															"src": "911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"id": 108,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "948:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "934:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ArrayTypeName",
															"src": "938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:47:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "969:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 113,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ArrayTypeName",
															"src": "969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [
														{
															"id": 119,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "996:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ArrayTypeName",
															"src": "1000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:51:0"
											},
											{
												"body": {
													"id": 151,
													"nodeType": "Block",
													"src": "1085:82:0",
													"statements": [
														{
															"expression": {
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 135,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1100:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 139,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 136,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1104:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 137,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1108:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1104:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1100:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 140,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1100:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "1100:18:0"
														},
														{
															"expression": {
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 143,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 147,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1141:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 145,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1145:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1141:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1133:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1133:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1133:22:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 127,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1060:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 128,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1060:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"initializationExpression": {
													"assignments": [
														123
													],
													"declarations": [
														{
															"constant": false,
															"id": 123,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 152,
															"src": "1036:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 122,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1036:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 125,
													"initialValue": {
														"id": 124,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1048:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1036:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1080:3:0",
														"subExpression": {
															"id": 132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 134,
													"nodeType": "ExpressionStatement",
													"src": "1080:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1031:136:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1199:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1199:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 158,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 153,
														"name": "safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1177:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1177:55:0"
											}
										]
									},
									"functionSelector": "9416308e",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithNumber",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "idsNumber",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:46:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:0"
									},
									"scope": 247,
									"src": "819:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1304:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 170,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1315:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 168,
											"modifierName": {
												"id": 167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1295:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:9:0"
										}
									],
									"name": "setURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 247,
									"src": "1250:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1484:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 193,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 190,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1495:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1495:34:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1554:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 199,
																"name": "ids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1568:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1554:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1540:38:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1469:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1469:9:0"
										}
									],
									"name": "mintBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1377:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 178,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ArrayTypeName",
													"src": "1377:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1399:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:79:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:0"
									},
									"scope": 247,
									"src": "1346:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1650:37:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"name": "tokenSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "1668:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "1661:18:0"
											}
										]
									},
									"functionSelector": "ad974f4c",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:9:0"
									},
									"scope": 247,
									"src": "1594:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1788:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 224,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "1834:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1834:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1823:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 229,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1876:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1876:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 227,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1850:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1850:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1823:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1801:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1986:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1971:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1971:25:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": true,
													"src": "2007:13:0",
													"subExpression": {
														"id": 242,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2007:13:0"
											}
										]
									},
									"functionSelector": "092f2dbf",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brun",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:72:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:0:0"
									},
									"scope": 247,
									"src": "1695:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "184:1847:0"
						}
					],
					"src": "2:2029:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1945
						],
						"Ownable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 250,
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 1946,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "668:7:1"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"contractDependencies": [
								1945
							],
							"contractKind": "contract",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								1945
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 261,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 265,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 352,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 352,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 294,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 352,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 352,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"id": 339,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 346,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 345,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 352,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 353,
							"src": "639:1820:1"
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 355,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1571,
							"src": "119:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 356,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1612,
							"src": "144:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1627,
							"src": "177:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 358,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1924,
							"src": "224:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 359,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1946,
							"src": "258:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 360,
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1970,
							"src": "292:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "575:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1969,
										"src": "584:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "592:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "602:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:2"
								}
							],
							"contractDependencies": [
								1570,
								1626,
								1945,
								1969,
								1981
							],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "634:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "709:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 376,
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "831:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 382,
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_uri",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "1023:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 385,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1124:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1142:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1134:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "uri_",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1104:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:2"
									},
									"scope": 1448,
									"src": "1092:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1968,
										1980
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1329:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1358:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "1378:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1570",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1415:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1435:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1626",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1507:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1448_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1968,
															"src": "1483:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1339:180:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1969,
												"src": "1297:6:2"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1981,
												"src": "1305:7:2"
											}
										],
										"src": "1288:25:2"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1248:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1323:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:2"
									},
									"scope": 1448,
									"src": "1221:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1625
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2000:28:2",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2017:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2010:11:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1938:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1985:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:2"
									},
									"scope": 1448,
									"src": "1925:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1508
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2265:133:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2283:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 463,
														"indexExpression": {
															"id": 462,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2379:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2383:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 466,
												"nodeType": "Return",
												"src": "2362:29:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:2"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2189:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2206:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2256:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:2"
									},
									"scope": 1448,
									"src": "2170:228:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2728:335:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 483,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "2746:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2765:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:2"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "batchBalances",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2832:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2879:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:2"
											},
											{
												"body": {
													"id": 527,
													"nodeType": "Block",
													"src": "2952:74:2",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "2966:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "2980:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 518,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 472,
																				"src": "2995:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 520,
																			"indexExpression": {
																				"id": 519,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3004:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 521,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "3008:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3012:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 517,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "2985:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2926:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2930:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 528,
															"src": "2911:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:2",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "2949:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:2"
											},
											{
												"expression": {
													"id": 529,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3043:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 530,
												"nodeType": "Return",
												"src": "3036:20:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2579:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 471,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2606:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2706:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:2"
									},
									"scope": 1448,
									"src": "2555:508:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1529
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3215:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "3244:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3258:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3268:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3225:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3158:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3176:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:2"
									},
									"scope": 1448,
									"src": "3131:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3456:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 560,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3473:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3492:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 564,
													"indexExpression": {
														"id": 563,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3501:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "3466:44:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:2"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3394:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3450:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:2"
									},
									"scope": 1448,
									"src": "3351:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1553
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3753:220:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3784:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 584,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "3792:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "3825:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 589,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "3831:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3808:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3939:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3945:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3949:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3953:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3961:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "3921:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:2"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3619:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3641:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3661:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3681:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3705:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:2"
									},
									"scope": 1448,
									"src": "3584:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4239:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4270:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 624,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "4278:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4311:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 629,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "4317:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "4294:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4439:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4449:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4463:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4416:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:2"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4085:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4107:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4127:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4157:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4191:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:2"
									},
									"scope": 1448,
									"src": "4045:430:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5088:634:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5106:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:2"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5175:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5194:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5238:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5248:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5254:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 679,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5276:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 678,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5258:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 682,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5299:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5281:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5308:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 674,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5217:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5324:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 689,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5346:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 691,
														"indexExpression": {
															"id": 690,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5356:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 693,
													"indexExpression": {
														"id": 692,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "5383:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5398:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:2"
											},
											{
												"id": 712,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:2",
												"statements": [
													{
														"expression": {
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 702,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5485:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 705,
																	"indexExpression": {
																		"id": 703,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5495:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"id": 704,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5499:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5507:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5521:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5547:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5557:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5561:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 718,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "5568:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5605:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5615:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5621:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5625:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5629:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "5590:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "5585:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5678:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5688:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5694:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5698:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5702:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 735,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5710:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 729,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "5647:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "4961:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "4983:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5003:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5023:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5047:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1448,
									"src": "4925:797:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "6256:857:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 756,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6274:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 758,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6288:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "6365:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "6434:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "6453:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6497:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6507:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6513:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6517:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 784,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6522:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6531:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 779,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "6476:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:2"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "6588:370:2",
													"statements": [
														{
															"assignments": [
																800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 800,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6602:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 804,
															"initialValue": {
																"baseExpression": {
																	"id": 801,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6615:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"id": 802,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6619:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:2"
														},
														{
															"assignments": [
																806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6635:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"baseExpression": {
																	"id": 807,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6652:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6660:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:2"
														},
														{
															"assignments": [
																812
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6677:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 818,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 813,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "6699:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"id": 814,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6709:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"id": 816,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6713:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 820,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "6740:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 821,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6755:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 819,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:2"
														},
														{
															"id": 836,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 826,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "6850:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 829,
																				"indexExpression": {
																					"id": 827,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "6860:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 830,
																			"indexExpression": {
																				"id": 828,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "6864:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 831,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "6872:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 832,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "6886:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 835,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 837,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "6920:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 840,
																		"indexExpression": {
																			"id": 838,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "6930:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 839,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "6934:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "6941:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "6567:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6571:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														789
													],
													"declarations": [
														{
															"constant": false,
															"id": 789,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "6552:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 791,
													"initialValue": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:2",
														"subExpression": {
															"id": 796,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6585:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6987:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7007:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "6973:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "6968:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7067:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7077:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7083:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7087:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "7101:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7031:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6109:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6131:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6151:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6181:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6215:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:2"
									},
									"scope": 1448,
									"src": "6068:1045:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "7992:30:2",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "8002:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "8009:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:2"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "7953:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:2"
									},
									"scope": 1448,
									"src": "7936:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "8524:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8542:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:2"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8607:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "8626:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8670:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8692:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8714:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8696:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "8737:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8719:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "8649:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:2"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "8762:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "8772:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "8783:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8819:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8841:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8845:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8849:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "8804:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "EmitStatement",
												"src": "8799:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8898:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8924:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8928:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "8936:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "8867:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:2"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8419:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8439:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8459:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8483:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:2"
									},
									"scope": 1448,
									"src": "8395:553:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "9447:561:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "9465:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "9537:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 978,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "9551:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:2"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "9621:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "9640:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9684:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "9706:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9710:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 997,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "9715:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "9724:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 989,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "9663:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:2"
											},
											{
												"body": {
													"id": 1024,
													"nodeType": "Block",
													"src": "9781:60:2",
													"statements": [
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1012,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "9795:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1017,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1013,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "9805:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1015,
																			"indexExpression": {
																				"id": 1014,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "9809:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1018,
																	"indexExpression": {
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "9813:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1019,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "9820:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"id": 1020,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "9828:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "9760:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1006,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9764:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"initializationExpression": {
													"assignments": [
														1002
													],
													"declarations": [
														{
															"constant": false,
															"id": 1002,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1025,
															"src": "9745:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1004,
													"initialValue": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:2",
														"subExpression": {
															"id": 1009,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "9776:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1011,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:2"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9870:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "9892:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9896:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1034,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "9901:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1026,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "9856:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "EmitStatement",
												"src": "9851:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9956:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "9978:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "9982:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1045,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "9987:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "9996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "9920:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:2"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9322:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9342:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 955,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9372:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 958,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 959,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9406:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:2"
									},
									"scope": 1448,
									"src": "9293:715:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10352:526:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "10370:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:2"
											},
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10439:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "10458:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10502:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "10512:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "10548:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10530:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10571:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1085,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10553:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1075,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "10481:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:2"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10594:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1093,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "10616:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "10626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "10630:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "10653:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1101,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "10668:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:2"
											},
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:2",
												"statements": [
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "10749:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"id": 1107,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "10759:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1108,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "10763:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1111,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "10771:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1112,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10785:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10832:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "10842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "10860:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "10864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "10817:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "10812:59:2"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10272:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10294:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10314:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:2"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:2"
									},
									"scope": 1448,
									"src": "10248:630:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "11201:738:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11219:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1152,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11295:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1154,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11309:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:2"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "11379:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1162,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "11398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11442:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "11452:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11470:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1173,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11475:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1165,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "11421:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:2"
											},
											{
												"body": {
													"id": 1226,
													"nodeType": "Block",
													"src": "11539:323:2",
													"statements": [
														{
															"assignments": [
																1189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1189,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11553:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1193,
															"initialValue": {
																"baseExpression": {
																	"id": 1190,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11566:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1192,
																"indexExpression": {
																	"id": 1191,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11570:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:2"
														},
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11586:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"baseExpression": {
																	"id": 1196,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11603:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1198,
																"indexExpression": {
																	"id": 1197,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11611:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:2"
														},
														{
															"assignments": [
																1201
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1201,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11628:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1200,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1207,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1202,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "11650:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"id": 1203,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "11660:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1206,
																"indexExpression": {
																	"id": 1205,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "11664:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "11691:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1210,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "11706:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1208,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1214,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:2"
														},
														{
															"id": 1225,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1215,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "11795:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1218,
																				"indexExpression": {
																					"id": 1216,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "11805:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1219,
																			"indexExpression": {
																				"id": 1217,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11809:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "11817:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1221,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "11831:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11518:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1182,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11522:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"initializationExpression": {
													"assignments": [
														1178
													],
													"declarations": [
														{
															"constant": false,
															"id": 1178,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1227,
															"src": "11503:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1180,
													"initialValue": {
														"hexValue": "30",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:2",
														"subExpression": {
															"id": 1185,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11534:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11891:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "11901:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11919:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1236,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1228,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "11877:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "11872:60:2"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11101:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11123:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1133,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1134,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11153:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:2"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:2"
									},
									"scope": 1448,
									"src": "11072:867:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "12197:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12215:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1252,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "12224:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:2"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1257,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "12288:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1260,
															"indexExpression": {
																"id": 1258,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12307:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1259,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12314:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1262,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "12326:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "12364:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12381:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1265,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12349:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "12344:46:2"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12111:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12134:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12160:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:2"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:2"
									},
									"scope": 1448,
									"src": "12074:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "13543:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13370:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13396:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13418:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13438:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13468:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1284,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13502:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:2"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:2"
									},
									"scope": 1448,
									"src": "13331:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "13744:532:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "13758:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "13758:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "13754:516:2",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "13775:495:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1333,
																		"nodeType": "Block",
																		"src": "13892:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1322,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "13914:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1323,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "13926:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1592,
																							"src": "13926:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1332,
																				"nodeType": "IfStatement",
																				"src": "13910:152:2",
																				"trueBody": {
																					"id": 1331,
																					"nodeType": "Block",
																					"src": "13971:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1328,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1327,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1329,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1330,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1334,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1321,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1320,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"scope": 1334,
																				"src": "13875:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1319,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:2"
																	},
																	"src": "13866:210:2"
																},
																{
																	"block": {
																		"id": 1342,
																		"nodeType": "Block",
																		"src": "14111:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1339,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "14136:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1338,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1341,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1343,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1337,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1336,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"scope": 1343,
																				"src": "14089:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1335,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:2"
																	},
																	"src": "14077:81:2"
																},
																{
																	"block": {
																		"id": 1348,
																		"nodeType": "Block",
																		"src": "14165:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1344,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1347,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1349,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "13832:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "13842:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "13848:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "13852:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "13860:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "13810:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1309,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "13793:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1592,
																	"src": "13793:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1350,
															"nodeType": "TryStatement",
															"src": "13789:471:2"
														}
													]
												}
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13600:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13626:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13668:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13688:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "13712:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:2"
									},
									"scope": 1448,
									"src": "13551:725:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "14500:574:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "14514:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14514:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "IfStatement",
												"src": "14510:558:2",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "14531:537:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1398,
																		"nodeType": "Block",
																		"src": "14685:189:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1387,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "14707:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1388,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "14719:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1610,
																							"src": "14719:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1397,
																				"nodeType": "IfStatement",
																				"src": "14703:157:2",
																				"trueBody": {
																					"id": 1396,
																					"nodeType": "Block",
																					"src": "14769:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1393,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1392,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1394,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1395,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1399,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1386,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1385,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"scope": 1399,
																				"src": "14655:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1384,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:2"
																	},
																	"src": "14629:245:2"
																},
																{
																	"block": {
																		"id": 1407,
																		"nodeType": "Block",
																		"src": "14909:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1404,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1401,
																							"src": "14934:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1403,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1406,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1408,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1402,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"scope": 1408,
																				"src": "14887:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:2"
																	},
																	"src": "14875:81:2"
																},
																{
																	"block": {
																		"id": 1413,
																		"nodeType": "Block",
																		"src": "14963:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1410,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1409,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1412,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1414,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1378,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "14593:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "14603:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "14609:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1381,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "14614:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "14623:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1375,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "14566:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1374,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14549:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "14549:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1415,
															"nodeType": "TryStatement",
															"src": "14545:513:2"
														}
													]
												}
											}
										]
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14336:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14362:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14384:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14404:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1361,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1362,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14434:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1364,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1365,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14468:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:2"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:2"
									},
									"scope": 1448,
									"src": "14282:792:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "15164:109:2",
										"statements": [
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "array",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "15174:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1430,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:2"
											},
											{
												"expression": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1438,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "15225:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1440,
														"indexExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1441,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "15236:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:2"
											},
											{
												"expression": {
													"id": 1444,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1431,
													"src": "15261:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1445,
												"nodeType": "Return",
												"src": "15254:12:2"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "element",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15107:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:2"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15146:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:2"
									},
									"scope": 1448,
									"src": "15080:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1449,
							"src": "555:14720:2"
						}
					],
					"src": "94:15182:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC165": [
							1981
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1451,
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 1982,
							"src": "120:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1453,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "357:7:3"
									},
									"id": 1454,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"contractDependencies": [
								1981
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1452,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1570,
							"linearizedBaseContracts": [
								1570,
								1981
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1467,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "518:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "544:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "566:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "586:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "598:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:3"
									},
									"src": "497:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1482,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "797:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "831:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "861:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "889:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1475,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1476,
													"nodeType": "ArrayTypeName",
													"src": "889:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "912:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1479,
													"nodeType": "ArrayTypeName",
													"src": "912:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:3"
									},
									"src": "768:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1491,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1114:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1139:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1165:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:3"
									},
									"src": "1093:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1498,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1544:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1558:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:3"
									},
									"src": "1534:44:3"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1781:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1798:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:3"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1833:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:3"
									},
									"scope": 1570,
									"src": "1762:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2065:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1511,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2094:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:3"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2165:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:3"
									},
									"scope": 1570,
									"src": "2041:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:3"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:3"
									},
									"scope": 1570,
									"src": "2442:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2700:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2741:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:3"
									},
									"scope": 1570,
									"src": "2657:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3352:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3374:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3438:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:3"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:3"
									},
									"scope": 1570,
									"src": "3317:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "3956:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1560,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "3988:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4024:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:3"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:3"
									},
									"scope": 1570,
									"src": "3874:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1571,
							"src": "335:3726:3"
						}
					],
					"src": "95:3967:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1573,
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 1982,
							"src": "128:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "247:7:4"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:4"
								}
							],
							"contractDependencies": [
								1981
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1981
							],
							"name": "IERC1155Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:4",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1118:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1144:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1166:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1186:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1209:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:4"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1253:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:4"
									},
									"scope": 1611,
									"src": "1082:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:4",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2290:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2338:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2370:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2405:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2449:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:4"
									},
									"scope": 1611,
									"src": "2249:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1612,
							"src": "217:2242:4"
						}
					],
					"src": "103:2357:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC165": [
							1981
						]
					},
					"id": 1627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1614,
							"nodeType": "ImportDirective",
							"scope": 1627,
							"sourceUnit": 1571,
							"src": "142:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1616,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "397:8:5"
									},
									"id": 1617,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:5"
								}
							],
							"contractDependencies": [
								1570,
								1981
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1615,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1626,
							"linearizedBaseContracts": [
								1626,
								1570,
								1981
							],
							"name": "IERC1155MetadataURI",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "622:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:5"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "657:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:5"
									},
									"scope": 1626,
									"src": "609:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1627,
							"src": "364:310:5"
						}
					],
					"src": "117:558:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1923
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "837:311:6",
										"statements": [
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1034:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:6",
														"valueSize": 1
													}
												],
												"id": 1640,
												"nodeType": "InlineAssembly",
												"src": "1056:61:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1133:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1644,
												"nodeType": "Return",
												"src": "1126:15:6"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "791:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "831:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:6"
									},
									"scope": 1923,
									"src": "771:377:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "2136:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1657,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1655,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2179:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:6"
											},
											{
												"assignments": [
													1666,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "2231:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1667,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "2249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2271:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "2300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:6"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2084:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2111:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:6"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:6"
									},
									"scope": 1923,
									"src": "2065:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3208:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "3238:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3246:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1690,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1697,
															1717
														],
														"referencedDeclaration": 1717,
														"src": "3225:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1695,
												"nodeType": "Return",
												"src": "3218:67:6"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3157:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3194:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:6"
									},
									"scope": 1923,
									"src": "3119:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3661:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3700:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3708:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "3717:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "3678:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1715,
												"nodeType": "Return",
												"src": "3671:59:6"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3569:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3647:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:6"
									},
									"scope": 1923,
									"src": "3514:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4242:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4281:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "4289:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4295:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "4259:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1735,
												"nodeType": "Return",
												"src": "4252:94:6"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4190:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4228:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:6"
									},
									"scope": 1923,
									"src": "4099:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "4780:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4823:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1764,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "4900:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1763,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "4889:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:6"
											},
											{
												"assignments": [
													1770,
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "4953:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "4967:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "5020:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1773,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "4994:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "5013:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5059:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1782,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5068:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1783,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5080:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1780,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5042:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1785,
												"nodeType": "Return",
												"src": "5035:58:6"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4641:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4665:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4715:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4766:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:6"
									},
									"scope": 1923,
									"src": "4601:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "5377:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "5413:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1797,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1804,
															1839
														],
														"referencedDeclaration": 1839,
														"src": "5394:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "5387:80:6"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5305:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5321:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5363:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:6"
									},
									"scope": 1923,
									"src": "5277:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "5816:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1818,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "5845:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5834:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:6"
											},
											{
												"assignments": [
													1824,
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "5905:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "5919:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1825,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"id": 1829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "5964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "5946:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "6003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1834,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "6012:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1835,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6024:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1832,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5986:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1837,
												"nodeType": "Return",
												"src": "5979:58:6"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5695:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5719:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5746:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5802:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:6"
									},
									"scope": 1923,
									"src": "5658:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "6320:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6358:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "6366:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1849,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1856,
															1891
														],
														"referencedDeclaration": 1891,
														"src": "6337:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1854,
												"nodeType": "Return",
												"src": "6330:84:6"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6253:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6269:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:6"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6306:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:6"
									},
									"scope": 1923,
									"src": "6223:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "6762:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1870,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "6791:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1869,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "6780:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:6"
											},
											{
												"assignments": [
													1876,
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "6853:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1875,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "6867:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"arguments": [
														{
															"id": 1881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "6914:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1879,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "6894:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1886,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "6962:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1887,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "6974:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1884,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6936:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1889,
												"nodeType": "Return",
												"src": "6929:58:6"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6646:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6670:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6697:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:6"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6748:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:6"
									},
									"scope": 1923,
									"src": "6607:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "7374:532:6",
										"statements": [
											{
												"condition": {
													"id": 1903,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1894,
													"src": "7388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "7445:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1907,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "7529:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1917,
																"nodeType": "Block",
																"src": "7837:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1914,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "7862:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1913,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1916,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:6"
																	}
																]
															},
															"id": 1918,
															"nodeType": "IfStatement",
															"src": "7525:365:6",
															"trueBody": {
																"id": 1912,
																"nodeType": "Block",
																"src": "7552:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:6"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1911,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "7384:516:6",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "7397:42:6",
													"statements": [
														{
															"expression": {
																"id": 1904,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "7418:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1902,
															"id": 1905,
															"nodeType": "Return",
															"src": "7411:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7271:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7304:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:6"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7360:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:6"
									},
									"scope": 1923,
									"src": "7214:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1924,
							"src": "179:7729:6"
						}
					],
					"src": "86:7823:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1945
						]
					},
					"id": 1946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1945,
							"linearizedBaseContracts": [
								1945
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1931,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1933,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1945,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1940,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1942,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1945,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1946,
							"src": "608:235:7"
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1969
						],
						"IERC165": [
							1981
						]
					},
					"id": 1970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1948,
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 1982,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1950,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "754:7:8"
									},
									"id": 1951,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"contractDependencies": [
								1981
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1949,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969,
								1981
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1962,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1961,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1981",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1966,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1969,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1970,
							"src": "726:260:8"
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1981
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1981,
							"linearizedBaseContracts": [
								1981
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1981,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1982,
							"src": "405:447:9"
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			}
		}
	}
}